{"version":3,"file":"jquery.router.js","sources":["../../src/js/utils/constants.js","../../src/js/utils/libs.js","../../src/js/jquery.router.js"],"sourcesContent":["/**\n * Router constants\n */\nexport const HASH_CHANGE = 'hashchange';\nexport const POP_STATE = 'popstate';\nexport const ROUTE_CHANGED = 'route.changed';\nexport const REG_ROUTE_PARAMS = /:[^\\/]+/g;\nexport const REG_PATHNAME = /^\\/(?=[^?]*)/;\nexport const REG_HASH_QUERY = /\\?.+/;\nexport const INVALID_ROUTE = 'Route string is not a pure route';","import $ from 'jquery';\nimport LZStorage from 'lzstorage';\n\n// Object containing a map of attached handlers\nconst store = new LZStorage({\n    compression: true\n});\nexport const libs = {\n    getDataFromStore(path) {\n        const paths = $.extend({}, store.get('routeStore'));\n        return paths[path];\n    },\n    setDataToStore(path, data) {\n        const paths = $.extend({}, store.get('routeStore'));\n        $.extend(paths, {\n            [path]: data\n        });\n        return store.set('routeStore', paths, true);\n    },\n    handlers: []\n};","/**!\n * jQuery router plugin\n * This file contains SPA router methods to handle routing mechanism in single page applications (SPA). Supported versions IE9+, Chrome, Safari, Firefox\n *\n * @project      Jquery Routing Plugin\n * @date         2019-05-05\n * @author       Sachin Singh <ssingh.300889@gmail.com>\n * @dependencies jQuery, jquerydeparam, lzstorage\n * @version      3.0.0-beta.0\n */\n\nimport $ from 'jquery';\nimport deparam from 'jquerydeparam';\nimport { POP_STATE, HASH_CHANGE, ROUTE_CHANGED, REG_ROUTE_PARAMS, INVALID_ROUTE, REG_HASH_QUERY, REG_PATHNAME } from './utils/constants';\nimport { libs } from './utils/libs';\n\n// Variable to check if browser supports history API properly    \nconst isHistorySupported = !!(history && history.pushState);\n\n// Variable to ignore hashchange event\nlet ignoreHashChange = false;\n\n/**\n * Trims leading/trailing special characters\n * @param {string} param Parameters\n */\nfunction sanitize(str) {\n    return str.replace(/^([^a-zA-Z0-9]+)|([^a-zA-Z0-9]+)$/g, \"\");\n}\n\n/**\n * Triggers \"routeChanged\" event unless \"noTrigger\" flag is true\n */\nfunction triggerRoute(route, eventType, hash = false, noTrigger = false) {\n    if (noTrigger) {\n        ignoreHashChange = false;\n    } else {\n        router.api.trigger(ROUTE_CHANGED, {\n            route,\n            eventType,\n            hash\n        });\n    }\n}\n\n/**\n * Checks if given route is valid\n * @param {string} route Route string\n */\nfunction isValidRoute(route) {\n    if (typeof route !== \"string\") {\n        return false;\n    };\n    return REG_PATHNAME.test(route);\n}\n\n/**\n * Adds a query string\n * @param {string} route Route string\n * @param {string} qString Query string\n * @param {boolean} appendQString Append query string flag\n */\nfunction resolveQuery(route, queryString, append) {\n    if (typeof queryString === 'string') {\n        queryString = queryString.trim();\n        if (queryString.charAt(0) === '?') {\n            queryString = queryString.substring(1);\n        }\n        if (append && queryString) {\n            return `${route}${window.location.search}&${queryString}`;\n        }\n        if (!append && queryString) {\n            return `${route}?${queryString}`;\n        }\n    }\n    return route;\n}\n\n/**\n * Converts current query string into an object\n */\nfunction getQueryParams() {\n    const qsObject = deparam(window.location.search);\n    const hashStringParams = {};\n    if (window.location.hash.match(REG_HASH_QUERY)) {\n        $.extend(hashStringParams, deparam(window.location.hash.match(REG_HASH_QUERY)[0]));\n    }\n    return $.extend(qsObject, hashStringParams);\n}\n\n/**\n * Set route for given view\n * @param {string|object} oRoute Route string or object\n * @param {boolean} replaceMode Replace mode\n * @param {boolean} noTrigger Do not trigger handler\n */\nfunction execRoute(route, replaceMode, noTrigger) {\n    const routeObject = typeof route === 'string' ? { route } : $.extend({}, route);\n    $.extend(routeObject, {\n        replaceMode,\n        noTrigger\n    });\n    const { route: sroute, replaceMode: rm, noTrigger: nt, queryString: qs, data, title = null, appendQuery } = routeObject;\n    if (typeof sroute === 'string') {\n        const isHash = sroute.charAt(0) === '#' ? 1 : 0;\n        let [pureRoute, queryString] = sroute.trim().split('?');\n        const routeMethod = `${rm ? 'replace' : 'push'}State`;\n        queryString = queryString || qs;\n        ignoreHashChange = nt;\n        pureRoute = pureRoute.substring(isHash);\n        if (isValidRoute(pureRoute)) {\n            libs.setDataToStore(pureRoute, data);\n            if (isHistorySupported && !isHash) {\n                history[routeMethod]({ data }, title, resolveQuery(pureRoute, queryString, appendQuery));\n                if (!nt) {\n                    router.api.trigger(ROUTE_CHANGED, {\n                        route: pureRoute,\n                        eventType: POP_STATE,\n                        hash: false\n                    });\n                }\n            } else if (rm) {\n                window.location.replace(`#${resolveQuery(pureRoute, queryString, appendQuery)}`);\n            } else {\n                window.location.hash = resolveQuery(pureRoute, queryString, appendQuery);\n            }\n        } else {\n            throw new Error(INVALID_ROUTE);\n        }\n    }\n}\n\n/**\n * Attaches a route handler function\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nfunction bindRoute(route, handler) {\n    let originalHandler = handler;\n    const element = this;\n    if (typeof handler === 'function') {\n        handler = handler.bind(this);\n    }\n    // Resolve generic route\n    if (typeof route === 'function') {\n        originalHandler = route;\n        handler = route.bind(this);\n        route = '*';\n    }\n    // Check existence\n    const exists = libs.handlers.filter(ob => {\n        let test = (ob.originalHandler === originalHandler && ob.route === route);\n        if (this) {\n            test = test && ob.element === this;\n        }\n        return test;\n    }).length;\n    // Attach handler\n    if (!exists && typeof handler === 'function') {\n        libs.handlers.push({\n            eventName: ROUTE_CHANGED,\n            originalHandler,\n            handler,\n            element,\n            route\n        });\n    }\n    // Execute handler if matches current route (Replaces init method in version 2.0)\n    const { pathname, hash } = window.location;\n    [pathname, hash].forEach(currentPath => {\n        const isHash = currentPath.charAt(0) === '#' ? 1 : 0;\n        const { hasMatch, data, params } = testRoute(route, currentPath);\n        if (hasMatch && typeof handler === 'function') {\n            handler({\n                route: currentPath,\n                hash: isHash === 1,\n                eventName: isHash ? HASH_CHANGE : POP_STATE,\n                data,\n                params,\n                query: getQueryParams()\n            });\n        }\n    });\n}\n\n/**\n * Unbinds route handlers\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nfunction unbindRoute(route, handler) {\n    const args = arguments;\n    if (args.length === 0) {\n        libs.handlers.length = 0;\n    }\n    libs.handlers = libs.handlers.filter(ob => {\n        if (args.length === 1 && typeof args[0] === 'string') {\n            return ob.route !== route;\n        }\n        // Check for generic route\n        if (args.length === 1 && typeof args[0] === 'function') {\n            handler = args[0];\n            route = '*'; // Generic route\n        }\n        return !(ob.route === route && ob.handler === handler);\n    });\n}\n\n\n/**\n * Compares route with current URL\n * @param {string} route Route string\n * @param {string} url Current url\n * @param {object} params Parameters\n */\nfunction testRoute(route, url) {\n    if (url.charAt(0) === '#') {\n        url = url.substring(1);\n    }\n    const [path] = url.split('?');\n    const data = $.extend({}, libs.getDataFromStore(path));\n    const params = {};\n    let hasMatch = false;\n    REG_ROUTE_PARAMS.lastIndex = 0;\n    if (REG_ROUTE_PARAMS.test(route)) {\n        const pathRegex = new RegExp(route.replace(/\\//g, \"\\\\/\").replace(/:[^\\/\\\\]+/g, \"([^\\\\/]+)\"));\n        if (pathRegex.test(url)) {\n            hasMatch = true;\n            REG_ROUTE_PARAMS.lastIndex = 0;\n            const keys = [...route.match(REG_ROUTE_PARAMS)].map(sanitize);\n            const values = [...url.match(pathRegex)];\n            values.shift();\n            keys.forEach((key, index) => {\n                params[key] = values[index];\n            });\n        }\n    } else {\n        hasMatch = isValidRoute(url) && ((route === url) || (route === '*'));\n    }\n    return {\n        hasMatch,\n        data,\n        params\n    };\n}\n\n/**\n * Triggers a router event\n * @param {string} eventName Name of route event\n * @param {object} params Parameters\n */\nfunction execListeners(eventName, routeConfig) {\n    const { hash: isHash } = routeConfig;\n    const { hash, pathname } = window.location;\n    libs.handlers.forEach(ob => {\n        if (ob.eventName === eventName) {\n            const { hasMatch, data, params } = testRoute(ob.route, (\n                (isHistorySupported && !isHash)\n                    ? pathname\n                    : (\n                        hash || pathname\n                    )\n            ));\n            if (\n                !isHistorySupported\n                && !hash\n            ) {\n                // Fallback to hash routes for older browsers\n                window.location.replace(`#${pathname}`);\n            } else if (hasMatch) {\n                ob.handler($.extend(routeConfig, {\n                    data,\n                    params,\n                    query: getQueryParams()\n                }));\n            }\n        }\n    });\n}\n\n/**\n * Initializes router events\n */\nfunction initRouterEvents() {\n    $(window).on(`${POP_STATE} ${HASH_CHANGE}`, function (e) {\n        const isHash = e.type === 'hashchange';\n        const noTrigger = ignoreHashChange;\n        return triggerRoute.apply(this, [\n            window.location[isHash ? 'hash' : 'pathname'],\n            e.type,\n            isHash,\n            noTrigger\n        ]);\n    });\n}\n\nconst router = {\n    // Events object\n    api: {\n        /**\n         * Triggers a custom route event\n         * @param {string} eventName Name of event\n         * @param {object} params Parameters object\n         */\n        trigger(eventName, routeConfig) {\n            return execListeners.apply(this, [eventName, routeConfig]);\n        }\n    },\n    /**\n     * Sets a route url\n     * @param {string|object} route Route object or URL\n     * @param {boolean} replaceMode Flag to enable replace mode\n     * @param {boolean} noTrigger Flag to disable handler while changing route\n     */\n    set() {\n        return execRoute.apply(this, arguments);\n    },\n    // Flag to check if history API is supported in current browser\n    isHistorySupported\n}\n\n/**\n * Attaches a route handler\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction route() {\n    return bindRoute.apply(this, arguments);\n}\n\n/**\n * Detaches a route handler\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction unroute() {\n    return unbindRoute.apply(this, arguments);\n}\n\n// Hooking route and router to jQuery\nif (typeof $ === 'function') {\n    $.route = $.prototype.route = route;\n    $.unroute = $.prototype.unroute = unroute;\n    $.router = router;\n}\n\ninitRouterEvents();\n\nexport { router, route };"],"names":["HASH_CHANGE","POP_STATE","ROUTE_CHANGED","REG_ROUTE_PARAMS","REG_PATHNAME","REG_HASH_QUERY","INVALID_ROUTE","store","LZStorage","compression","libs","getDataFromStore","path","paths","$","extend","get","setDataToStore","data","set","handlers","isHistorySupported","history","pushState","ignoreHashChange","sanitize","str","replace","triggerRoute","route","eventType","hash","noTrigger","router","api","trigger","isValidRoute","test","resolveQuery","queryString","append","trim","charAt","substring","window","location","search","getQueryParams","qsObject","deparam","hashStringParams","match","execRoute","replaceMode","routeObject","sroute","rm","nt","qs","title","appendQuery","isHash","split","pureRoute","routeMethod","Error","bindRoute","handler","originalHandler","element","bind","exists","filter","ob","length","push","eventName","pathname","forEach","currentPath","testRoute","hasMatch","params","query","unbindRoute","args","arguments","url","lastIndex","pathRegex","RegExp","keys","map","values","shift","key","index","execListeners","routeConfig","initRouterEvents","on","e","type","apply","unroute","prototype"],"mappings":"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"}