{"version":3,"file":"silkrouter.js","sources":["../../src/js/utils/constants.js","../../src/js/utils/libs.js","../../src/js/utils/helpers.js","../../src/js/silkrouter.js"],"sourcesContent":["/**\n * Router constants\n */\nexport const HASH_CHANGE = 'hashchange';\nexport const POP_STATE = 'popstate';\nexport const ROUTE_CHANGED = 'route.changed';\nexport const REG_ROUTE_PARAMS = /:[^\\/]+/g;\nexport const REG_PATHNAME = /^\\/(?=[^?]*)/;\nexport const REG_HASH_QUERY = /\\?.+/;\nexport const INVALID_ROUTE = 'Route string is not a pure route';","import LZStorage from 'lzstorage';\n\n// Object containing a map of attached handlers\nconst store = new LZStorage({\n    compression: true\n});\nexport const libs = {\n    getDataFromStore(path, isHash) {\n        const paths = store.get('routeStore') || {};\n        return paths[`${isHash ? '#' : ''}${path}`];\n    },\n    setDataToStore(path, isHash, data) {\n        let paths = store.get('routeStore') || {};\n        if (paths[path]) {\n            if (\n                !data\n                || (\n                    typeof data === 'object'\n                    && Object.keys(data).length === 0\n                )\n            ) {\n                // Don't change existing data\n                return false;\n            }\n        }\n        paths = {\n            ...paths,\n            [`${isHash ? '#' : ''}${path}`]: data\n        };\n        return store.set('routeStore', paths, true);\n    },\n    handlers: []\n};","import deparam from 'deparam.js';\nimport { POP_STATE, HASH_CHANGE, ROUTE_CHANGED, REG_ROUTE_PARAMS, INVALID_ROUTE, REG_HASH_QUERY, REG_PATHNAME } from './constants';\nimport { libs } from './libs';\n\n/**\n * Trims leading/trailing special characters\n * @private\n * @param {string} param Parameters\n */\nfunction sanitize(str) {\n    return str.replace(/^([^a-zA-Z0-9]+)|([^a-zA-Z0-9]+)$/g, \"\");\n}\n\n/**\n * Triggers \"route.changed\" event\n * @private\n * @param {object} config Route event configuration\n * @param {object} config.originalEvent Original \"popstate\" event object\n * @param {string} config.route route string\n * @param {string} config.type Type of event\n * @param {boolean} config.hash Flag that determines type of event expected\n * @param {object} config.originalData Original data persisted by history API\n */\nfunction triggerRoute({ originalEvent = {}, route, type, hash = false, originalData = {} }) {\n    router.api.trigger(\n        ROUTE_CHANGED,\n        {\n            originalEvent,\n            route,\n            type,\n            hash\n        },\n        originalData\n    );\n}\n\n/**\n * Checks if given route is valid\n * @private\n * @param {string} route Route string\n */\nfunction isValidRoute(route) {\n    if (typeof route !== \"string\") {\n        return false;\n    };\n    return REG_PATHNAME.test(route);\n}\n\n/**\n * Adds a query string\n * @private\n * @param {string} route Route string\n * @param {string} qString Query string\n * @param {boolean} appendQString Append query string flag\n */\nfunction resolveQuery(route = '', isHash = false, queryString = '', append = false) {\n    queryString = queryString.charAt(0) === '?' ? queryString.substring(1).trim() : queryString.trim();\n    if (!isHash) {\n        if (append) {\n            if (queryString) {\n                return `${route}${location.search}&${queryString}`;\n            }\n            return `${route}${location.search}`;\n        } else if (queryString) {\n            return `${route}?${queryString}`;\n        }\n        return route;\n    } else if (queryString) {\n        return `${location.pathname}${location.search}#${route}?${queryString}`;\n    }\n    return `${location.pathname}${location.search}#${route}`;\n}\n\n/**\n * Converts current query string into an object\n * @private\n */\nfunction getQueryParams() {\n    const qsObject = deparam(window.location.search);\n    let hashStringParams = {};\n    if (window.location.hash.match(REG_HASH_QUERY)) {\n        hashStringParams = {\n            ...hashStringParams,\n            ...deparam(window.location.hash.match(REG_HASH_QUERY)[0])\n        };\n    }\n    return {\n        ...qsObject,\n        ...hashStringParams\n    };\n}\n\n/**\n * Set route for given view\n * @private\n * @param {string|object} oRoute Route string or object\n * @param {boolean} replaceMode Replace mode\n * @param {boolean} noTrigger Do not trigger handler\n */\nexport function execRoute(route = {}, replaceMode = false, noTrigger = false) {\n    let routeObject = typeof route === 'string' ? { route } : {\n        ...route\n    };\n    routeObject = {\n        ...routeObject,\n        replaceMode,\n        noTrigger\n    };\n    const { route: sroute, replaceMode: rm, noTrigger: nt, queryString: qs = '', data, title = null, appendQuery } = routeObject;\n    if (typeof sroute === 'string') {\n        const isHash = sroute.charAt(0) === '#' ? 1 : 0;\n        let [pureRoute, queryString = ''] = sroute.trim().split('?');\n        const routeMethod = `${rm ? 'replace' : 'push'}State`;\n        queryString = queryString || qs;\n        pureRoute = pureRoute.substring(isHash);\n        if (isValidRoute(pureRoute)) {\n            libs.setDataToStore(pureRoute, isHash === 1, data);\n            const completeRoute = resolveQuery(pureRoute, isHash === 1, queryString, appendQuery);\n            history[routeMethod]({ data }, title, completeRoute);\n            if (!nt) {\n                triggerRoute(\n                    {\n                        route: `${isHash ? '#' : ''}${pureRoute}`,\n                        type: (isHash ? HASH_CHANGE : POP_STATE),\n                        hash: (isHash === 1)\n                    }\n                );\n            }\n        } else {\n            throw new Error(INVALID_ROUTE);\n        }\n    }\n}\n\n/**\n * Attaches a route handler function\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport function bindRoute(route, handler) {\n    // Resolve generic route\n    if (typeof route === 'function') {\n        handler = route;\n        route = '*';\n    }\n    const startIndex = route.charAt(0) === '#' ? 1 : 0;\n    route = route.substring(startIndex);\n    // Check existence\n    const exists = libs.handlers.filter(ob => {\n        return (ob.handler === handler && ob.route === route);\n    }).length;\n    // Attach handler\n    if (!exists && typeof handler === 'function') {\n        libs.handlers.push({\n            eventName: ROUTE_CHANGED,\n            handler,\n            route,\n            hash: startIndex === 1\n        });\n    }\n    // Execute handler if matches current route (Replaces init method in version 2.0)\n    const { pathname, hash } = window.location;\n    const paths = startIndex === 1 ? [hash] : [pathname, hash];\n    paths.filter(path => path.trim()).forEach(currentPath => {\n        const pathIndex = currentPath.charAt(0) === '#' ? 1 : 0;\n        const { hasMatch, data, params } = testRoute(route, currentPath);\n        if (hasMatch && typeof handler === 'function') {\n            handler({\n                route: currentPath,\n                hash: pathIndex === 1,\n                eventName: pathIndex === 1 ? HASH_CHANGE : POP_STATE,\n                data,\n                params,\n                query: getQueryParams()\n            });\n        }\n    });\n}\n\n/**\n * Unbinds route handlers\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport function unbindRoute(route, handler) {\n    const args = arguments;\n    if (args.length === 0) {\n        libs.handlers.length = 0;\n    }\n    libs.handlers = libs.handlers.filter(ob => {\n        if (args.length === 1 && typeof args[0] === 'string') {\n            return ob.route !== route;\n        }\n        // Check for generic route\n        if (args.length === 1 && typeof args[0] === 'function') {\n            handler = args[0];\n            route = '*'; // Generic route\n        }\n        return !(ob.route === route && ob.handler === handler);\n    });\n}\n\n\n/**\n * Compares route with current URL\n * @private\n * @param {string} route Route string\n * @param {string} url Current url\n * @param {object} params Parameters\n */\nfunction testRoute(route, url, originalData = {}) {\n    const isHash = url.charAt(0) === '#';\n    if (isHash) {\n        url = url.substring(1);\n    }\n    const [path] = url.split('?');\n    if (!!Object.keys(originalData).length) {\n        libs.setDataToStore(path, isHash, originalData); // Sync store with event data.\n    }\n    const data = libs.getDataFromStore(path, isHash);\n    const params = {};\n    let hasMatch = false;\n    REG_ROUTE_PARAMS.lastIndex = 0;\n    if (REG_ROUTE_PARAMS.test(route)) {\n        const pathRegex = new RegExp(route.replace(/\\//g, \"\\\\/\").replace(/:[^\\/\\\\]+/g, \"([^\\\\/]+)\"));\n        if (pathRegex.test(url)) {\n            hasMatch = true;\n            REG_ROUTE_PARAMS.lastIndex = 0;\n            const keys = [...route.match(REG_ROUTE_PARAMS)].map(sanitize);\n            const values = [...url.match(pathRegex)];\n            values.shift();\n            keys.forEach((key, index) => {\n                params[key] = values[index];\n            });\n        }\n    } else {\n        hasMatch = isValidRoute(url) && ((route === url) || (route === '*'));\n    }\n    return {\n        hasMatch,\n        data,\n        params\n    };\n}\n\n/**\n * Triggers a router event\n * @private\n * @param {string} eventName Name of route event\n * @param {object} params Parameters\n */\nexport function execListeners(eventName, routeConfig, originalData = {}) {\n    const { hash: isHash } = routeConfig;\n    const { hash, pathname } = window.location;\n    libs.handlers.forEach(ob => {\n        if (ob.eventName === eventName) {\n            const { hasMatch, data, params } = testRoute(\n                ob.route,\n                (isHash ? hash : pathname),\n                originalData\n            );\n            if (hasMatch && (!ob.hash || (ob.hash && isHash))) {\n                ob.handler({\n                    ...routeConfig,\n                    data,\n                    params,\n                    query: getQueryParams()\n                });\n            }\n        }\n    });\n}\n\n/**\n * Initializes router events\n * @private\n */\nexport function initRouterEvents() {\n    window.addEventListener(`${POP_STATE}`, function (e) {\n        const completePath = `${location.pathname}${location.hash}`;\n        const [pathname, hashstring] = completePath.split('#');\n        let originalData = {};\n        if (e.state) {\n            const { data } = e.state;\n            if (data) {\n                originalData = data;\n            }\n        }\n        triggerRoute({\n            originalEvent: e,\n            route: pathname,\n            type: e.type,\n            hash: false,\n            originalData\n        });\n        if (hashstring) {\n            triggerRoute({\n                originalEvent: e,\n                route: `#${hashstring}`,\n                type: HASH_CHANGE,\n                hash: true,\n                originalData\n            });\n        }\n    });\n}","import { execListeners, execRoute, bindRoute, unbindRoute, initRouterEvents } from './utils/helpers';\n\n/**\n * @namespace router\n * @type {object}\n */\nconst router = {\n    /**\n     * @namespace api\n     * @memberof router\n     * @type {object}\n     */\n    api: {\n        /**\n         * Triggers a custom route event\n         * @method trigger\n         * @memberof router.api\n         * @param {...*} arguments\n         */\n        trigger() {\n            return execListeners.apply(this, arguments);\n        }\n    },\n    /**\n     * Sets a route url\n     * @public\n     * @param {string|object} route Route object or URL\n     * @param {boolean} replaceMode Flag to enable replace mode\n     * @param {boolean} noTrigger Flag to disable handler while changing route\n     */\n    set() {\n        return execRoute.apply(this, arguments);\n    }\n}\n\n/**\n * Attaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction route() {\n    return bindRoute.apply(this, arguments);\n}\n\n/**\n * Detaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction unroute() {\n    return unbindRoute.apply(this, arguments);\n}\n\ninitRouterEvents();\n\nexport { router, route, unroute };"],"names":["HASH_CHANGE","POP_STATE","ROUTE_CHANGED","REG_ROUTE_PARAMS","REG_PATHNAME","REG_HASH_QUERY","INVALID_ROUTE","store","LZStorage","compression","libs","getDataFromStore","path","isHash","paths","get","setDataToStore","data","Object","keys","length","set","handlers","sanitize","str","replace","triggerRoute","originalEvent","route","type","hash","originalData","router","api","trigger","isValidRoute","test","resolveQuery","queryString","append","charAt","substring","trim","location","search","pathname","getQueryParams","qsObject","deparam","window","hashStringParams","match","execRoute","replaceMode","noTrigger","routeObject","sroute","rm","nt","qs","title","appendQuery","split","pureRoute","routeMethod","completeRoute","history","Error","bindRoute","handler","startIndex","exists","filter","ob","push","eventName","forEach","currentPath","pathIndex","testRoute","hasMatch","params","query","unbindRoute","args","arguments","url","lastIndex","pathRegex","RegExp","map","values","shift","key","index","execListeners","routeConfig","initRouterEvents","addEventListener","e","completePath","hashstring","state","apply","unroute"],"mappings":"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"}