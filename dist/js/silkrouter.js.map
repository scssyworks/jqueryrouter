{"version":3,"file":"silkrouter.js","sources":["../../src/js/utils/constants.js","../../src/js/utils/utils.js","../../src/js/utils/vars.js","../../src/js/utils/params.js","../../src/js/utils/query.js","../../src/js/utils/deparam.js","../../src/js/utils/assign.js","../../src/js/utils/libs.js","../../src/js/api/resolveQuery/index.js","../../src/js/api/getQueryParams/index.js","../../src/js/api/testRoute/index.js","../../src/js/api/trigger/index.js","../../src/js/api/triggerRoute/index.js","../../src/js/api/execRoute/index.js","../../src/js/api/bindRoute/index.js","../../src/js/api/unbindRoute/index.js","../../src/js/api/initRouterEvents/index.js","../../src/js/silkrouter.js"],"sourcesContent":["/**\n * Router constants\n */\nexport const HASH_CHANGE = 'hashchange';\nexport const POP_STATE = 'popstate';\nexport const ROUTE_CHANGED = 'route.changed';\nexport const REG_ROUTE_PARAMS = /:[^\\/]+/g;\nexport const REG_PATHNAME = /^\\/(?=[^?]*)/;\nexport const REG_HASH_QUERY = /\\?.+/;\nexport const REG_TRIM_SPECIALCHARS = /^([^a-zA-Z0-9]+)|([^a-zA-Z0-9]+)$/g;\nexport const INVALID_ROUTE = 'Route string is not a pure route';\nexport const CASE_INSENSITIVE_FLAG = '$$';","import { REG_PATHNAME } from './constants';\n\n/**\n * Shorthand for Array.isArray\n */\nexport const isArr = Array.isArray;\n\n/**\n * Safely trims string\n * @param {string} str String\n */\nexport function trim(str) {\n    return ((typeof str === 'string') ? str.trim() : '');\n}\n\n/**\n * Checks if input is a number\n * @param {*} key \n */\nexport function isNumber(key) {\n    key = trim(`${key}`);\n    if (['null', 'undefined', ''].indexOf(key) > -1) return false;\n    return !isNaN(Number(key));\n}\n\n/**\n * Checks if key is a true object\n * @param {*} key Any type of value\n */\nexport function isObject(key) {\n    return (key != null && !isArr(key) && key.toString() === \"[object Object]\");\n}\n\n/**\n * Sets default value\n * @param {*} value Any value\n * @param {*} defaultValue Default value if value is undefined\n */\nexport function setDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\n\n/**\n * Converts array like object to array\n * @param {any[]} arr Arraylike object\n */\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n\n/**\n * Checks if given route is valid\n * @private\n * @param {string} route Route string\n */\nexport function isValidRoute(route) {\n    return (typeof route === 'string' && REG_PATHNAME.test(route));\n}","export const loc = window.location;\n","import { REG_ROUTE_PARAMS, REG_TRIM_SPECIALCHARS } from './constants';\nimport { toArray } from './utils';\nimport { loc } from './vars';\n\n/**\n * Parses current path and returns params object\n * @private\n * @param {string} expr Route expression\n * @param {string} path URL path\n * @returns {object}\n */\nexport function extractParams(expr, path = loc.pathname) {\n    if (REG_ROUTE_PARAMS.test(expr)) {\n        const pathRegex = new RegExp(expr.replace(/\\//g, \"\\\\/\").replace(/:[^\\/\\\\]+/g, \"([^\\\\/]+)\"));\n        const params = {};\n        if (pathRegex.test(path)) {\n            REG_ROUTE_PARAMS.lastIndex = 0;\n            const keys = toArray(expr.match(REG_ROUTE_PARAMS)).map(key => key.replace(REG_TRIM_SPECIALCHARS, ''));\n            const values = toArray(path.match(pathRegex));\n            values.shift();\n            keys.forEach((key, index) => {\n                params[key] = values[index];\n            });\n        }\n        return params;\n    }\n    return {};\n}","import { isArr } from './utils';\n\n/**\n * Builds query string recursively\n * @private\n * @param {string[]} queryStringParts List of query string key value pairs\n * @param {*} key Key\n * @param {*} obj Value\n */\nfunction buildQueryString(queryStringParts, key, obj) {\n    if (obj && typeof obj === 'object') {\n        const isCurrObjArray = isArr(obj);\n        Object.keys(obj).forEach(obKey => {\n            let qKey = isCurrObjArray ? '' : obKey;\n            buildQueryString(queryStringParts, `${key}[${qKey}]`, obj[obKey]);\n        });\n    } else if (['string', 'number', 'boolean', 'undefined', 'object'].indexOf(typeof obj) > -1) {\n        queryStringParts.push(`${encodeURIComponent(key)}=${encodeURIComponent(obj)}`);\n    }\n}\n\n/**\n * Converts an object to a query string\n * @private\n * @param {object} obj Object which should be converted to a string\n * @returns {string}\n */\nexport function toQueryString(obj) {\n    let queryStringParts = [];\n    if (obj && typeof obj === 'object') {\n        Object.keys(obj).forEach(key => {\n            buildQueryString(queryStringParts, key, obj[key]);\n        });\n        return queryStringParts.join('&');\n    } else if (typeof obj === 'string') {\n        return obj;\n    }\n    return '';\n}","import { loc } from './vars';\nimport { isArr, trim, isNumber, isObject, setDefault } from './utils';\n\n/**\n * Checks if query parameter key is a complex notation\n * @param {string} q \n */\nfunction ifComplex(q) {\n    return (/\\[/.test(q));\n}\n\n/**\n * Converts query string to JavaScript object\n * @param {string} qs query string argument (defaults to url query string)\n */\nfunction deparam(qs, coerce) {\n    qs = trim(setDefault(qs, loc.search));\n    coerce = setDefault(coerce, true);\n    if (qs.charAt(0) === \"?\") {\n        qs = qs.replace(\"?\", \"\");\n    }\n    const queryParamList = qs.split(\"&\");\n    const queryObject = {};\n    if (qs) {\n        queryParamList.forEach((qq) => {\n            const qArr = qq.split(\"=\").map(part => decodeURIComponent(part));\n            if (ifComplex(qArr[0])) {\n                complex.apply(this, [].concat(qArr).concat([queryObject, coerce]));\n            } else {\n                simple.apply(this, [qArr, queryObject, false, coerce]);\n            }\n        });\n    }\n    return queryObject;\n}\n\n/**\n * Converts an array to an object\n * @param {array} arr \n */\nfunction toObject(arr) {\n    var convertedObj = {};\n    if (isArr(arr)) {\n        arr.forEach((value, index) => {\n            convertedObj[index] = value;\n        });\n    }\n    return convertedObj;\n}\n\n/**\n * Resolves an array to object if required\n * @param {array} ob An array object\n * @param {boolean} isNumber flag to test if next key is number\n */\nfunction resolve(ob, isNextNumber) {\n    if (typeof ob === \"undefined\") return isNextNumber ? [] : {};\n    return isNextNumber ? ob : toObject(ob);\n}\n\n/**\n * Resolves the target object for next iteration\n * @param {Object} ob current reference object\n * @param {string} nextProp reference property in current object\n */\nfunction resolveObj(ob, nextProp) {\n    if (isObject(ob)) return { ob };\n    if (isArr(ob) || typeof ob === \"undefined\") return { ob: resolve(ob, isNumber(nextProp)) };\n    return { ob: [ob], push: ob !== null };\n}\n\n/**\n * Handles complex query parameters\n * @param {string} key \n * @param {string} value \n * @param {Object} obj \n */\nfunction complex(key, value, obj, doCoerce) {\n    doCoerce = setDefault(doCoerce, true);\n    const match = key.match(/([^\\[]+)\\[([^\\[]*)\\]/) || [];\n    if (match.length === 3) {\n        let prop = match[1];\n        let nextProp = match[2];\n        key = key.replace(/\\[([^\\[]*)\\]/, \"\");\n        if (ifComplex(key)) {\n            if (nextProp === \"\") nextProp = \"0\";\n            key = key.replace(/[^\\[]+/, nextProp);\n            complex(key, value, (obj[prop] = resolveObj(obj[prop], nextProp).ob), doCoerce);\n        } else if (nextProp) {\n            const { ob, push } = resolveObj(obj[prop], nextProp);\n            obj[prop] = ob;\n            if (push) {\n                const tempObj = {};\n                tempObj[nextProp] = (doCoerce ? coerce(value) : value);\n                obj[prop].push(tempObj);\n            } else {\n                obj[prop][nextProp] = (doCoerce ? coerce(value) : value);\n            }\n        } else {\n            simple([match[1], value], obj, true);\n        }\n    }\n}\n\n/**\n * Handles simple query\n * @param {array} qArr \n * @param {Object} queryObject \n * @param {boolean} toArray \n */\nfunction simple(qArr, queryObject, toArray, doCoerce) {\n    doCoerce = setDefault(doCoerce, true);\n    let key = qArr[0];\n    let value = qArr[1];\n    if (doCoerce) {\n        value = coerce(value);\n    }\n    if (key in queryObject) {\n        queryObject[key] = isArr(queryObject[key]) ? queryObject[key] : [queryObject[key]];\n        queryObject[key].push(value);\n    } else {\n        queryObject[key] = toArray ? [value] : value;\n    }\n}\n\n/**\n * Restores values to their original type\n * @param {string} value undefined or string value\n */\nfunction coerce(value) {\n    if (value == null) return \"\";\n    if (typeof value !== \"string\") return value;\n    value = trim(value);\n    if (isNumber(value)) return +value;\n    switch (value) {\n        case \"null\": return null;\n        case \"undefined\": return undefined;\n        case \"true\": return true;\n        case \"false\": return false;\n        case \"NaN\": return NaN;\n        default: return value;\n    }\n}\n\n// Library encapsulation\nfunction lib() {\n    return deparam.apply(this, arguments);\n}\n\nexport { lib as deparam };","/* eslint-disable */\n\n/**\n * Inner loop function for assign\n * @private\n * @param {object} ref Argument object\n * @param {object} target First object\n */\nfunction loopFunc(ref, target) {\n    if (ref != null && typeof ref === 'object') {\n        Object.keys(ref).forEach(function (key) {\n            target[key] = ref[key];\n        });\n    }\n}\n\n/**\n * Polyfill for Object.assign only smaller and with less features\n * @private\n * @returns {object}\n */\nexport function assign() {\n    let i = 0;\n    const target = typeof arguments[0] !== 'object' || arguments[0] == null ? {} : arguments[0];\n    for (i = 1; i < arguments.length; i++) {\n        loopFunc(arguments[i], target);\n    }\n    return target;\n}\n/* eslint-enable */","import LZStorage from 'lzstorage';\nimport { assign } from './assign';\n\nconst store = new LZStorage({\n    compression: true\n});\n\n/**\n * Store library\n * @namespace libs\n * @type {object}\n * @private\n */\nexport const libs = {\n    /**\n     * Get's decompressed data from store\n     * @private\n     * @method getDataFromStore\n     * @memberof libs\n     * @param {string} path URL path\n     * @param {boolean} isHash Flag to determine if it's a pathname or hash\n     * @returns {*}\n     */\n    getDataFromStore(path, isHash) {\n        const paths = store.get('routeStore') || {};\n        return paths[`${isHash ? '#' : ''}${path}`];\n    },\n    /**\n     * @private\n     * @method setDataToStore\n     * @memberof libs\n     * @param {string} path URL path\n     * @param {boolean} isHash Flag to determine if it's a pathname or hash\n     * @param {any} data Data\n     * @returns {boolean}\n     */\n    setDataToStore(path, isHash, data) {\n        let paths = store.get('routeStore') || {};\n        if (paths[path]) {\n            if (\n                !data\n                || (\n                    typeof data === 'object'\n                    && Object.keys(data).length === 0\n                )\n            ) {\n                // Don't change existing data\n                return false;\n            }\n        }\n        const newPath = {};\n        newPath[`${isHash ? '#' : ''}${path}`] = data;\n        paths = assign({}, paths, newPath);\n        return store.set('routeStore', paths, true);\n    },\n    /**\n     * @namespace handlers\n     * @type {object[]}\n     * @private\n     */\n    handlers: []\n};","import { loc } from '../../utils/vars';\nimport { trim } from '../../utils/utils';\n\n/**\n * Adds a query string\n * @private\n * @param {string} route Route string\n * @param {string} qString Query string\n * @param {boolean} appendQString Append query string flag\n */\nexport default function resolveQuery(route, isHash, queryString, append) {\n    queryString = trim(queryString.substring((queryString.charAt(0) === '?' ? 1 : 0)));\n    if (!isHash) {\n        if (append) {\n            return `${route}${loc.search}${(queryString ? `&${queryString}` : '')}`;\n        }\n        return `${route}${(queryString ? `?${queryString}` : '')}`;\n    }\n    return `${loc.pathname}${loc.search}#${route}${queryString ? `?${queryString}` : ''}`;\n}","import { deparam } from '../../utils/deparam';\nimport { loc } from '../../utils/vars';\nimport { assign } from '../../utils/assign';\nimport { REG_HASH_QUERY } from '../../utils/constants';\n\n/**\n * Converts current query string into an object\n * @private\n */\nexport default function getQueryParams() {\n    const qsObject = deparam(loc.search, false);\n    let hashStringParams = {};\n    const hashQuery = loc.hash.match(REG_HASH_QUERY);\n    if (hashQuery) {\n        hashStringParams = assign({}, hashStringParams, deparam(hashQuery[0], false));\n    }\n    return assign({}, qsObject, hashStringParams);\n}","import { libs } from '../../utils/libs';\nimport { extractParams } from '../../utils/params';\nimport { isValidRoute } from '../../utils/utils';\nimport { assign } from '../../utils/assign';\n\n/**\n * Compares route with current URL\n * @private\n * @param {string} route Route string\n * @param {string} url Current url\n * @param {object} params Parameters\n */\nexport default function testRoute(route, url, originalData) {\n    originalData = assign(originalData);\n    const isHash = url.charAt(0) === '#';\n    if (isHash) {\n        url = url.substring(1);\n    }\n    const path = url.split('?')[0];\n    if (!!Object.keys(originalData).length) {\n        libs.setDataToStore(path, isHash, originalData); // Sync store with event data.\n    }\n    const data = libs.getDataFromStore(path, isHash);\n    const params = extractParams(route, url);\n    let hasMatch = Object.keys(params).length > 0 || (\n        isValidRoute(url) && ((route === url) || (route === '*'))\n    );\n    return {\n        hasMatch,\n        data,\n        params\n    };\n}","import { loc } from '../../utils/vars';\nimport { libs } from '../../utils/libs';\nimport getQueryParams from '../getQueryParams';\nimport testRoute from '../testRoute';\nimport { assign } from '../../utils/assign';\n\n/**\n * Triggers a router event\n * @private\n * @param {string} eventName Name of route event\n * @param {object} params Parameters\n */\nexport default function execListeners(eventName, routeConfig, originalData) {\n    originalData = assign(originalData);\n    const { hash: isHash } = routeConfig;\n    const { hash, pathname } = loc;\n    libs.handlers.forEach(ob => {\n        if (ob.eventName === eventName) {\n            let cRoute = ob.route;\n            let cCurrentPath = (isHash ? hash : pathname);\n            if (ob.isCaseInsensitive) {\n                cRoute = cRoute.toLowerCase();\n                cCurrentPath = cCurrentPath.toLowerCase();\n            }\n            const { hasMatch, data, params } = testRoute(\n                cRoute,\n                cCurrentPath,\n                originalData\n            );\n            if (hasMatch && (!ob.hash || (ob.hash && isHash))) {\n                ob.handler(assign({}, routeConfig, {\n                    data,\n                    params,\n                    query: getQueryParams()\n                }));\n            }\n        }\n    });\n}","import { ROUTE_CHANGED } from '../../utils/constants';\nimport trigger from '../trigger';\n\n/**\n * Triggers \"route.changed\" event\n * @private\n * @param {object} config Route event configuration\n * @param {object} config.originalEvent Original \"popstate\" event object\n * @param {string} config.route route string\n * @param {string} config.type Type of event\n * @param {boolean} config.hash Flag that determines type of event expected\n * @param {object} config.originalData Original data persisted by history API\n */\nexport default function triggerRoute({ originalEvent, route, type, hash, originalData }) {\n    trigger(\n        ROUTE_CHANGED,\n        {\n            originalEvent,\n            route,\n            type,\n            hash\n        },\n        originalData\n    );\n}","import { assign } from '../../utils/assign';\nimport { trim, isValidRoute } from '../../utils/utils';\nimport { toQueryString } from '../../utils/query';\nimport { libs } from '../../utils/libs';\nimport resolveQuery from '../resolveQuery';\nimport triggerRoute from '../triggerRoute';\nimport { INVALID_ROUTE, HASH_CHANGE, POP_STATE } from '../../utils/constants';\n\n/**\n * Set route for given view\n * @private\n * @param {string|object} oRoute Route string or object\n * @param {boolean} replaceMode Replace mode\n * @param {boolean} noTrigger Do not trigger handler\n */\nexport default function execRoute(route, replaceMode, noTrigger) {\n    let routeObject = typeof route === 'string' ? { route } : assign({}, route);\n    routeObject = assign({}, routeObject, {\n        replaceMode,\n        noTrigger\n    });\n    const {\n        route: sroute,\n        replaceMode: rm,\n        noTrigger: nt,\n        queryString: qs = '',\n        data,\n        title = null,\n        appendQuery\n    } = routeObject;\n    if (typeof sroute === 'string') {\n        const isHash = sroute.charAt(0) === '#' ? 1 : 0;\n        const routeParts = trim(sroute).split('?');\n        let pureRoute = routeParts[0];\n        let queryString = trim(routeParts[1]);\n        const routeMethod = `${rm ? 'replace' : 'push'}State`;\n        queryString = toQueryString(queryString || qs);\n        pureRoute = pureRoute.substring(isHash);\n        if (isValidRoute(pureRoute)) {\n            libs.setDataToStore(pureRoute, isHash === 1, data);\n            const completeRoute = resolveQuery(pureRoute, isHash === 1, queryString, appendQuery);\n            history[routeMethod]({ data }, title, completeRoute);\n            if (!nt) {\n                triggerRoute(\n                    {\n                        originalEvent: {},\n                        route: `${isHash ? '#' : ''}${pureRoute}`,\n                        type: (isHash ? HASH_CHANGE : POP_STATE),\n                        hash: (isHash === 1),\n                        originalData: {}\n                    }\n                );\n            }\n        } else {\n            throw new Error(INVALID_ROUTE);\n        }\n    }\n}\n","import { isArr, trim } from '../../utils/utils';\nimport { CASE_INSENSITIVE_FLAG, ROUTE_CHANGED, POP_STATE, HASH_CHANGE } from '../../utils/constants';\nimport { libs } from '../../utils/libs';\nimport { loc } from '../../utils/vars';\nimport testRoute from '../testRoute';\nimport getQueryParams from '../getQueryParams';\n\n/**\n * Binds generic route if route is passed as a list of URLs\n * @private\n * @param {string[]} route Array of routes\n * @param {*} handler Handler function\n */\nfunction bindGenericRoute(route, handler) {\n    if (libs.handlers.filter(ob => (ob.prevHandler === handler)).length) {\n        return;\n    }\n    bindRoute((...args) => {\n        if (typeof handler === 'function') {\n            const [e] = args;\n            let compareRoute = e.route;\n            if (compareRoute.charAt(0) === '#') {\n                compareRoute = compareRoute.substring(1);\n            }\n            if (route.indexOf(compareRoute) > -1) {\n                handler.apply(this, args);\n            } else if (\n                route.indexOf(`#${compareRoute}`) > -1\n                && e.hash\n            ) {\n                handler.apply(this, args);\n            }\n        }\n    }, handler);\n}\n\n/**\n * Attaches a route handler function\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport default function bindRoute(route, handler, prevHandler) {\n    // Resolve generic route\n    let isCaseInsensitive = false;\n    if (typeof route === 'function') {\n        prevHandler = handler;\n        handler = route;\n        route = '*';\n    }\n    if (isArr(route)) {\n        bindGenericRoute(route, handler);\n        return;\n    }\n    if (route.indexOf(CASE_INSENSITIVE_FLAG) === 0) {\n        isCaseInsensitive = true;\n        route = route.substring(CASE_INSENSITIVE_FLAG.length);\n    }\n    const startIndex = route.charAt(0) === '#' ? 1 : 0;\n    route = route.substring(startIndex);\n    // Check existence\n    const exists = libs.handlers.filter(ob => (ob.handler === handler && ob.route === route)).length;\n    // Attach handler\n    if (!exists && typeof handler === 'function') {\n        libs.handlers.push({\n            eventName: ROUTE_CHANGED,\n            handler,\n            prevHandler,\n            route,\n            hash: startIndex === 1,\n            isCaseInsensitive\n        });\n    }\n    // Execute handler if matches current route (Replaces init method in version 2.0)\n    const { pathname, hash } = loc;\n    const paths = startIndex === 1 ? [hash] : [pathname, hash];\n    paths.filter(path => trim(path)).forEach(currentPath => {\n        let cRoute = route;\n        let cCurrentPath = currentPath;\n        if (isCaseInsensitive) {\n            cRoute = cRoute.toLowerCase();\n            cCurrentPath = cCurrentPath.toLowerCase();\n        }\n        const pathIndex = currentPath.charAt(0) === '#' ? 1 : 0;\n        const { hasMatch, data, params } = testRoute(cRoute, cCurrentPath);\n        if (hasMatch && typeof handler === 'function') {\n            handler({\n                route: currentPath,\n                hash: pathIndex === 1,\n                eventName: pathIndex === 1 ? HASH_CHANGE : POP_STATE,\n                data,\n                params,\n                query: getQueryParams(),\n                isCaseInsensitive\n            });\n        }\n    });\n}\n","import { libs } from '../../utils/libs';\nimport { isArr } from '../../utils/utils';\n\n/**\n * Unbinds route handlers\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport default function unbindRoute(...args) {\n    let [route, handler] = args;\n    const prevLength = libs.handlers.length;\n    let isRouteList = false;\n    if (args.length === 0) {\n        libs.handlers.length = 0;\n    }\n    if (isArr(route)) {\n        route = '*';\n        isRouteList = true;\n    }\n    libs.handlers = libs.handlers.filter(ob => {\n        if (args.length === 1 && typeof args[0] === 'string' && !isRouteList) {\n            return ob.route !== route;\n        }\n        // Check for generic route\n        if (args.length === 1 && typeof args[0] === 'function') {\n            handler = args[0];\n            route = '*'; // Generic route\n        }\n        return !(ob.route === route && (\n            ob.handler === handler\n            || ob.prevHandler === handler\n        ));\n    });\n    return (prevLength > libs.handlers.length);\n}","import triggerRoute from '../triggerRoute';\nimport { POP_STATE } from '../../utils/constants';\nimport { loc } from '../../utils/vars';\n\n/**\n * Initializes router events\n * @private\n */\nexport default function initRouterEvents() {\n    window.addEventListener(`${POP_STATE}`, function (e) {\n        const completePath = `${loc.pathname}${loc.hash}`;\n        const pathParts = completePath.split('#');\n        const pathname = pathParts[0];\n        const hashstring = pathParts[1];\n        let originalData = {};\n        if (e.state) {\n            const { data } = e.state;\n            if (data) {\n                originalData = data;\n            }\n        }\n        triggerRoute({\n            originalEvent: e,\n            route: pathname,\n            type: e.type,\n            hash: false,\n            originalData\n        });\n        if (hashstring) {\n            triggerRoute({\n                originalEvent: e,\n                route: `#${hashstring}`,\n                type: HASH_CHANGE,\n                hash: true,\n                originalData\n            });\n        }\n    });\n}","import { extractParams } from './utils/params';\nimport { CASE_INSENSITIVE_FLAG } from './utils/constants';\nimport { toQueryString } from './utils/query';\nimport { deparam } from './utils/deparam';\nimport execRoute from './api/execRoute';\nimport bindRoute from './api/bindRoute';\nimport unbindRoute from './api/unbindRoute';\nimport initRouterEvents from './api/initRouterEvents';\nimport trigger from './api/trigger';\n\n/**\n * @namespace router\n * @public\n * @type {object}\n */\nconst router = {\n    /**\n     * @namespace api\n     * @memberof router\n     * @type {object}\n     * @deprecated\n     */\n    api: {\n        /**\n         * Triggers a custom route event\n         * @method trigger\n         * @public\n         * @memberof router.api\n         * @param {...*} arguments\n         * @deprecated\n         */\n        trigger(...args) {\n            return trigger.apply(this, args);\n        },\n        /**\n         * Extract parameters as an object if route has parameters\n         * @method extractParams\n         * @public\n         * @memberof router.api\n         * @params {...*} arguments\n         * @deprecated\n         */\n        extractParams(...args) {\n            return extractParams.apply(this, args);\n        },\n        /**\n         * Converts object to query string\n         * @method toQueryString\n         * @public\n         * @memberof router.api\n         * @params {...*} arguments\n         * @deprecated\n         */\n        toQueryString(...args) {\n            return toQueryString.apply(this, args);\n        }\n    },\n    /**\n     * Sets a route url\n     * @public\n     * @param {string|object} route Route object or URL\n     * @param {boolean} replaceMode Flag to enable replace mode\n     * @param {boolean} noTrigger Flag to disable handler while changing route\n     */\n    set(...args) {\n        return execRoute.apply(this, args);\n    }\n}\n\n/**\n * Attaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction route(...args) {\n    return bindRoute.apply(this, args);\n}\n\n/**\n * Attaches case insensitive route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction routeIgnoreCase(firstArg, ...args) {\n    if (typeof firstArg === 'string') {\n        route.apply(this, [`${CASE_INSENSITIVE_FLAG}${firstArg}`, ...args]);\n    }\n}\n\n/**\n * Detaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction unroute(...args) {\n    return unbindRoute.apply(this, args);\n}\n\ninitRouterEvents();\n\nexport {\n    router,\n    route,\n    routeIgnoreCase,\n    unroute,\n    deparam,\n    toQueryString as param,\n    extractParams as routeParams\n};"],"names":["HASH_CHANGE","POP_STATE","ROUTE_CHANGED","REG_ROUTE_PARAMS","REG_PATHNAME","REG_HASH_QUERY","REG_TRIM_SPECIALCHARS","INVALID_ROUTE","CASE_INSENSITIVE_FLAG","isArr","Array","isArray","trim","str","isNumber","key","indexOf","isNaN","Number","isObject","toString","setDefault","value","defaultValue","toArray","arr","prototype","slice","call","isValidRoute","route","test","loc","window","location","extractParams","expr","path","pathname","pathRegex","RegExp","replace","params","lastIndex","keys","match","map","values","shift","forEach","index","buildQueryString","queryStringParts","obj","isCurrObjArray","Object","obKey","qKey","push","encodeURIComponent","toQueryString","join","ifComplex","q","deparam","qs","coerce","search","charAt","queryParamList","split","queryObject","qq","qArr","part","decodeURIComponent","complex","apply","concat","simple","toObject","convertedObj","resolve","ob","isNextNumber","resolveObj","nextProp","doCoerce","length","prop","tempObj","undefined","NaN","lib","arguments","loopFunc","ref","target","assign","i","store","LZStorage","compression","libs","getDataFromStore","isHash","paths","get","setDataToStore","data","newPath","set","handlers","resolveQuery","queryString","append","substring","getQueryParams","qsObject","hashStringParams","hashQuery","hash","testRoute","url","originalData","hasMatch","execListeners","eventName","routeConfig","cRoute","cCurrentPath","isCaseInsensitive","toLowerCase","handler","query","triggerRoute","originalEvent","type","trigger","execRoute","replaceMode","noTrigger","routeObject","sroute","rm","nt","title","appendQuery","routeParts","pureRoute","routeMethod","completeRoute","history","Error","bindGenericRoute","filter","prevHandler","bindRoute","args","e","compareRoute","startIndex","exists","currentPath","pathIndex","unbindRoute","prevLength","isRouteList","initRouterEvents","addEventListener","completePath","pathParts","hashstring","state","router","api","routeIgnoreCase","firstArg","unroute"],"mappings":"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"}