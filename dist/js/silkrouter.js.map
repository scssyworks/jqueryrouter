{"version":3,"file":"silkrouter.js","sources":["../../src/js/utils/constants.js","../../src/js/utils/utils.js","../../src/js/utils/vars.js","../../src/js/utils/params.js","../../src/js/utils/query.js","../../src/js/utils/deparam.js","../../src/js/utils/assign.js","../../src/js/utils/libs.js","../../src/js/api/resolveQuery/index.js","../../src/js/api/getQueryParams/index.js","../../src/js/api/testRoute/index.js","../../src/js/api/trigger/index.js","../../src/js/api/triggerRoute/index.js","../../src/js/api/execRoute/index.js","../../src/js/api/bindRoute/index.js","../../src/js/api/unbindRoute/index.js","../../src/js/api/initRouterEvents/index.js","../../src/js/silkrouter.js"],"sourcesContent":["/**\n * Router constants\n */\nexport const HASH_CHANGE = 'hashchange';\nexport const POP_STATE = 'popstate';\nexport const ROUTE_CHANGED = 'route.changed';\nexport const REG_ROUTE_PARAMS = /:[^\\/]+/g;\nexport const REG_PATHNAME = /^\\/(?=[^?]*)/;\nexport const REG_HASH_QUERY = /\\?.+/;\nexport const INVALID_ROUTE = 'Route string is not a pure route';\nexport const CASE_INSENSITIVE_FLAG = '$$';","import { REG_PATHNAME } from './constants';\n\n/**\n * Shorthand for Array.isArray\n */\nexport const isArr = Array.isArray;\n\n/**\n * Safely trims string\n * @param {string} str String\n */\nexport function trim(str) {\n    return ((typeof str === 'string') ? str.trim() : '');\n}\n\n/**\n * Checks if input is a number\n * @param {*} key \n */\nexport function isNumber(key) {\n    key = trim(`${key}`);\n    if (['null', 'undefined', ''].indexOf(key) > -1) return false;\n    return !isNaN(Number(key));\n}\n\n/**\n * Checks if key is a true object\n * @param {*} key Any type of value\n */\nexport function isObject(key) {\n    return (key && !isArr(key) && key.toString() === \"[object Object]\");\n}\n\n/**\n * Sets default value\n * @param {*} value Any value\n * @param {*} defaultValue Default value if value is undefined\n */\nexport function setDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\n\n/**\n * Converts array like object to array\n * @param {any[]} arr Arraylike object\n */\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n\n/**\n * Checks if given route is valid\n * @private\n * @param {string} route Route string\n */\nexport function isValidRoute(route) {\n    return (typeof route === 'string' && REG_PATHNAME.test(route));\n}\n\n/**\n * Checks if the URL is a hash URL\n * @private\n * @param {string} URL URL string\n */\nexport function isHashURL(URL) {\n    return typeof URL === 'string' && URL.charAt(0) === '#';\n}\n\n/**\n * Checks if input value is a function\n * @param {function} fn Input function\n */\nexport function isFunc(fn) {\n    return typeof fn === 'function';\n}","export const loc = window.location;\n","import { REG_ROUTE_PARAMS } from './constants';\nimport { toArray, setDefault } from './utils';\nimport { loc } from './vars';\n\n/**\n * Parses current path and returns params object\n * @private\n * @param {string} expr Route expression\n * @param {string} path URL path\n * @returns {object}\n */\nexport function extractParams(expr, path) {\n    path = setDefault(path, loc.pathname);\n    const params = {};\n    let matchedKeys;\n    let matchedValues;\n    if (matchedKeys = REG_ROUTE_PARAMS.exec(expr)) {\n        const pathRegex = new RegExp(expr.replace(/\\//g, \"\\\\/\").replace(/:[^\\/\\\\]+/g, \"([^\\\\/]+)\"));\n        REG_ROUTE_PARAMS.lastIndex = 0;\n        if (matchedValues = pathRegex.exec(path)) {\n            const keys = toArray(matchedKeys).map(key => key.replace(':', ''));\n            const values = toArray(matchedValues);\n            values.shift();\n            keys.forEach((key, index) => {\n                params[key] = values[index];\n            });\n        }\n    }\n    return params;\n}","import { isArr, isObject } from './utils';\n\n/**\n * Builds query string recursively\n * @private\n * @param {string[]} queryStringParts List of query string key value pairs\n * @param {*} key Key\n * @param {*} obj Value\n */\nfunction buildQueryString(queryStringParts, key, obj) {\n    if (isObject(obj)) {\n        const isCurrObjArray = isArr(obj);\n        Object.keys(obj).forEach(obKey => {\n            let qKey = isCurrObjArray ? '' : obKey;\n            buildQueryString(queryStringParts, `${key}[${qKey}]`, obj[obKey]);\n        });\n    } else if (['string', 'number', 'boolean', 'undefined', 'object'].indexOf(typeof obj) > -1) {\n        queryStringParts.push(`${encodeURIComponent(key)}=${encodeURIComponent(obj)}`);\n    }\n}\n\n/**\n * Converts an object to a query string\n * @private\n * @param {object} obj Object which should be converted to a string\n * @returns {string}\n */\nexport function toQueryString(obj) {\n    let queryStringParts = [];\n    if (isObject(obj)) {\n        Object.keys(obj).forEach(key => {\n            buildQueryString(queryStringParts, key, obj[key]);\n        });\n        return queryStringParts.join('&');\n    } else if (typeof obj === 'string') {\n        return obj;\n    }\n    return '';\n}","import { loc } from './vars';\nimport { isArr, trim, isNumber, isObject, setDefault } from './utils';\n\n/**\n * Checks if query parameter key is a complex notation\n * @param {string} q \n */\nfunction ifComplex(q) {\n    return (/\\[/.test(q));\n}\n\n/**\n * Converts query string to JavaScript object\n * @param {string} qs query string argument (defaults to url query string)\n */\nfunction deparam(qs, coerce) {\n    qs = trim(setDefault(qs, loc.search));\n    coerce = setDefault(coerce, false);\n    if (qs.charAt(0) === \"?\") {\n        qs = qs.replace(\"?\", \"\");\n    }\n    const queryParamList = qs.split(\"&\");\n    const queryObject = {};\n    if (qs) {\n        queryParamList.forEach((qq) => {\n            const qArr = qq.split(\"=\").map(part => decodeURIComponent(part));\n            if (ifComplex(qArr[0])) {\n                complex.apply(this, [].concat(qArr).concat([queryObject, coerce]));\n            } else {\n                simple.apply(this, [qArr, queryObject, false, coerce]);\n            }\n        });\n    }\n    return queryObject;\n}\n\n/**\n * Converts an array to an object\n * @param {array} arr \n */\nfunction toObject(arr) {\n    var convertedObj = {};\n    if (isArr(arr)) {\n        arr.forEach((value, index) => {\n            convertedObj[index] = value;\n        });\n    }\n    return convertedObj;\n}\n\n/**\n * Resolves an array to object if required\n * @param {array} ob An array object\n * @param {boolean} isNumber flag to test if next key is number\n */\nfunction resolve(ob, isNextNumber) {\n    if (typeof ob === \"undefined\") return isNextNumber ? [] : {};\n    return isNextNumber ? ob : toObject(ob);\n}\n\n/**\n * Resolves the target object for next iteration\n * @param {Object} ob current reference object\n * @param {string} nextProp reference property in current object\n */\nfunction resolveObj(ob, nextProp) {\n    if (isObject(ob)) return { ob };\n    if (isArr(ob) || typeof ob === \"undefined\") return { ob: resolve(ob, isNumber(nextProp)) };\n    return { ob: [ob], push: ob !== null };\n}\n\n/**\n * Handles complex query parameters\n * @param {string} key \n * @param {string} value \n * @param {Object} obj \n */\nfunction complex(key, value, obj, doCoerce) {\n    doCoerce = setDefault(doCoerce, true);\n    const match = key.match(/([^\\[]+)\\[([^\\[]*)\\]/) || [];\n    if (match.length === 3) {\n        let prop = match[1];\n        let nextProp = match[2];\n        key = key.replace(/\\[([^\\[]*)\\]/, \"\");\n        if (ifComplex(key)) {\n            if (nextProp === \"\") nextProp = \"0\";\n            key = key.replace(/[^\\[]+/, nextProp);\n            complex(key, value, (obj[prop] = resolveObj(obj[prop], nextProp).ob), doCoerce);\n        } else if (nextProp) {\n            const { ob, push } = resolveObj(obj[prop], nextProp);\n            obj[prop] = ob;\n            if (push) {\n                const tempObj = {};\n                tempObj[nextProp] = (doCoerce ? coerce(value) : value);\n                obj[prop].push(tempObj);\n            } else {\n                obj[prop][nextProp] = (doCoerce ? coerce(value) : value);\n            }\n        } else {\n            simple([match[1], value], obj, true);\n        }\n    }\n}\n\n/**\n * Handles simple query\n * @param {array} qArr \n * @param {Object} queryObject \n * @param {boolean} toArray \n */\nfunction simple(qArr, queryObject, toArray, doCoerce) {\n    doCoerce = setDefault(doCoerce, true);\n    let key = qArr[0];\n    let value = qArr[1];\n    if (doCoerce) {\n        value = coerce(value);\n    }\n    if (key in queryObject) {\n        queryObject[key] = isArr(queryObject[key]) ? queryObject[key] : [queryObject[key]];\n        queryObject[key].push(value);\n    } else {\n        queryObject[key] = toArray ? [value] : value;\n    }\n}\n\n/**\n * Restores values to their original type\n * @param {string} value undefined or string value\n */\nfunction coerce(value) {\n    if (value == null) return \"\";\n    if (typeof value !== \"string\") return value;\n    value = trim(value);\n    if (isNumber(value)) return +value;\n    switch (value) {\n        case \"null\": return null;\n        case \"undefined\": return undefined;\n        case \"true\": return true;\n        case \"false\": return false;\n        case \"NaN\": return NaN;\n        default: return value;\n    }\n}\n\n// Library encapsulation\nfunction lib() {\n    return deparam.apply(this, arguments);\n}\n\nexport { lib as deparam };","import { isObject } from './utils';\n\n/**\n * Inner loop function for assign\n * @private\n * @param {object} ref Argument object\n * @param {object} target First object\n */\nfunction loopFunc(ref, target) {\n    if (isObject(ref)) {\n        Object.keys(ref).forEach(function (key) {\n            target[key] = ref[key];\n        });\n    }\n}\n\n/**\n * Polyfill for Object.assign only smaller and with less features\n * @private\n * @returns {object}\n */\nexport function assign() {\n    const target = isObject(arguments[0]) ? arguments[0] : {};\n    for (let i = 1; i < arguments.length; i++) {\n        loopFunc(arguments[i], target);\n    }\n    return target;\n}","import LZStorage from 'lzstorage';\nimport { assign } from './assign';\nimport { isObject } from './utils';\n\nconst store = new LZStorage({\n    compression: true\n});\n\n/**\n * Store library\n * @namespace libs\n * @type {object}\n * @private\n */\nexport const libs = {\n    /**\n     * Get's decompressed data from store\n     * @private\n     * @method getDataFromStore\n     * @memberof libs\n     * @param {string} path URL path\n     * @param {boolean} isHash Flag to determine if it's a pathname or hash\n     * @returns {*}\n     */\n    getDataFromStore(path, isHash) {\n        const paths = assign(store.get('routeStore'));\n        return paths[`${isHash ? '#' : ''}${path}`];\n    },\n    /**\n     * @private\n     * @method setDataToStore\n     * @memberof libs\n     * @param {string} path URL path\n     * @param {boolean} isHash Flag to determine if it's a pathname or hash\n     * @param {any} data Data\n     * @returns {boolean}\n     */\n    setDataToStore(path, isHash, data) {\n        let paths = assign(store.get('routeStore'));\n        if (paths[path]) {\n            if (\n                !data\n                || (\n                    isObject(data)\n                    && Object.keys(data).length === 0\n                )\n            ) {\n                // Don't change existing data\n                return false;\n            }\n        }\n        const newPath = {};\n        newPath[`${isHash ? '#' : ''}${path}`] = data;\n        paths = assign({}, paths, newPath);\n        return store.set('routeStore', paths, true);\n    },\n    /**\n     * @namespace handlers\n     * @type {object[]}\n     * @private\n     */\n    handlers: [],\n    contains(fn) {\n        return !!this.handlers.filter(fn).length;\n    }\n};","import { loc } from '../../utils/vars';\nimport { trim } from '../../utils/utils';\n\n/**\n * Adds a query string\n * @private\n * @param {string} route Route string\n * @param {string} qString Query string\n * @param {boolean} appendQString Append query string flag\n */\nexport default function resolveQuery(route, isHash, queryString, append) {\n    queryString = trim(queryString.substring((queryString.charAt(0) === '?' ? 1 : 0)));\n    if (!isHash) {\n        if (append) {\n            return `${route}${loc.search}${(queryString ? `&${queryString}` : '')}`;\n        }\n        return `${route}${(queryString ? `?${queryString}` : '')}`;\n    }\n    return `${loc.pathname}${loc.search}#${route}${queryString ? `?${queryString}` : ''}`;\n}","import { deparam } from '../../utils/deparam';\nimport { loc } from '../../utils/vars';\nimport { assign } from '../../utils/assign';\nimport { REG_HASH_QUERY } from '../../utils/constants';\n\n/**\n * Converts current query string into an object\n * @private\n */\nexport default function getQueryParams() {\n    const qsObject = deparam();\n    let hashStringParams = {};\n    const hashQuery = loc.hash.match(REG_HASH_QUERY);\n    if (hashQuery) {\n        hashStringParams = assign({}, deparam(hashQuery[0]));\n    }\n    return assign({}, qsObject, hashStringParams);\n}","import { libs } from '../../utils/libs';\nimport { extractParams } from '../../utils/params';\nimport { isValidRoute, isHashURL } from '../../utils/utils';\nimport { assign } from '../../utils/assign';\n\n/**\n * Compares route with current URL\n * @private\n * @param {string} route Route string\n * @param {string} url Current url\n * @param {object} params Parameters\n */\nexport default function testRoute(route, url, originalData) {\n    originalData = assign(originalData);\n    const isHash = isHashURL(url);\n    url = url.substring(isHash ? 1 : 0);\n    const path = url.split('?')[0];\n    if (!!Object.keys(originalData).length) {\n        libs.setDataToStore(path, isHash, originalData); // Sync store with event data.\n    }\n    const data = libs.getDataFromStore(path, isHash);\n    const params = extractParams(route, url);\n    let hasMatch = Object.keys(params).length > 0 || (\n        isValidRoute(url) && ((route === url) || (route === '*'))\n    );\n    return {\n        hasMatch,\n        data,\n        params\n    };\n}","import { loc } from '../../utils/vars';\nimport { libs } from '../../utils/libs';\nimport getQueryParams from '../getQueryParams';\nimport testRoute from '../testRoute';\nimport { assign } from '../../utils/assign';\n\n/**\n * Triggers a router event\n * @private\n * @param {string} eventName Name of route event\n * @param {object} params Parameters\n */\nexport default function execListeners(eventName, rc, originalData) {\n    originalData = assign(originalData);\n    libs.handlers.forEach(ob => {\n        if (ob.eventName === eventName) {\n            let cRoute = ob.route;\n            let cCurrentPath = (rc.hash ? loc.hash : loc.pathname);\n            if (ob.isCaseInsensitive) {\n                cRoute = cRoute.toLowerCase();\n                cCurrentPath = cCurrentPath.toLowerCase();\n            }\n            const { hasMatch, data, params } = testRoute(\n                cRoute,\n                cCurrentPath,\n                originalData\n            );\n            if (hasMatch && (!ob.hash || (ob.hash && rc.hash))) {\n                ob.handler(assign({}, rc, {\n                    data,\n                    params,\n                    query: getQueryParams()\n                }));\n            }\n        }\n    });\n}","import { ROUTE_CHANGED, HASH_CHANGE, POP_STATE } from '../../utils/constants';\nimport trigger from '../trigger';\nimport { assign } from '../../utils/assign';\n\n/**\n * Triggers \"route.changed\" event\n * @private\n * @param {object} config Route event configuration\n * @param {object} config.originalEvent Original \"popstate\" event object\n * @param {string} config.route route string\n * @param {string} config.type Type of event\n * @param {boolean} config.hash Flag that determines type of event expected\n * @param {object} config.originalData Original data persisted by history API\n */\nexport default function triggerRoute(ob) {\n    ob.originalEvent = assign(ob.originalEvent);\n    ob.type = ob.hash ? HASH_CHANGE : POP_STATE;\n    const originalData = assign(ob.originalData);\n    delete ob.originalData;\n    trigger(\n        ROUTE_CHANGED,\n        ob,\n        originalData\n    );\n}","import { assign } from '../../utils/assign';\nimport { trim, isValidRoute, isHashURL } from '../../utils/utils';\nimport { toQueryString } from '../../utils/query';\nimport { libs } from '../../utils/libs';\nimport resolveQuery from '../resolveQuery';\nimport triggerRoute from '../triggerRoute';\nimport { INVALID_ROUTE, HASH_CHANGE, POP_STATE } from '../../utils/constants';\n\n/**\n * Set route for given view\n * @private\n * @param {string|object} oRoute Route string or object\n * @param {boolean} replaceMode Replace mode\n * @param {boolean} noTrigger Do not trigger handler\n */\nexport default function execRoute(route, replaceMode, noTrigger) {\n    let ro = assign(\n        { replaceMode, noTrigger },\n        (\n            typeof route === 'string'\n                ? { route }\n                : route\n        )\n    );\n    if (typeof ro.route === 'string') {\n        const hash = isHashURL(ro.route);\n        const routeParts = trim(ro.route).split('?');\n        let pureRoute = routeParts[0];\n        let queryString = trim(routeParts[1]);\n        queryString = toQueryString(queryString || trim(ro.queryString));\n        pureRoute = pureRoute.substring(hash ? 1 : 0);\n        if (isValidRoute(pureRoute)) {\n            libs.setDataToStore(pureRoute, hash, ro.data);\n            const completeRoute = resolveQuery(pureRoute, hash, queryString, ro.appendQuery);\n            history[ro.replaceMode ? 'replaceState' : 'pushState']({ data: ro.data }, ro.title, completeRoute);\n            if (!ro.noTrigger) {\n                triggerRoute({\n                    route: `${hash ? '#' : ''}${pureRoute}`,\n                    hash\n                });\n            }\n        } else {\n            throw new Error(INVALID_ROUTE);\n        }\n    }\n}\n","import { isArr, trim, isHashURL, isFunc } from '../../utils/utils';\nimport { CASE_INSENSITIVE_FLAG, ROUTE_CHANGED, POP_STATE, HASH_CHANGE } from '../../utils/constants';\nimport { libs } from '../../utils/libs';\nimport { loc } from '../../utils/vars';\nimport testRoute from '../testRoute';\nimport getQueryParams from '../getQueryParams';\n\n/**\n * Binds generic route if route is passed as a list of URLs\n * @private\n * @param {string[]} route Array of routes\n * @param {*} handler Handler function\n */\nfunction bindGenericRoute(route, handler) {\n    if (libs.contains(ob => (ob.prevHandler === handler))) {\n        return;\n    }\n    bindRoute((e) => {\n        if (isFunc(handler)) {\n            const compareRoute = e.route.substring(e.hash ? 1 : 0);\n            if (route.indexOf(`${e.hash ? '#' : ''}${compareRoute}`) > -1) {\n                handler.apply(this, [e]);\n            }\n        }\n    }, handler);\n}\n\n/**\n * Attaches a route handler function\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport default function bindRoute(route, handler, prevHandler) {\n    // Resolve generic route\n    let isCaseInsensitive = false;\n    if (isFunc(route)) {\n        prevHandler = handler;\n        handler = route;\n        route = '*';\n    }\n    if (isArr(route)) {\n        bindGenericRoute(route, handler);\n        return;\n    }\n    if (route.indexOf(CASE_INSENSITIVE_FLAG) === 0) {\n        isCaseInsensitive = true;\n        route = route.substring(CASE_INSENSITIVE_FLAG.length);\n    }\n    const containsHash = isHashURL(route);\n    route = route.substring((containsHash ? 1 : 0));\n    // Check existence\n    const exists = libs.contains(ob => (ob.handler === handler && ob.route === route));\n    // Attach handler\n    if (!exists && isFunc(handler)) {\n        libs.handlers.push({\n            eventName: ROUTE_CHANGED,\n            handler,\n            prevHandler,\n            route,\n            hash: containsHash,\n            isCaseInsensitive\n        });\n    }\n    // Execute handler if matches current route (Replaces init method in version 2.0)\n    const { pathname, hash } = loc;\n    const paths = containsHash ? [hash] : [pathname, hash];\n    paths.filter(path => trim(path)).forEach(currentPath => {\n        let cRoute = route;\n        let cCurrentPath = currentPath;\n        if (isCaseInsensitive) {\n            cRoute = cRoute.toLowerCase();\n            cCurrentPath = cCurrentPath.toLowerCase();\n        }\n        const containsHash = isHashURL(currentPath);\n        const { hasMatch, data, params } = testRoute(cRoute, cCurrentPath);\n        if (hasMatch && isFunc(handler)) {\n            handler({\n                route: currentPath,\n                hash: containsHash,\n                eventName: containsHash ? HASH_CHANGE : POP_STATE,\n                data,\n                params,\n                query: getQueryParams(),\n                isCaseInsensitive\n            });\n        }\n    });\n}\n","import { libs } from '../../utils/libs';\nimport { isArr, isFunc } from '../../utils/utils';\n\n/**\n * Unbinds route handlers\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport default function unbindRoute(route, handler) {\n    const prevLength = libs.handlers.length;\n    let isRouteList = false;\n    if (arguments.length === 0) {\n        libs.handlers.length = 0;\n    }\n    if (isArr(route)) {\n        route = '*';\n        isRouteList = true;\n    }\n    libs.handlers = libs.handlers.filter(ob => {\n        if (arguments.length === 1 && typeof route === 'string' && !isRouteList) {\n            return ob.route !== route;\n        }\n        // Check for generic route\n        if (arguments.length === 1 && isFunc(route)) {\n            handler = route;\n            route = '*'; // Generic route\n        }\n        return !(ob.route === route && (\n            ob.handler === handler\n            || ob.prevHandler === handler\n        ));\n    });\n    return (prevLength - libs.handlers.length);\n}","import triggerRoute from '../triggerRoute';\nimport { POP_STATE } from '../../utils/constants';\nimport { loc } from '../../utils/vars';\nimport { assign } from '../../utils/assign';\n\n/**\n * Initializes router events\n * @private\n */\nexport default function initRouterEvents() {\n    window.addEventListener(`${POP_STATE}`, function (e) {\n        const pathParts = (`${loc.pathname}${loc.hash}`).split('#');\n        const defaultConfig = {\n            originalEvent: e,\n            originalData: assign(e.state && e.state.data)\n        };\n        triggerRoute(assign({}, defaultConfig, {\n            route: pathParts[0],\n            hash: false\n        }));\n        if (pathParts[1]) {\n            triggerRoute(assign({}, defaultConfig, {\n                route: `#${pathParts[1]}`,\n                hash: true\n            }));\n        }\n    });\n}","import { extractParams } from './utils/params';\nimport { CASE_INSENSITIVE_FLAG } from './utils/constants';\nimport { toQueryString } from './utils/query';\nimport { deparam } from './utils/deparam';\nimport execRoute from './api/execRoute';\nimport bindRoute from './api/bindRoute';\nimport unbindRoute from './api/unbindRoute';\nimport initRouterEvents from './api/initRouterEvents';\nimport trigger from './api/trigger';\n\n/**\n * @namespace router\n * @public\n * @type {object}\n */\nconst router = {\n    /**\n     * @namespace api\n     * @memberof router\n     * @type {object}\n     * @deprecated\n     */\n    api: {\n        /**\n         * Triggers a custom route event\n         * @method trigger\n         * @public\n         * @memberof router.api\n         * @param {...*} arguments\n         * @deprecated\n         */\n        trigger(...args) {\n            return trigger.apply(this, args);\n        },\n        /**\n         * Extract parameters as an object if route has parameters\n         * @method extractParams\n         * @public\n         * @memberof router.api\n         * @params {...*} arguments\n         * @deprecated\n         */\n        extractParams(...args) {\n            return extractParams.apply(this, args);\n        },\n        /**\n         * Converts object to query string\n         * @method toQueryString\n         * @public\n         * @memberof router.api\n         * @params {...*} arguments\n         * @deprecated\n         */\n        toQueryString(...args) {\n            return toQueryString.apply(this, args);\n        }\n    },\n    /**\n     * Sets a route url\n     * @public\n     * @param {string|object} route Route object or URL\n     * @param {boolean} replaceMode Flag to enable replace mode\n     * @param {boolean} noTrigger Flag to disable handler while changing route\n     */\n    set(...args) {\n        return execRoute.apply(this, args);\n    }\n}\n\n/**\n * Attaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction route(...args) {\n    return bindRoute.apply(this, args);\n}\n\n/**\n * Attaches case insensitive route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction routeIgnoreCase(firstArg, ...args) {\n    if (typeof firstArg === 'string') {\n        route.apply(this, [`${CASE_INSENSITIVE_FLAG}${firstArg}`, ...args]);\n    }\n}\n\n/**\n * Detaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction unroute(...args) {\n    return unbindRoute.apply(this, args);\n}\n\ninitRouterEvents();\n\nexport {\n    router,\n    route,\n    routeIgnoreCase,\n    unroute,\n    deparam,\n    toQueryString as param,\n    extractParams as routeParams\n};"],"names":["HASH_CHANGE","POP_STATE","ROUTE_CHANGED","REG_ROUTE_PARAMS","REG_PATHNAME","REG_HASH_QUERY","INVALID_ROUTE","CASE_INSENSITIVE_FLAG","isArr","Array","isArray","trim","str","isNumber","key","indexOf","isNaN","Number","isObject","toString","setDefault","value","defaultValue","toArray","arr","prototype","slice","call","isValidRoute","route","test","isHashURL","URL","charAt","isFunc","fn","loc","window","location","extractParams","expr","path","pathname","params","matchedKeys","matchedValues","exec","pathRegex","RegExp","replace","lastIndex","keys","map","values","shift","forEach","index","buildQueryString","queryStringParts","obj","isCurrObjArray","Object","obKey","qKey","push","encodeURIComponent","toQueryString","join","ifComplex","q","deparam","qs","coerce","search","queryParamList","split","queryObject","qq","qArr","part","decodeURIComponent","complex","apply","concat","simple","toObject","convertedObj","resolve","ob","isNextNumber","resolveObj","nextProp","doCoerce","match","length","prop","tempObj","undefined","NaN","lib","arguments","loopFunc","ref","target","assign","i","store","LZStorage","compression","libs","getDataFromStore","isHash","paths","get","setDataToStore","data","newPath","set","handlers","contains","filter","resolveQuery","queryString","append","substring","getQueryParams","qsObject","hashStringParams","hashQuery","hash","testRoute","url","originalData","hasMatch","execListeners","eventName","rc","cRoute","cCurrentPath","isCaseInsensitive","toLowerCase","handler","query","triggerRoute","originalEvent","type","trigger","execRoute","replaceMode","noTrigger","ro","routeParts","pureRoute","completeRoute","appendQuery","history","title","Error","bindGenericRoute","prevHandler","bindRoute","e","compareRoute","containsHash","exists","currentPath","unbindRoute","prevLength","isRouteList","initRouterEvents","addEventListener","pathParts","defaultConfig","state","router","api","args","routeIgnoreCase","firstArg","unroute"],"mappings":";;;;;;;;;;;;;;;;IAGO,IAAMA,WAAW,GAAG,YAApB;AACP,IAAO,IAAMC,SAAS,GAAG,UAAlB;AACP,IAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,IAAO,IAAMC,gBAAgB,GAAG,UAAzB;AACP,IAAO,IAAMC,YAAY,GAAG,cAArB;AACP,IAAO,IAAMC,cAAc,GAAG,MAAvB;AACP,IAAO,IAAMC,aAAa,GAAG,kCAAtB;AACP,IAAO,IAAMC,qBAAqB,GAAG,IAA9B;;ICLA,IAAMC,KAAK,GAAGC,KAAK,CAACC,OAApB;;AAMP,IAAO,SAASC,IAAT,CAAcC,GAAd,EAAmB;IACtB,SAAS,OAAOA,GAAP,KAAe,QAAhB,GAA4BA,GAAG,CAACD,IAAJ,EAA5B,GAAyC,EAAjD;IACH;;AAMD,IAAO,SAASE,QAAT,CAAkBC,GAAlB,EAAuB;IAC1BA,EAAAA,GAAG,GAAGH,IAAI,WAAIG,GAAJ,EAAV;IACA,MAAI,CAAC,MAAD,EAAS,WAAT,EAAsB,EAAtB,EAA0BC,OAA1B,CAAkCD,GAAlC,IAAyC,CAAC,CAA9C,EAAiD,OAAO,KAAP;IACjD,SAAO,CAACE,KAAK,CAACC,MAAM,CAACH,GAAD,CAAP,CAAb;IACH;;AAMD,IAAO,SAASI,QAAT,CAAkBJ,GAAlB,EAAuB;IAC1B,SAAQA,GAAG,IAAI,CAACN,KAAK,CAACM,GAAD,CAAb,IAAsBA,GAAG,CAACK,QAAJ,OAAmB,iBAAjD;IACH;;AAOD,IAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,YAA3B,EAAyC;IAC5C,SAAO,OAAOD,KAAP,KAAiB,WAAjB,GAA+BC,YAA/B,GAA8CD,KAArD;IACH;;AAMD,IAAO,SAASE,OAAT,CAAiBC,GAAjB,EAAsB;IACzB,SAAOf,KAAK,CAACgB,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BH,GAA3B,CAAP;IACH;;AAOD,IAAO,SAASI,YAAT,CAAsBC,KAAtB,EAA6B;IAChC,SAAQ,OAAOA,KAAP,KAAiB,QAAjB,IAA6BzB,YAAY,CAAC0B,IAAb,CAAkBD,KAAlB,CAArC;IACH;;AAOD,IAAO,SAASE,SAAT,CAAmBC,GAAnB,EAAwB;IAC3B,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACC,MAAJ,CAAW,CAAX,MAAkB,GAApD;IACH;;AAMD,IAAO,SAASC,MAAT,CAAgBC,EAAhB,EAAoB;IACvB,SAAO,OAAOA,EAAP,KAAc,UAArB;IACH;;IC1EM,IAAMC,GAAG,GAAGC,MAAM,CAACC,QAAnB;;ICWA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;IACtCA,EAAAA,IAAI,GAAGrB,UAAU,CAACqB,IAAD,EAAOL,GAAG,CAACM,QAAX,CAAjB;IACA,MAAMC,MAAM,GAAG,EAAf;IACA,MAAIC,WAAJ;IACA,MAAIC,aAAJ;;IACA,MAAID,WAAW,GAAGzC,gBAAgB,CAAC2C,IAAjB,CAAsBN,IAAtB,CAAlB,EAA+C;IAC3C,QAAMO,SAAS,GAAG,IAAIC,MAAJ,CAAWR,IAAI,CAACS,OAAL,CAAa,KAAb,EAAoB,KAApB,EAA2BA,OAA3B,CAAmC,YAAnC,EAAiD,WAAjD,CAAX,CAAlB;IACA9C,IAAAA,gBAAgB,CAAC+C,SAAjB,GAA6B,CAA7B;;IACA,QAAIL,aAAa,GAAGE,SAAS,CAACD,IAAV,CAAeL,IAAf,CAApB,EAA0C;IACtC,UAAMU,IAAI,GAAG5B,OAAO,CAACqB,WAAD,CAAP,CAAqBQ,GAArB,CAAyB,UAAAtC,GAAG;IAAA,eAAIA,GAAG,CAACmC,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,CAAJ;IAAA,OAA5B,CAAb;IACA,UAAMI,MAAM,GAAG9B,OAAO,CAACsB,aAAD,CAAtB;IACAQ,MAAAA,MAAM,CAACC,KAAP;IACAH,MAAAA,IAAI,CAACI,OAAL,CAAa,UAACzC,GAAD,EAAM0C,KAAN,EAAgB;IACzBb,QAAAA,MAAM,CAAC7B,GAAD,CAAN,GAAcuC,MAAM,CAACG,KAAD,CAApB;IACH,OAFD;IAGH;IACJ;;IACD,SAAOb,MAAP;IACH;;;;;;;;;;;;;;;;ICpBD,SAASc,gBAAT,CAA0BC,gBAA1B,EAA4C5C,GAA5C,EAAiD6C,GAAjD,EAAsD;IAClD,MAAIzC,QAAQ,CAACyC,GAAD,CAAZ,EAAmB;IACf,QAAMC,cAAc,GAAGpD,KAAK,CAACmD,GAAD,CAA5B;IACAE,IAAAA,MAAM,CAACV,IAAP,CAAYQ,GAAZ,EAAiBJ,OAAjB,CAAyB,UAAAO,KAAK,EAAI;IAC9B,UAAIC,IAAI,GAAGH,cAAc,GAAG,EAAH,GAAQE,KAAjC;IACAL,MAAAA,gBAAgB,CAACC,gBAAD,YAAsB5C,GAAtB,cAA6BiD,IAA7B,QAAsCJ,GAAG,CAACG,KAAD,CAAzC,CAAhB;IACH,KAHD;IAIH,GAND,MAMO,IAAI,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,QAA7C,EAAuD/C,OAAvD,SAAsE4C,GAAtE,KAA6E,CAAC,CAAlF,EAAqF;IACxFD,IAAAA,gBAAgB,CAACM,IAAjB,WAAyBC,kBAAkB,CAACnD,GAAD,CAA3C,cAAoDmD,kBAAkB,CAACN,GAAD,CAAtE;IACH;IACJ;;AAQD,IAAO,SAASO,aAAT,CAAuBP,GAAvB,EAA4B;IAC/B,MAAID,gBAAgB,GAAG,EAAvB;;IACA,MAAIxC,QAAQ,CAACyC,GAAD,CAAZ,EAAmB;IACfE,IAAAA,MAAM,CAACV,IAAP,CAAYQ,GAAZ,EAAiBJ,OAAjB,CAAyB,UAAAzC,GAAG,EAAI;IAC5B2C,MAAAA,gBAAgB,CAACC,gBAAD,EAAmB5C,GAAnB,EAAwB6C,GAAG,CAAC7C,GAAD,CAA3B,CAAhB;IACH,KAFD;IAGA,WAAO4C,gBAAgB,CAACS,IAAjB,CAAsB,GAAtB,CAAP;IACH,GALD,MAKO,IAAI,OAAOR,GAAP,KAAe,QAAnB,EAA6B;IAChC,WAAOA,GAAP;IACH;;IACD,SAAO,EAAP;IACH;;IC/BD,SAASS,SAAT,CAAmBC,CAAnB,EAAsB;IAClB,SAAQ,KAAKvC,IAAL,CAAUuC,CAAV,CAAR;IACH;;IAMD,SAASC,OAAT,CAAiBC,EAAjB,EAAqBC,MAArB,EAA6B;IAAA;;IACzBD,EAAAA,EAAE,GAAG5D,IAAI,CAACS,UAAU,CAACmD,EAAD,EAAKnC,GAAG,CAACqC,MAAT,CAAX,CAAT;IACAD,EAAAA,MAAM,GAAGpD,UAAU,CAACoD,MAAD,EAAS,KAAT,CAAnB;;IACA,MAAID,EAAE,CAACtC,MAAH,CAAU,CAAV,MAAiB,GAArB,EAA0B;IACtBsC,IAAAA,EAAE,GAAGA,EAAE,CAACtB,OAAH,CAAW,GAAX,EAAgB,EAAhB,CAAL;IACH;;IACD,MAAMyB,cAAc,GAAGH,EAAE,CAACI,KAAH,CAAS,GAAT,CAAvB;IACA,MAAMC,WAAW,GAAG,EAApB;;IACA,MAAIL,EAAJ,EAAQ;IACJG,IAAAA,cAAc,CAACnB,OAAf,CAAuB,UAACsB,EAAD,EAAQ;IAC3B,UAAMC,IAAI,GAAGD,EAAE,CAACF,KAAH,CAAS,GAAT,EAAcvB,GAAd,CAAkB,UAAA2B,IAAI;IAAA,eAAIC,kBAAkB,CAACD,IAAD,CAAtB;IAAA,OAAtB,CAAb;;IACA,UAAIX,SAAS,CAACU,IAAI,CAAC,CAAD,CAAL,CAAb,EAAwB;IACpBG,QAAAA,OAAO,CAACC,KAAR,CAAc,KAAd,EAAoB,GAAGC,MAAH,CAAUL,IAAV,EAAgBK,MAAhB,CAAuB,CAACP,WAAD,EAAcJ,MAAd,CAAvB,CAApB;IACH,OAFD,MAEO;IACHY,QAAAA,MAAM,CAACF,KAAP,CAAa,KAAb,EAAmB,CAACJ,IAAD,EAAOF,WAAP,EAAoB,KAApB,EAA2BJ,MAA3B,CAAnB;IACH;IACJ,KAPD;IAQH;;IACD,SAAOI,WAAP;IACH;;IAMD,SAASS,QAAT,CAAkB7D,GAAlB,EAAuB;IACnB,MAAI8D,YAAY,GAAG,EAAnB;;IACA,MAAI9E,KAAK,CAACgB,GAAD,CAAT,EAAgB;IACZA,IAAAA,GAAG,CAAC+B,OAAJ,CAAY,UAAClC,KAAD,EAAQmC,KAAR,EAAkB;IAC1B8B,MAAAA,YAAY,CAAC9B,KAAD,CAAZ,GAAsBnC,KAAtB;IACH,KAFD;IAGH;;IACD,SAAOiE,YAAP;IACH;;IAOD,SAASC,OAAT,CAAiBC,EAAjB,EAAqBC,YAArB,EAAmC;IAC/B,MAAI,OAAOD,EAAP,KAAc,WAAlB,EAA+B,OAAOC,YAAY,GAAG,EAAH,GAAQ,EAA3B;IAC/B,SAAOA,YAAY,GAAGD,EAAH,GAAQH,QAAQ,CAACG,EAAD,CAAnC;IACH;;IAOD,SAASE,UAAT,CAAoBF,EAApB,EAAwBG,QAAxB,EAAkC;IAC9B,MAAIzE,QAAQ,CAACsE,EAAD,CAAZ,EAAkB,OAAO;IAAEA,IAAAA,EAAE,EAAFA;IAAF,GAAP;IAClB,MAAIhF,KAAK,CAACgF,EAAD,CAAL,IAAa,OAAOA,EAAP,KAAc,WAA/B,EAA4C,OAAO;IAAEA,IAAAA,EAAE,EAAED,OAAO,CAACC,EAAD,EAAK3E,QAAQ,CAAC8E,QAAD,CAAb;IAAb,GAAP;IAC5C,SAAO;IAAEH,IAAAA,EAAE,EAAE,CAACA,EAAD,CAAN;IAAYxB,IAAAA,IAAI,EAAEwB,EAAE,KAAK;IAAzB,GAAP;IACH;;IAQD,SAASP,OAAT,CAAiBnE,GAAjB,EAAsBO,KAAtB,EAA6BsC,GAA7B,EAAkCiC,QAAlC,EAA4C;IACxCA,EAAAA,QAAQ,GAAGxE,UAAU,CAACwE,QAAD,EAAW,IAAX,CAArB;IACA,MAAMC,KAAK,GAAG/E,GAAG,CAAC+E,KAAJ,CAAU,sBAAV,KAAqC,EAAnD;;IACA,MAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;IACpB,QAAIC,IAAI,GAAGF,KAAK,CAAC,CAAD,CAAhB;IACA,QAAIF,QAAQ,GAAGE,KAAK,CAAC,CAAD,CAApB;IACA/E,IAAAA,GAAG,GAAGA,GAAG,CAACmC,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,CAAN;;IACA,QAAImB,SAAS,CAACtD,GAAD,CAAb,EAAoB;IAChB,UAAI6E,QAAQ,KAAK,EAAjB,EAAqBA,QAAQ,GAAG,GAAX;IACrB7E,MAAAA,GAAG,GAAGA,GAAG,CAACmC,OAAJ,CAAY,QAAZ,EAAsB0C,QAAtB,CAAN;IACAV,MAAAA,OAAO,CAACnE,GAAD,EAAMO,KAAN,EAAcsC,GAAG,CAACoC,IAAD,CAAH,GAAYL,UAAU,CAAC/B,GAAG,CAACoC,IAAD,CAAJ,EAAYJ,QAAZ,CAAV,CAAgCH,EAA1D,EAA+DI,QAA/D,CAAP;IACH,KAJD,MAIO,IAAID,QAAJ,EAAc;IAAA,wBACID,UAAU,CAAC/B,GAAG,CAACoC,IAAD,CAAJ,EAAYJ,QAAZ,CADd;IAAA,UACTH,EADS,eACTA,EADS;IAAA,UACLxB,IADK,eACLA,IADK;;IAEjBL,MAAAA,GAAG,CAACoC,IAAD,CAAH,GAAYP,EAAZ;;IACA,UAAIxB,IAAJ,EAAU;IACN,YAAMgC,OAAO,GAAG,EAAhB;IACAA,QAAAA,OAAO,CAACL,QAAD,CAAP,GAAqBC,QAAQ,GAAGpB,MAAM,CAACnD,KAAD,CAAT,GAAmBA,KAAhD;IACAsC,QAAAA,GAAG,CAACoC,IAAD,CAAH,CAAU/B,IAAV,CAAegC,OAAf;IACH,OAJD,MAIO;IACHrC,QAAAA,GAAG,CAACoC,IAAD,CAAH,CAAUJ,QAAV,IAAuBC,QAAQ,GAAGpB,MAAM,CAACnD,KAAD,CAAT,GAAmBA,KAAlD;IACH;IACJ,KAVM,MAUA;IACH+D,MAAAA,MAAM,CAAC,CAACS,KAAK,CAAC,CAAD,CAAN,EAAWxE,KAAX,CAAD,EAAoBsC,GAApB,EAAyB,IAAzB,CAAN;IACH;IACJ;IACJ;;IAQD,SAASyB,MAAT,CAAgBN,IAAhB,EAAsBF,WAAtB,EAAmCrD,OAAnC,EAA4CqE,QAA5C,EAAsD;IAClDA,EAAAA,QAAQ,GAAGxE,UAAU,CAACwE,QAAD,EAAW,IAAX,CAArB;IACA,MAAI9E,GAAG,GAAGgE,IAAI,CAAC,CAAD,CAAd;IACA,MAAIzD,KAAK,GAAGyD,IAAI,CAAC,CAAD,CAAhB;;IACA,MAAIc,QAAJ,EAAc;IACVvE,IAAAA,KAAK,GAAGmD,MAAM,CAACnD,KAAD,CAAd;IACH;;IACD,MAAIP,GAAG,IAAI8D,WAAX,EAAwB;IACpBA,IAAAA,WAAW,CAAC9D,GAAD,CAAX,GAAmBN,KAAK,CAACoE,WAAW,CAAC9D,GAAD,CAAZ,CAAL,GAA0B8D,WAAW,CAAC9D,GAAD,CAArC,GAA6C,CAAC8D,WAAW,CAAC9D,GAAD,CAAZ,CAAhE;IACA8D,IAAAA,WAAW,CAAC9D,GAAD,CAAX,CAAiBkD,IAAjB,CAAsB3C,KAAtB;IACH,GAHD,MAGO;IACHuD,IAAAA,WAAW,CAAC9D,GAAD,CAAX,GAAmBS,OAAO,GAAG,CAACF,KAAD,CAAH,GAAaA,KAAvC;IACH;IACJ;;IAMD,SAASmD,MAAT,CAAgBnD,KAAhB,EAAuB;IACnB,MAAIA,KAAK,IAAI,IAAb,EAAmB,OAAO,EAAP;IACnB,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B,OAAOA,KAAP;IAC/BA,EAAAA,KAAK,GAAGV,IAAI,CAACU,KAAD,CAAZ;IACA,MAAIR,QAAQ,CAACQ,KAAD,CAAZ,EAAqB,OAAO,CAACA,KAAR;;IACrB,UAAQA,KAAR;IACI,SAAK,MAAL;IAAa,aAAO,IAAP;;IACb,SAAK,WAAL;IAAkB,aAAO4E,SAAP;;IAClB,SAAK,MAAL;IAAa,aAAO,IAAP;;IACb,SAAK,OAAL;IAAc,aAAO,KAAP;;IACd,SAAK,KAAL;IAAY,aAAOC,GAAP;;IACZ;IAAS,aAAO7E,KAAP;IANb;IAQH;;IAGD,SAAS8E,GAAT,GAAe;IACX,SAAO7B,OAAO,CAACY,KAAR,CAAc,IAAd,EAAoBkB,SAApB,CAAP;IACH;;IC3ID,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,MAAvB,EAA+B;IAC3B,MAAIrF,QAAQ,CAACoF,GAAD,CAAZ,EAAmB;IACfzC,IAAAA,MAAM,CAACV,IAAP,CAAYmD,GAAZ,EAAiB/C,OAAjB,CAAyB,UAAUzC,GAAV,EAAe;IACpCyF,MAAAA,MAAM,CAACzF,GAAD,CAAN,GAAcwF,GAAG,CAACxF,GAAD,CAAjB;IACH,KAFD;IAGH;IACJ;;AAOD,IAAO,SAAS0F,MAAT,GAAkB;IACrB,MAAMD,MAAM,GAAGrF,QAAQ,CAACkF,SAAS,CAAC,CAAD,CAAV,CAAR,GAAyBA,SAAS,CAAC,CAAD,CAAlC,GAAwC,EAAvD;;IACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACN,MAA9B,EAAsCW,CAAC,EAAvC,EAA2C;IACvCJ,IAAAA,QAAQ,CAACD,SAAS,CAACK,CAAD,CAAV,EAAeF,MAAf,CAAR;IACH;;IACD,SAAOA,MAAP;IACH;;ICvBD,IAAMG,KAAK,GAAG,IAAIC,SAAJ,CAAc;IACxBC,EAAAA,WAAW,EAAE;IADW,CAAd,CAAd;;AAUA,IAAO,IAAMC,IAAI,GAAG;;IAUhBC,EAAAA,gBAVgB,4BAUCrE,IAVD,EAUOsE,MAVP,EAUe;IAC3B,QAAMC,KAAK,GAAGR,MAAM,CAACE,KAAK,CAACO,GAAN,CAAU,YAAV,CAAD,CAApB;IACA,WAAOD,KAAK,WAAID,MAAM,GAAG,GAAH,GAAS,EAAnB,SAAwBtE,IAAxB,EAAZ;IACH,GAbe;;IAuBhByE,EAAAA,cAvBgB,0BAuBDzE,IAvBC,EAuBKsE,MAvBL,EAuBaI,IAvBb,EAuBmB;IAC/B,QAAIH,KAAK,GAAGR,MAAM,CAACE,KAAK,CAACO,GAAN,CAAU,YAAV,CAAD,CAAlB;;IACA,QAAID,KAAK,CAACvE,IAAD,CAAT,EAAiB;IACb,UACI,CAAC0E,IAAD,IAEIjG,QAAQ,CAACiG,IAAD,CAAR,IACGtD,MAAM,CAACV,IAAP,CAAYgE,IAAZ,EAAkBrB,MAAlB,KAA6B,CAJxC,EAME;;IAEE,eAAO,KAAP;IACH;IACJ;;IACD,QAAMsB,OAAO,GAAG,EAAhB;IACAA,IAAAA,OAAO,WAAIL,MAAM,GAAG,GAAH,GAAS,EAAnB,SAAwBtE,IAAxB,EAAP,GAAyC0E,IAAzC;IACAH,IAAAA,KAAK,GAAGR,MAAM,CAAC,EAAD,EAAKQ,KAAL,EAAYI,OAAZ,CAAd;IACA,WAAOV,KAAK,CAACW,GAAN,CAAU,YAAV,EAAwBL,KAAxB,EAA+B,IAA/B,CAAP;IACH,GAzCe;;IA+ChBM,EAAAA,QAAQ,EAAE,EA/CM;IAgDhBC,EAAAA,QAhDgB,oBAgDPpF,EAhDO,EAgDH;IACT,WAAO,CAAC,CAAC,KAAKmF,QAAL,CAAcE,MAAd,CAAqBrF,EAArB,EAAyB2D,MAAlC;IACH;IAlDe,CAAb;;ICJQ,SAAS2B,YAAT,CAAsB5F,KAAtB,EAA6BkF,MAA7B,EAAqCW,WAArC,EAAkDC,MAAlD,EAA0D;IACrED,EAAAA,WAAW,GAAG/G,IAAI,CAAC+G,WAAW,CAACE,SAAZ,CAAuBF,WAAW,CAACzF,MAAZ,CAAmB,CAAnB,MAA0B,GAA1B,GAAgC,CAAhC,GAAoC,CAA3D,CAAD,CAAlB;;IACA,MAAI,CAAC8E,MAAL,EAAa;IACT,QAAIY,MAAJ,EAAY;IACR,uBAAU9F,KAAV,SAAkBO,GAAG,CAACqC,MAAtB,SAAgCiD,WAAW,cAAOA,WAAP,IAAuB,EAAlE;IACH;;IACD,qBAAU7F,KAAV,SAAmB6F,WAAW,cAAOA,WAAP,IAAuB,EAArD;IACH;;IACD,mBAAUtF,GAAG,CAACM,QAAd,SAAyBN,GAAG,CAACqC,MAA7B,cAAuC5C,KAAvC,SAA+C6F,WAAW,cAAOA,WAAP,IAAuB,EAAjF;IACH;;ICVc,SAASG,cAAT,GAA0B;IACrC,MAAMC,QAAQ,GAAGxD,GAAO,EAAxB;IACA,MAAIyD,gBAAgB,GAAG,EAAvB;IACA,MAAMC,SAAS,GAAG5F,GAAG,CAAC6F,IAAJ,CAASpC,KAAT,CAAexF,cAAf,CAAlB;;IACA,MAAI2H,SAAJ,EAAe;IACXD,IAAAA,gBAAgB,GAAGvB,MAAM,CAAC,EAAD,EAAKlC,GAAO,CAAC0D,SAAS,CAAC,CAAD,CAAV,CAAZ,CAAzB;IACH;;IACD,SAAOxB,MAAM,CAAC,EAAD,EAAKsB,QAAL,EAAeC,gBAAf,CAAb;IACH;;ICLc,SAASG,SAAT,CAAmBrG,KAAnB,EAA0BsG,GAA1B,EAA+BC,YAA/B,EAA6C;IACxDA,EAAAA,YAAY,GAAG5B,MAAM,CAAC4B,YAAD,CAArB;IACA,MAAMrB,MAAM,GAAGhF,SAAS,CAACoG,GAAD,CAAxB;IACAA,EAAAA,GAAG,GAAGA,GAAG,CAACP,SAAJ,CAAcb,MAAM,GAAG,CAAH,GAAO,CAA3B,CAAN;IACA,MAAMtE,IAAI,GAAG0F,GAAG,CAACxD,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAb;;IACA,MAAI,CAAC,CAACd,MAAM,CAACV,IAAP,CAAYiF,YAAZ,EAA0BtC,MAAhC,EAAwC;IACpCe,IAAAA,IAAI,CAACK,cAAL,CAAoBzE,IAApB,EAA0BsE,MAA1B,EAAkCqB,YAAlC,EADoC;IAEvC;;IACD,MAAMjB,IAAI,GAAGN,IAAI,CAACC,gBAAL,CAAsBrE,IAAtB,EAA4BsE,MAA5B,CAAb;IACA,MAAMpE,MAAM,GAAGJ,aAAa,CAACV,KAAD,EAAQsG,GAAR,CAA5B;IACA,MAAIE,QAAQ,GAAGxE,MAAM,CAACV,IAAP,CAAYR,MAAZ,EAAoBmD,MAApB,GAA6B,CAA7B,IACXlE,YAAY,CAACuG,GAAD,CAAZ,KAAuBtG,KAAK,KAAKsG,GAAX,IAAoBtG,KAAK,KAAK,GAApD,CADJ;IAGA,SAAO;IACHwG,IAAAA,QAAQ,EAARA,QADG;IAEHlB,IAAAA,IAAI,EAAJA,IAFG;IAGHxE,IAAAA,MAAM,EAANA;IAHG,GAAP;IAKH;;IClBc,SAAS2F,aAAT,CAAuBC,SAAvB,EAAkCC,EAAlC,EAAsCJ,YAAtC,EAAoD;IAC/DA,EAAAA,YAAY,GAAG5B,MAAM,CAAC4B,YAAD,CAArB;IACAvB,EAAAA,IAAI,CAACS,QAAL,CAAc/D,OAAd,CAAsB,UAAAiC,EAAE,EAAI;IACxB,QAAIA,EAAE,CAAC+C,SAAH,KAAiBA,SAArB,EAAgC;IAC5B,UAAIE,MAAM,GAAGjD,EAAE,CAAC3D,KAAhB;IACA,UAAI6G,YAAY,GAAIF,EAAE,CAACP,IAAH,GAAU7F,GAAG,CAAC6F,IAAd,GAAqB7F,GAAG,CAACM,QAA7C;;IACA,UAAI8C,EAAE,CAACmD,iBAAP,EAA0B;IACtBF,QAAAA,MAAM,GAAGA,MAAM,CAACG,WAAP,EAAT;IACAF,QAAAA,YAAY,GAAGA,YAAY,CAACE,WAAb,EAAf;IACH;;IAN2B,uBAOOV,SAAS,CACxCO,MADwC,EAExCC,YAFwC,EAGxCN,YAHwC,CAPhB;IAAA,UAOpBC,QAPoB,cAOpBA,QAPoB;IAAA,UAOVlB,IAPU,cAOVA,IAPU;IAAA,UAOJxE,MAPI,cAOJA,MAPI;;IAY5B,UAAI0F,QAAQ,KAAK,CAAC7C,EAAE,CAACyC,IAAJ,IAAazC,EAAE,CAACyC,IAAH,IAAWO,EAAE,CAACP,IAAhC,CAAZ,EAAoD;IAChDzC,QAAAA,EAAE,CAACqD,OAAH,CAAWrC,MAAM,CAAC,EAAD,EAAKgC,EAAL,EAAS;IACtBrB,UAAAA,IAAI,EAAJA,IADsB;IAEtBxE,UAAAA,MAAM,EAANA,MAFsB;IAGtBmG,UAAAA,KAAK,EAAEjB,cAAc;IAHC,SAAT,CAAjB;IAKH;IACJ;IACJ,GArBD;IAsBH;;ICtBc,SAASkB,YAAT,CAAsBvD,EAAtB,EAA0B;IACrCA,EAAAA,EAAE,CAACwD,aAAH,GAAmBxC,MAAM,CAAChB,EAAE,CAACwD,aAAJ,CAAzB;IACAxD,EAAAA,EAAE,CAACyD,IAAH,GAAUzD,EAAE,CAACyC,IAAH,GAAUjI,WAAV,GAAwBC,SAAlC;IACA,MAAMmI,YAAY,GAAG5B,MAAM,CAAChB,EAAE,CAAC4C,YAAJ,CAA3B;IACA,SAAO5C,EAAE,CAAC4C,YAAV;IACAc,EAAAA,aAAO,CACHhJ,aADG,EAEHsF,EAFG,EAGH4C,YAHG,CAAP;IAKH;;ICTc,SAASe,SAAT,CAAmBtH,KAAnB,EAA0BuH,WAA1B,EAAuCC,SAAvC,EAAkD;IAC7D,MAAIC,EAAE,GAAG9C,MAAM,CACX;IAAE4C,IAAAA,WAAW,EAAXA,WAAF;IAAeC,IAAAA,SAAS,EAATA;IAAf,GADW,EAGP,OAAOxH,KAAP,KAAiB,QAAjB,GACM;IAAEA,IAAAA,KAAK,EAALA;IAAF,GADN,GAEMA,KALC,CAAf;;IAQA,MAAI,OAAOyH,EAAE,CAACzH,KAAV,KAAoB,QAAxB,EAAkC;IAC9B,QAAMoG,IAAI,GAAGlG,SAAS,CAACuH,EAAE,CAACzH,KAAJ,CAAtB;IACA,QAAM0H,UAAU,GAAG5I,IAAI,CAAC2I,EAAE,CAACzH,KAAJ,CAAJ,CAAe8C,KAAf,CAAqB,GAArB,CAAnB;IACA,QAAI6E,SAAS,GAAGD,UAAU,CAAC,CAAD,CAA1B;IACA,QAAI7B,WAAW,GAAG/G,IAAI,CAAC4I,UAAU,CAAC,CAAD,CAAX,CAAtB;IACA7B,IAAAA,WAAW,GAAGxD,aAAa,CAACwD,WAAW,IAAI/G,IAAI,CAAC2I,EAAE,CAAC5B,WAAJ,CAApB,CAA3B;IACA8B,IAAAA,SAAS,GAAGA,SAAS,CAAC5B,SAAV,CAAoBK,IAAI,GAAG,CAAH,GAAO,CAA/B,CAAZ;;IACA,QAAIrG,YAAY,CAAC4H,SAAD,CAAhB,EAA6B;IACzB3C,MAAAA,IAAI,CAACK,cAAL,CAAoBsC,SAApB,EAA+BvB,IAA/B,EAAqCqB,EAAE,CAACnC,IAAxC;IACA,UAAMsC,aAAa,GAAGhC,YAAY,CAAC+B,SAAD,EAAYvB,IAAZ,EAAkBP,WAAlB,EAA+B4B,EAAE,CAACI,WAAlC,CAAlC;IACAC,MAAAA,OAAO,CAACL,EAAE,CAACF,WAAH,GAAiB,cAAjB,GAAkC,WAAnC,CAAP,CAAuD;IAAEjC,QAAAA,IAAI,EAAEmC,EAAE,CAACnC;IAAX,OAAvD,EAA0EmC,EAAE,CAACM,KAA7E,EAAoFH,aAApF;;IACA,UAAI,CAACH,EAAE,CAACD,SAAR,EAAmB;IACfN,QAAAA,YAAY,CAAC;IACTlH,UAAAA,KAAK,YAAKoG,IAAI,GAAG,GAAH,GAAS,EAAlB,SAAuBuB,SAAvB,CADI;IAETvB,UAAAA,IAAI,EAAJA;IAFS,SAAD,CAAZ;IAIH;IACJ,KAVD,MAUO;IACH,YAAM,IAAI4B,KAAJ,CAAUvJ,aAAV,CAAN;IACH;IACJ;IACJ;;IChCD,SAASwJ,gBAAT,CAA0BjI,KAA1B,EAAiCgH,OAAjC,EAA0C;IAAA;;IACtC,MAAIhC,IAAI,CAACU,QAAL,CAAc,UAAA/B,EAAE;IAAA,WAAKA,EAAE,CAACuE,WAAH,KAAmBlB,OAAxB;IAAA,GAAhB,CAAJ,EAAuD;IACnD;IACH;;IACDmB,EAAAA,SAAS,CAAC,UAACC,CAAD,EAAO;IACb,QAAI/H,MAAM,CAAC2G,OAAD,CAAV,EAAqB;IACjB,UAAMqB,YAAY,GAAGD,CAAC,CAACpI,KAAF,CAAQ+F,SAAR,CAAkBqC,CAAC,CAAChC,IAAF,GAAS,CAAT,GAAa,CAA/B,CAArB;;IACA,UAAIpG,KAAK,CAACd,OAAN,WAAiBkJ,CAAC,CAAChC,IAAF,GAAS,GAAT,GAAe,EAAhC,SAAqCiC,YAArC,KAAuD,CAAC,CAA5D,EAA+D;IAC3DrB,QAAAA,OAAO,CAAC3D,KAAR,CAAc,KAAd,EAAoB,CAAC+E,CAAD,CAApB;IACH;IACJ;IACJ,GAPQ,EAONpB,OAPM,CAAT;IAQH;;AAQD,IAAe,SAASmB,SAAT,CAAmBnI,KAAnB,EAA0BgH,OAA1B,EAAmCkB,WAAnC,EAAgD;;IAE3D,MAAIpB,iBAAiB,GAAG,KAAxB;;IACA,MAAIzG,MAAM,CAACL,KAAD,CAAV,EAAmB;IACfkI,IAAAA,WAAW,GAAGlB,OAAd;IACAA,IAAAA,OAAO,GAAGhH,KAAV;IACAA,IAAAA,KAAK,GAAG,GAAR;IACH;;IACD,MAAIrB,KAAK,CAACqB,KAAD,CAAT,EAAkB;IACdiI,IAAAA,gBAAgB,CAACjI,KAAD,EAAQgH,OAAR,CAAhB;IACA;IACH;;IACD,MAAIhH,KAAK,CAACd,OAAN,CAAcR,qBAAd,MAAyC,CAA7C,EAAgD;IAC5CoI,IAAAA,iBAAiB,GAAG,IAApB;IACA9G,IAAAA,KAAK,GAAGA,KAAK,CAAC+F,SAAN,CAAgBrH,qBAAqB,CAACuF,MAAtC,CAAR;IACH;;IACD,MAAMqE,YAAY,GAAGpI,SAAS,CAACF,KAAD,CAA9B;IACAA,EAAAA,KAAK,GAAGA,KAAK,CAAC+F,SAAN,CAAiBuC,YAAY,GAAG,CAAH,GAAO,CAApC,CAAR,CAjB2D;;IAmB3D,MAAMC,MAAM,GAAGvD,IAAI,CAACU,QAAL,CAAc,UAAA/B,EAAE;IAAA,WAAKA,EAAE,CAACqD,OAAH,KAAeA,OAAf,IAA0BrD,EAAE,CAAC3D,KAAH,KAAaA,KAA5C;IAAA,GAAhB,CAAf,CAnB2D;;IAqB3D,MAAI,CAACuI,MAAD,IAAWlI,MAAM,CAAC2G,OAAD,CAArB,EAAgC;IAC5BhC,IAAAA,IAAI,CAACS,QAAL,CAActD,IAAd,CAAmB;IACfuE,MAAAA,SAAS,EAAErI,aADI;IAEf2I,MAAAA,OAAO,EAAPA,OAFe;IAGfkB,MAAAA,WAAW,EAAXA,WAHe;IAIflI,MAAAA,KAAK,EAALA,KAJe;IAKfoG,MAAAA,IAAI,EAAEkC,YALS;IAMfxB,MAAAA,iBAAiB,EAAjBA;IANe,KAAnB;IAQH,GA9B0D;;IAAA,MAgCnDjG,QAhCmD,GAgChCN,GAhCgC,CAgCnDM,QAhCmD;IAAA,MAgCzCuF,IAhCyC,GAgChC7F,GAhCgC,CAgCzC6F,IAhCyC;IAiC3D,MAAMjB,KAAK,GAAGmD,YAAY,GAAG,CAAClC,IAAD,CAAH,GAAY,CAACvF,QAAD,EAAWuF,IAAX,CAAtC;IACAjB,EAAAA,KAAK,CAACQ,MAAN,CAAa,UAAA/E,IAAI;IAAA,WAAI9B,IAAI,CAAC8B,IAAD,CAAR;IAAA,GAAjB,EAAiCc,OAAjC,CAAyC,UAAA8G,WAAW,EAAI;IACpD,QAAI5B,MAAM,GAAG5G,KAAb;IACA,QAAI6G,YAAY,GAAG2B,WAAnB;;IACA,QAAI1B,iBAAJ,EAAuB;IACnBF,MAAAA,MAAM,GAAGA,MAAM,CAACG,WAAP,EAAT;IACAF,MAAAA,YAAY,GAAGA,YAAY,CAACE,WAAb,EAAf;IACH;;IACD,QAAMuB,YAAY,GAAGpI,SAAS,CAACsI,WAAD,CAA9B;;IAPoD,qBAQjBnC,SAAS,CAACO,MAAD,EAASC,YAAT,CARQ;IAAA,QAQ5CL,QAR4C,cAQ5CA,QAR4C;IAAA,QAQlClB,IARkC,cAQlCA,IARkC;IAAA,QAQ5BxE,MAR4B,cAQ5BA,MAR4B;;IASpD,QAAI0F,QAAQ,IAAInG,MAAM,CAAC2G,OAAD,CAAtB,EAAiC;IAC7BA,MAAAA,OAAO,CAAC;IACJhH,QAAAA,KAAK,EAAEwI,WADH;IAEJpC,QAAAA,IAAI,EAAEkC,YAFF;IAGJ5B,QAAAA,SAAS,EAAE4B,YAAY,GAAGnK,WAAH,GAAiBC,SAHpC;IAIJkH,QAAAA,IAAI,EAAJA,IAJI;IAKJxE,QAAAA,MAAM,EAANA,MALI;IAMJmG,QAAAA,KAAK,EAAEjB,cAAc,EANjB;IAOJc,QAAAA,iBAAiB,EAAjBA;IAPI,OAAD,CAAP;IASH;IACJ,GApBD;IAqBH;;IC/Ec,SAAS2B,WAAT,CAAqBzI,KAArB,EAA4BgH,OAA5B,EAAqC;IAAA;IAChD,MAAM0B,UAAU,GAAG1D,IAAI,CAACS,QAAL,CAAcxB,MAAjC;IACA,MAAI0E,WAAW,GAAG,KAAlB;;IACA,MAAIpE,SAAS,CAACN,MAAV,KAAqB,CAAzB,EAA4B;IACxBe,IAAAA,IAAI,CAACS,QAAL,CAAcxB,MAAd,GAAuB,CAAvB;IACH;;IACD,MAAItF,KAAK,CAACqB,KAAD,CAAT,EAAkB;IACdA,IAAAA,KAAK,GAAG,GAAR;IACA2I,IAAAA,WAAW,GAAG,IAAd;IACH;;IACD3D,EAAAA,IAAI,CAACS,QAAL,GAAgBT,IAAI,CAACS,QAAL,CAAcE,MAAd,CAAqB,UAAAhC,EAAE,EAAI;IACvC,QAAIY,UAAS,CAACN,MAAV,KAAqB,CAArB,IAA0B,OAAOjE,KAAP,KAAiB,QAA3C,IAAuD,CAAC2I,WAA5D,EAAyE;IACrE,aAAOhF,EAAE,CAAC3D,KAAH,KAAaA,KAApB;IACH,KAHsC;;IAKvC,QAAIuE,UAAS,CAACN,MAAV,KAAqB,CAArB,IAA0B5D,MAAM,CAACL,KAAD,CAApC,EAA6C;IACzCgH,MAAAA,OAAO,GAAGhH,KAAV;IACAA,MAAAA,KAAK,GAAG,GAAR,CAFyC;IAG5C;;IACD,WAAO,EAAE2D,EAAE,CAAC3D,KAAH,KAAaA,KAAb,KACL2D,EAAE,CAACqD,OAAH,KAAeA,OAAf,IACGrD,EAAE,CAACuE,WAAH,KAAmBlB,OAFjB,CAAF,CAAP;IAIH,GAbe,CAAhB;IAcA,SAAQ0B,UAAU,GAAG1D,IAAI,CAACS,QAAL,CAAcxB,MAAnC;IACH;;ICzBc,SAAS2E,gBAAT,GAA4B;IACvCpI,EAAAA,MAAM,CAACqI,gBAAP,WAA2BzK,SAA3B,GAAwC,UAAUgK,CAAV,EAAa;IACjD,QAAMU,SAAS,GAAG,UAAIvI,GAAG,CAACM,QAAR,SAAmBN,GAAG,CAAC6F,IAAvB,EAA+BtD,KAA/B,CAAqC,GAArC,CAAlB;IACA,QAAMiG,aAAa,GAAG;IAClB5B,MAAAA,aAAa,EAAEiB,CADG;IAElB7B,MAAAA,YAAY,EAAE5B,MAAM,CAACyD,CAAC,CAACY,KAAF,IAAWZ,CAAC,CAACY,KAAF,CAAQ1D,IAApB;IAFF,KAAtB;IAIA4B,IAAAA,YAAY,CAACvC,MAAM,CAAC,EAAD,EAAKoE,aAAL,EAAoB;IACnC/I,MAAAA,KAAK,EAAE8I,SAAS,CAAC,CAAD,CADmB;IAEnC1C,MAAAA,IAAI,EAAE;IAF6B,KAApB,CAAP,CAAZ;;IAIA,QAAI0C,SAAS,CAAC,CAAD,CAAb,EAAkB;IACd5B,MAAAA,YAAY,CAACvC,MAAM,CAAC,EAAD,EAAKoE,aAAL,EAAoB;IACnC/I,QAAAA,KAAK,aAAM8I,SAAS,CAAC,CAAD,CAAf,CAD8B;IAEnC1C,QAAAA,IAAI,EAAE;IAF6B,OAApB,CAAP,CAAZ;IAIH;IACJ,GAhBD;IAiBH;;QCZK6C,MAAM,GAAG;;IAOXC,EAAAA,GAAG,EAAE;;IASD7B,IAAAA,OATC,qBASgB;IAAA,wCAAN8B,IAAM;IAANA,QAAAA,IAAM;IAAA;;IACb,aAAO9B,aAAO,CAAChE,KAAR,CAAc,IAAd,EAAoB8F,IAApB,CAAP;IACH,KAXA;;IAoBDzI,IAAAA,aApBC,6BAoBsB;IAAA,yCAANyI,IAAM;IAANA,QAAAA,IAAM;IAAA;;IACnB,aAAOzI,aAAa,CAAC2C,KAAd,CAAoB,IAApB,EAA0B8F,IAA1B,CAAP;IACH,KAtBA;;IA+BD9G,IAAAA,aA/BC,6BA+BsB;IAAA,yCAAN8G,IAAM;IAANA,QAAAA,IAAM;IAAA;;IACnB,aAAO9G,aAAa,CAACgB,KAAd,CAAoB,IAApB,EAA0B8F,IAA1B,CAAP;IACH;IAjCA,GAPM;;IAiDX3D,EAAAA,GAjDW,iBAiDE;IAAA,uCAAN2D,IAAM;IAANA,MAAAA,IAAM;IAAA;;IACT,WAAO7B,SAAS,CAACjE,KAAV,CAAgB,IAAhB,EAAsB8F,IAAtB,CAAP;IACH;IAnDU,CAAf;;IA4DA,SAASnJ,KAAT,GAAwB;IAAA,qCAANmJ,IAAM;IAANA,IAAAA,IAAM;IAAA;;IACpB,SAAOhB,SAAS,CAAC9E,KAAV,CAAgB,IAAhB,EAAsB8F,IAAtB,CAAP;IACH;;IAQD,SAASC,eAAT,CAAyBC,QAAzB,EAA4C;IACxC,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;IAAA,uCADAF,IACA;IADAA,MAAAA,IACA;IAAA;;IAC9BnJ,IAAAA,KAAK,CAACqD,KAAN,CAAY,IAAZ,aAAsB3E,qBAAtB,SAA8C2K,QAA9C,UAA6DF,IAA7D;IACH;IACJ;;IAQD,SAASG,OAAT,GAA0B;IAAA,qCAANH,IAAM;IAANA,IAAAA,IAAM;IAAA;;IACtB,SAAOV,WAAW,CAACpF,KAAZ,CAAkB,IAAlB,EAAwB8F,IAAxB,CAAP;IACH;;IAEDP,gBAAgB;;;;;;;;;;;;;;;;;;"}