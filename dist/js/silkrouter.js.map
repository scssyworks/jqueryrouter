{"version":3,"file":"silkrouter.js","sources":["../../src/js/utils/constants.js","../../src/js/utils/libs.js","../../src/js/utils/helpers.js","../../src/js/silkrouter.js"],"sourcesContent":["/**\n * Router constants\n */\nexport const HASH_CHANGE = 'hashchange';\nexport const POP_STATE = 'popstate';\nexport const ROUTE_CHANGED = 'route.changed';\nexport const REG_ROUTE_PARAMS = /:[^\\/]+/g;\nexport const REG_PATHNAME = /^\\/(?=[^?]*)/;\nexport const REG_HASH_QUERY = /\\?.+/;\nexport const INVALID_ROUTE = 'Route string is not a pure route';","import LZStorage from 'lzstorage';\n\nconst store = new LZStorage({\n    compression: true\n});\n\n/**\n * Store library\n * @namespace libs\n * @type {object}\n * @private\n */\nexport const libs = {\n    /**\n     * Get's decompressed data from store\n     * @private\n     * @method getDataFromStore\n     * @memberof libs\n     * @param {string} path URL path\n     * @param {boolean} isHash Flag to determine if it's a pathname or hash\n     * @returns {*}\n     */\n    getDataFromStore(path, isHash) {\n        const paths = store.get('routeStore') || {};\n        return paths[`${isHash ? '#' : ''}${path}`];\n    },\n    /**\n     * @private\n     * @method setDataToStore\n     * @memberof libs\n     * @param {string} path URL path\n     * @param {boolean} isHash Flag to determine if it's a pathname or hash\n     * @param {any} data Data\n     * @returns {boolean}\n     */\n    setDataToStore(path, isHash, data) {\n        let paths = store.get('routeStore') || {};\n        if (paths[path]) {\n            if (\n                !data\n                || (\n                    typeof data === 'object'\n                    && Object.keys(data).length === 0\n                )\n            ) {\n                // Don't change existing data\n                return false;\n            }\n        }\n        paths = {\n            ...paths,\n            [`${isHash ? '#' : ''}${path}`]: data\n        };\n        return store.set('routeStore', paths, true);\n    },\n    /**\n     * @namespace handlers\n     * @type {object[]}\n     * @private\n     */\n    handlers: []\n};","import deparam from 'deparam.js';\nimport { POP_STATE, HASH_CHANGE, ROUTE_CHANGED, REG_ROUTE_PARAMS, INVALID_ROUTE, REG_HASH_QUERY, REG_PATHNAME } from './constants';\nimport { libs } from './libs';\n\n/**\n * Trims leading/trailing special characters\n * @private\n * @param {string} param Parameters\n */\nfunction sanitize(str) {\n    return str.replace(/^([^a-zA-Z0-9]+)|([^a-zA-Z0-9]+)$/g, \"\");\n}\n\n/**\n * Triggers \"route.changed\" event\n * @private\n * @param {object} config Route event configuration\n * @param {object} config.originalEvent Original \"popstate\" event object\n * @param {string} config.route route string\n * @param {string} config.type Type of event\n * @param {boolean} config.hash Flag that determines type of event expected\n * @param {object} config.originalData Original data persisted by history API\n */\nfunction triggerRoute({ originalEvent = {}, route, type, hash = false, originalData = {} }) {\n    trigger(\n        ROUTE_CHANGED,\n        {\n            originalEvent,\n            route,\n            type,\n            hash\n        },\n        originalData\n    );\n}\n\n/**\n * Checks if given route is valid\n * @private\n * @param {string} route Route string\n */\nfunction isValidRoute(route) {\n    if (typeof route !== \"string\") {\n        return false;\n    };\n    return REG_PATHNAME.test(route);\n}\n\n/**\n * Adds a query string\n * @private\n * @param {string} route Route string\n * @param {string} qString Query string\n * @param {boolean} appendQString Append query string flag\n */\nfunction resolveQuery(route = '', isHash = false, queryString = '', append = false) {\n    queryString = queryString.charAt(0) === '?' ? queryString.substring(1).trim() : queryString.trim();\n    if (!isHash) {\n        if (append) {\n            if (queryString) {\n                return `${route}${location.search}&${queryString}`;\n            }\n            return `${route}${location.search}`;\n        } else if (queryString) {\n            return `${route}?${queryString}`;\n        }\n        return route;\n    } else if (queryString) {\n        return `${location.pathname}${location.search}#${route}?${queryString}`;\n    }\n    return `${location.pathname}${location.search}#${route}`;\n}\n\n/**\n * Converts current query string into an object\n * @private\n */\nfunction getQueryParams(coerce = false) {\n    const qsObject = deparam(window.location.search, coerce);\n    let hashStringParams = {};\n    if (window.location.hash.match(REG_HASH_QUERY)) {\n        hashStringParams = {\n            ...hashStringParams,\n            ...deparam(window.location.hash.match(REG_HASH_QUERY)[0], coerce)\n        };\n    }\n    return {\n        ...qsObject,\n        ...hashStringParams\n    };\n}\n\n/**\n * Set route for given view\n * @private\n * @param {string|object} oRoute Route string or object\n * @param {boolean} replaceMode Replace mode\n * @param {boolean} noTrigger Do not trigger handler\n */\nexport function execRoute(route = {}, replaceMode = false, noTrigger = false) {\n    let routeObject = typeof route === 'string' ? { route } : {\n        ...route\n    };\n    routeObject = {\n        ...routeObject,\n        replaceMode,\n        noTrigger\n    };\n    const { route: sroute, replaceMode: rm, noTrigger: nt, queryString: qs = '', data, title = null, appendQuery } = routeObject;\n    if (typeof sroute === 'string') {\n        const isHash = sroute.charAt(0) === '#' ? 1 : 0;\n        let [pureRoute, queryString = ''] = sroute.trim().split('?');\n        const routeMethod = `${rm ? 'replace' : 'push'}State`;\n        queryString = queryString || qs;\n        pureRoute = pureRoute.substring(isHash);\n        if (isValidRoute(pureRoute)) {\n            libs.setDataToStore(pureRoute, isHash === 1, data);\n            const completeRoute = resolveQuery(pureRoute, isHash === 1, queryString, appendQuery);\n            history[routeMethod]({ data }, title, completeRoute);\n            if (!nt) {\n                triggerRoute(\n                    {\n                        route: `${isHash ? '#' : ''}${pureRoute}`,\n                        type: (isHash ? HASH_CHANGE : POP_STATE),\n                        hash: (isHash === 1)\n                    }\n                );\n            }\n        } else {\n            throw new Error(INVALID_ROUTE);\n        }\n    }\n}\n\n/**\n * Binds generic route if route is passed as a list of URLs\n * @param {string[]} route Array of routes\n * @param {*} handler Handler function\n */\nfunction bindGenericRoute(route, handler) {\n    bindRoute((...args) => {\n        if (typeof handler === 'function') {\n            const [e] = args;\n            if (route.indexOf(e.route) > -1) {\n                handler.apply(this, args);\n            } else if (\n                route.indexOf(`#${e.route}`) > -1\n                && e.hash\n            ) {\n                handler.apply(this, args);\n            }\n        }\n    });\n}\n\n/**\n * Attaches a route handler function\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport function bindRoute(route, handler) {\n    // Resolve generic route\n    if (typeof route === 'function') {\n        handler = route;\n        route = '*';\n    }\n    if (Array.isArray(route)) {\n        bindGenericRoute(route, handler);\n        return;\n    }\n    const startIndex = route.charAt(0) === '#' ? 1 : 0;\n    route = route.substring(startIndex);\n    // Check existence\n    const exists = libs.handlers.filter(ob => {\n        return (ob.handler === handler && ob.route === route);\n    }).length;\n    // Attach handler\n    if (!exists && typeof handler === 'function') {\n        libs.handlers.push({\n            eventName: ROUTE_CHANGED,\n            handler,\n            route,\n            hash: startIndex === 1\n        });\n    }\n    // Execute handler if matches current route (Replaces init method in version 2.0)\n    const { pathname, hash } = window.location;\n    const paths = startIndex === 1 ? [hash] : [pathname, hash];\n    paths.filter(path => path.trim()).forEach(currentPath => {\n        const pathIndex = currentPath.charAt(0) === '#' ? 1 : 0;\n        const { hasMatch, data, params } = testRoute(route, currentPath);\n        if (hasMatch && typeof handler === 'function') {\n            handler({\n                route: currentPath,\n                hash: pathIndex === 1,\n                eventName: pathIndex === 1 ? HASH_CHANGE : POP_STATE,\n                data,\n                params,\n                query: getQueryParams()\n            });\n        }\n    });\n}\n\n/**\n * Unbinds route handlers\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport function unbindRoute(route, handler) {\n    const args = arguments;\n    if (args.length === 0) {\n        libs.handlers.length = 0;\n    }\n    libs.handlers = libs.handlers.filter(ob => {\n        if (args.length === 1 && typeof args[0] === 'string') {\n            return ob.route !== route;\n        }\n        // Check for generic route\n        if (args.length === 1 && typeof args[0] === 'function') {\n            handler = args[0];\n            route = '*'; // Generic route\n        }\n        return !(ob.route === route && ob.handler === handler);\n    });\n}\n\n\n/**\n * Compares route with current URL\n * @private\n * @param {string} route Route string\n * @param {string} url Current url\n * @param {object} params Parameters\n */\nfunction testRoute(route, url, originalData = {}) {\n    const isHash = url.charAt(0) === '#';\n    if (isHash) {\n        url = url.substring(1);\n    }\n    const [path] = url.split('?');\n    if (!!Object.keys(originalData).length) {\n        libs.setDataToStore(path, isHash, originalData); // Sync store with event data.\n    }\n    const data = libs.getDataFromStore(path, isHash);\n    const params = {};\n    let hasMatch = false;\n    REG_ROUTE_PARAMS.lastIndex = 0;\n    if (REG_ROUTE_PARAMS.test(route)) {\n        const pathRegex = new RegExp(route.replace(/\\//g, \"\\\\/\").replace(/:[^\\/\\\\]+/g, \"([^\\\\/]+)\"));\n        if (pathRegex.test(url)) {\n            hasMatch = true;\n            REG_ROUTE_PARAMS.lastIndex = 0;\n            const keys = [...route.match(REG_ROUTE_PARAMS)].map(sanitize);\n            const values = [...url.match(pathRegex)];\n            values.shift();\n            keys.forEach((key, index) => {\n                params[key] = values[index];\n            });\n        }\n    } else {\n        hasMatch = isValidRoute(url) && ((route === url) || (route === '*'));\n    }\n    return {\n        hasMatch,\n        data,\n        params\n    };\n}\n\n/**\n * Triggers a router event\n * @private\n * @param {string} eventName Name of route event\n * @param {object} params Parameters\n */\nfunction execListeners(eventName, routeConfig, originalData = {}) {\n    const { hash: isHash } = routeConfig;\n    const { hash, pathname } = window.location;\n    libs.handlers.forEach(ob => {\n        if (ob.eventName === eventName) {\n            const { hasMatch, data, params } = testRoute(\n                ob.route,\n                (isHash ? hash : pathname),\n                originalData\n            );\n            if (hasMatch && (!ob.hash || (ob.hash && isHash))) {\n                ob.handler({\n                    ...routeConfig,\n                    data,\n                    params,\n                    query: getQueryParams()\n                });\n            }\n        }\n    });\n}\n\n/**\n * Internal method to trigger a routing event\n * @private\n */\nexport function trigger() {\n    return execListeners.apply(this, arguments);\n}\n\n/**\n * Initializes router events\n * @private\n */\nexport function initRouterEvents() {\n    window.addEventListener(`${POP_STATE}`, function (e) {\n        const completePath = `${location.pathname}${location.hash}`;\n        const [pathname, hashstring] = completePath.split('#');\n        let originalData = {};\n        if (e.state) {\n            const { data } = e.state;\n            if (data) {\n                originalData = data;\n            }\n        }\n        triggerRoute({\n            originalEvent: e,\n            route: pathname,\n            type: e.type,\n            hash: false,\n            originalData\n        });\n        if (hashstring) {\n            triggerRoute({\n                originalEvent: e,\n                route: `#${hashstring}`,\n                type: HASH_CHANGE,\n                hash: true,\n                originalData\n            });\n        }\n    });\n}","import { execRoute, bindRoute, unbindRoute, initRouterEvents, trigger } from './utils/helpers';\n\n/**\n * @namespace router\n * @public\n * @type {object}\n */\nconst router = {\n    /**\n     * @namespace api\n     * @memberof router\n     * @type {object}\n     */\n    api: {\n        /**\n         * Triggers a custom route event\n         * @method trigger\n         * @public\n         * @memberof router.api\n         * @param {...*} arguments\n         */\n        trigger() {\n            return trigger.apply(this, arguments);\n        }\n    },\n    /**\n     * Sets a route url\n     * @public\n     * @param {string|object} route Route object or URL\n     * @param {boolean} replaceMode Flag to enable replace mode\n     * @param {boolean} noTrigger Flag to disable handler while changing route\n     */\n    set() {\n        return execRoute.apply(this, arguments);\n    }\n}\n\n/**\n * Attaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction route() {\n    return bindRoute.apply(this, arguments);\n}\n\n/**\n * Detaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction unroute() {\n    return unbindRoute.apply(this, arguments);\n}\n\ninitRouterEvents();\n\nexport { router, route, unroute };"],"names":["HASH_CHANGE","POP_STATE","ROUTE_CHANGED","REG_ROUTE_PARAMS","REG_PATHNAME","REG_HASH_QUERY","INVALID_ROUTE","store","LZStorage","compression","libs","getDataFromStore","path","isHash","paths","get","setDataToStore","data","Object","keys","length","set","handlers","sanitize","str","replace","triggerRoute","originalEvent","route","type","hash","originalData","trigger","isValidRoute","test","resolveQuery","queryString","append","charAt","substring","trim","location","search","pathname","getQueryParams","coerce","qsObject","deparam","window","hashStringParams","match","execRoute","replaceMode","noTrigger","routeObject","sroute","rm","nt","qs","title","appendQuery","split","pureRoute","routeMethod","completeRoute","history","Error","bindGenericRoute","handler","bindRoute","args","e","indexOf","apply","Array","isArray","startIndex","exists","filter","ob","push","eventName","forEach","currentPath","pathIndex","testRoute","hasMatch","params","query","unbindRoute","arguments","url","lastIndex","pathRegex","RegExp","map","values","shift","key","index","execListeners","routeConfig","initRouterEvents","addEventListener","completePath","hashstring","state","router","api","unroute"],"mappings":"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"}