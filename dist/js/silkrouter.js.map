{"version":3,"file":"silkrouter.js","sources":["../../src/js/utils/constants.js","../../src/js/utils/utils.js","../../src/js/utils/vars.js","../../src/js/utils/params.js","../../src/js/utils/query.js","../../src/js/utils/deparam.js","../../src/js/utils/assign.js","../../src/js/utils/libs.js","../../src/js/api/resolveQuery/index.js","../../src/js/api/getQueryParams/index.js","../../src/js/api/testRoute/index.js","../../src/js/api/trigger/index.js","../../src/js/api/triggerRoute/index.js","../../src/js/api/execRoute/index.js","../../src/js/api/bindRoute/index.js","../../src/js/api/unbindRoute/index.js","../../src/js/api/initRouterEvents/index.js","../../src/js/silkrouter.js"],"sourcesContent":["/**\n * Router constants\n */\nexport const HASH_CHANGE = 'hashchange';\nexport const POP_STATE = 'popstate';\nexport const ROUTE_CHANGED = 'route.changed';\nexport const REG_ROUTE_PARAMS = /:[^\\/]+/g;\nexport const REG_PATHNAME = /^\\/(?=[^?]*)/;\nexport const REG_HASH_QUERY = /\\?.+/;\nexport const INVALID_ROUTE = 'Route string is not a pure route';\nexport const CASE_INSENSITIVE_FLAG = '$$';","import { REG_PATHNAME } from './constants';\n\n/**\n * Shorthand for Array.isArray\n */\nexport const isArr = Array.isArray;\n\n/**\n * Safely trims string\n * @param {string} str String\n */\nexport function trim(str) {\n    return ((typeof str === 'string') ? str.trim() : '');\n}\n\n/**\n * Checks if input is a number\n * @param {*} key \n */\nexport function isNumber(key) {\n    key = trim(`${key}`);\n    if (['null', 'undefined', ''].indexOf(key) > -1) return false;\n    return !isNaN(Number(key));\n}\n\n/**\n * Checks if key is a true object\n * @param {*} key Any type of value\n */\nexport function isObject(key) {\n    return (key && !isArr(key) && key.toString() === \"[object Object]\");\n}\n\n/**\n * Sets default value\n * @param {*} value Any value\n * @param {*} defaultValue Default value if value is undefined\n */\nexport function setDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\n\n/**\n * Converts array like object to array\n * @param {any[]} arr Arraylike object\n */\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n\n/**\n * Checks if given route is valid\n * @private\n * @param {string} route Route string\n */\nexport function isValidRoute(route) {\n    return (typeof route === 'string' && REG_PATHNAME.test(route));\n}\n\n/**\n * Checks if the URL is a hash URL\n * @private\n * @param {string} URL URL string\n */\nexport function isHashURL(URL) {\n    return typeof URL === 'string' && URL.charAt(0) === '#';\n}\n\n/**\n * Checks if input value is a function\n * @param {function} fn Input function\n */\nexport function isFunc(fn) {\n    return typeof fn === 'function';\n}","export const loc = window.location;\n","import { REG_ROUTE_PARAMS } from './constants';\nimport { toArray, setDefault } from './utils';\nimport { loc } from './vars';\n\n/**\n * Parses current path and returns params object\n * @private\n * @param {string} expr Route expression\n * @param {string} path URL path\n * @returns {object}\n */\nexport function extractParams(expr, path) {\n    path = setDefault(path, loc.pathname);\n    const params = {};\n    if (REG_ROUTE_PARAMS.test(expr)) {\n        const pathRegex = new RegExp(expr.replace(/\\//g, \"\\\\/\").replace(/:[^\\/\\\\]+/g, \"([^\\\\/]+)\"));\n        REG_ROUTE_PARAMS.lastIndex = 0;\n        if (pathRegex.test(path)) {\n            const keys = toArray(expr.match(REG_ROUTE_PARAMS)).map(key => key.replace(':', ''));\n            const values = toArray(path.match(pathRegex));\n            values.shift();\n            keys.forEach((key, index) => {\n                params[key] = values[index];\n            });\n        }\n    }\n    return params;\n}","import { isArr, isObject } from './utils';\n\n/**\n * Builds query string recursively\n * @private\n * @param {string[]} queryStringParts List of query string key value pairs\n * @param {*} key Key\n * @param {*} obj Value\n */\nfunction buildQueryString(queryStringParts, key, obj) {\n    let isCurrObjArray = false;\n    if (isObject(obj) || (isCurrObjArray = isArr(obj))) {\n        Object.keys(obj).forEach(obKey => {\n            let qKey = isCurrObjArray ? '' : obKey;\n            buildQueryString(queryStringParts, `${key}[${qKey}]`, obj[obKey]);\n        });\n    } else if (['string', 'number', 'boolean', 'undefined', 'object'].indexOf(typeof obj) > -1) {\n        queryStringParts.push(`${encodeURIComponent(key)}=${encodeURIComponent(obj)}`);\n    }\n}\n\n/**\n * Converts an object to a query string\n * @private\n * @param {object} obj Object which should be converted to a string\n * @returns {string}\n */\nexport function toQueryString(obj) {\n    let queryStringParts = [];\n    if (isObject(obj) || isArr(obj)) {\n        Object.keys(obj).forEach(key => {\n            buildQueryString(queryStringParts, key, obj[key]);\n        });\n        return queryStringParts.join('&');\n    } else if (typeof obj === 'string') {\n        return obj;\n    }\n    return '';\n}","import { loc } from './vars';\nimport { isArr, trim, isNumber, isObject, setDefault } from './utils';\n\n/**\n * Checks if query parameter key is a complex notation\n * @param {string} q \n */\nfunction ifComplex(q) {\n    return (/\\[/.test(q));\n}\n\n/**\n * Converts query string to JavaScript object\n * @param {string} qs query string argument (defaults to url query string)\n */\nfunction deparam(qs, coerce) {\n    qs = trim(setDefault(qs, loc.search));\n    coerce = setDefault(coerce, false);\n    if (qs.charAt(0) === '?') {\n        qs = qs.replace('?', '');\n    }\n    const queryParamList = qs.split('&');\n    const queryObject = {};\n    if (qs) {\n        queryParamList.forEach((qq) => {\n            const qArr = qq.split('=').map(part => decodeURIComponent(part));\n            if (ifComplex(qArr[0])) {\n                complex.apply(this, [].concat(qArr).concat([queryObject, coerce]));\n            } else {\n                simple.apply(this, [qArr, queryObject, false, coerce]);\n            }\n        });\n    }\n    return queryObject;\n}\n\n/**\n * Converts an array to an object\n * @param {array} arr \n */\nfunction toObject(arr) {\n    var convertedObj = {};\n    if (isArr(arr)) {\n        arr.forEach((value, index) => {\n            convertedObj[index] = value;\n        });\n    }\n    return convertedObj;\n}\n\n/**\n * Resolves an array to object if required\n * @param {array} ob An array object\n * @param {boolean} isNumber flag to test if next key is number\n */\nfunction resolve(ob, isNextNumber) {\n    if (typeof ob === 'undefined') {\n        ob = [];\n    }\n    return isNextNumber ? ob : toObject(ob);\n}\n\n/**\n * Resolves the target object for next iteration\n * @param {Object} ob current reference object\n * @param {string} nextProp reference property in current object\n */\nfunction resolveObj(ob, nextProp) {\n    if (isObject(ob)) return { ob };\n    if (isArr(ob) || typeof ob === 'undefined') return { ob: resolve(ob, isNumber(nextProp)) };\n    return { ob: [ob], push: ob !== null };\n}\n\n/**\n * Handles complex query parameters\n * @param {string} key \n * @param {string} value \n * @param {Object} obj \n */\nfunction complex(key, value, obj, doCoerce) {\n    doCoerce = setDefault(doCoerce, true);\n    const match = key.match(/([^\\[]+)\\[([^\\[]*)\\]/) || [];\n    if (match.length === 3) {\n        let prop = match[1];\n        let nextProp = match[2];\n        key = key.replace(/\\[([^\\[]*)\\]/, '');\n        if (ifComplex(key)) {\n            if (nextProp === '') nextProp = '0';\n            key = key.replace(/[^\\[]+/, nextProp);\n            complex(key, value, (obj[prop] = resolveObj(obj[prop], nextProp).ob), doCoerce);\n        } else if (nextProp) {\n            const r = resolveObj(obj[prop], nextProp);\n            obj[prop] = r.ob;\n            const coercedValue = doCoerce ? coerce(value) : value;\n            if (r.push) {\n                const tempObj = {};\n                tempObj[nextProp] = coercedValue;\n                obj[prop].push(tempObj);\n            } else {\n                obj[prop][nextProp] = coercedValue;\n            }\n        } else {\n            simple([match[1], value], obj, true);\n        }\n    }\n}\n\n/**\n * Handles simple query\n * @param {array} qArr \n * @param {Object} queryObject \n * @param {boolean} toArray \n */\nfunction simple(qArr, queryObject, toArray, doCoerce) {\n    doCoerce = setDefault(doCoerce, true);\n    let key = qArr[0];\n    let value = qArr[1];\n    if (doCoerce) {\n        value = coerce(value);\n    }\n    if (key in queryObject) {\n        queryObject[key] = isArr(queryObject[key]) ? queryObject[key] : [queryObject[key]];\n        queryObject[key].push(value);\n    } else {\n        queryObject[key] = toArray ? [value] : value;\n    }\n}\n\n/**\n * Restores values to their original type\n * @param {string} value undefined or string value\n */\nfunction coerce(value) {\n    if (value == null) return '';\n    if (typeof value !== 'string') return value;\n    value = trim(value);\n    if (isNumber(value)) return +value;\n    switch (value) {\n        case 'null': return null;\n        case 'undefined': return undefined;\n        case 'true': return true;\n        case 'false': return false;\n        case 'NaN': return NaN;\n        default: return value;\n    }\n}\n\n// Library encapsulation\nfunction lib() {\n    return deparam.apply(this, arguments);\n}\n\nexport { lib as deparam };","import { isObject } from './utils';\n\n/**\n * Inner loop function for assign\n * @private\n * @param {object} ref Argument object\n * @param {object} target First object\n */\nfunction loopFunc(ref, target) {\n    if (isObject(ref)) {\n        Object.keys(ref).forEach(function (key) {\n            target[key] = ref[key];\n        });\n    }\n}\n\n/**\n * Polyfill for Object.assign only smaller and with less features\n * @private\n * @returns {object}\n */\nexport function assign() {\n    const target = isObject(arguments[0]) ? arguments[0] : {};\n    for (let i = 1; i < arguments.length; i++) {\n        loopFunc(arguments[i], target);\n    }\n    return target;\n}","import ArgonStorage from 'argon-storage';\nimport { assign } from './assign';\nimport { isObject } from './utils';\n\nconst store = new ArgonStorage({\n    compress: true\n});\n\nstore.set('testing', 'working');\nconsole.log(store.get('testing'));\n\n/**\n * Store library\n * @namespace libs\n * @type {object}\n * @private\n */\nexport const libs = {\n    /**\n     * Get's decompressed data from store\n     * @private\n     * @method getDataFromStore\n     * @memberof libs\n     * @param {string} path URL path\n     * @param {boolean} isHash Flag to determine if it's a pathname or hash\n     * @returns {*}\n     */\n    getDataFromStore(path, isHash) {\n        const paths = assign(store.get('routeStore'));\n        return paths[`${isHash ? '#' : ''}${path}`];\n    },\n    /**\n     * @private\n     * @method setDataToStore\n     * @memberof libs\n     * @param {string} path URL path\n     * @param {boolean} isHash Flag to determine if it's a pathname or hash\n     * @param {any} data Data\n     * @returns {boolean}\n     */\n    setDataToStore(path, isHash, data) {\n        let paths = assign(store.get('routeStore'));\n        if (paths[path]) {\n            if (\n                !data\n                || (\n                    isObject(data)\n                    && Object.keys(data).length === 0\n                )\n            ) {\n                // Don't change existing data\n                return false;\n            }\n        }\n        const newPath = {};\n        newPath[`${isHash ? '#' : ''}${path}`] = data;\n        paths = assign({}, paths, newPath);\n        return store.set('routeStore', paths, true);\n    },\n    /**\n     * @namespace handlers\n     * @type {object[]}\n     * @private\n     */\n    handlers: [],\n    contains(fn) {\n        return !!this.handlers.filter(fn).length;\n    }\n};","import { loc } from '../../utils/vars';\nimport { trim } from '../../utils/utils';\n\n/**\n * Adds a query string\n * @private\n * @param {string} route Route string\n * @param {string} qString Query string\n * @param {boolean} appendQString Append query string flag\n */\nexport default function resolveQuery(route, isHash, queryString, append) {\n    queryString = trim(queryString.substring((queryString.charAt(0) === '?' ? 1 : 0)));\n    if (!isHash) {\n        if (append) {\n            return `${route}${loc.search}${(queryString ? `&${queryString}` : '')}`;\n        }\n        return `${route}${(queryString ? `?${queryString}` : '')}`;\n    }\n    return `${loc.pathname}${loc.search}#${route}${queryString ? `?${queryString}` : ''}`;\n}","import { deparam } from '../../utils/deparam';\nimport { loc } from '../../utils/vars';\nimport { assign } from '../../utils/assign';\nimport { REG_HASH_QUERY } from '../../utils/constants';\n\n/**\n * Converts current query string into an object\n * @private\n */\nexport default function getQueryParams() {\n    const qsObject = deparam();\n    let hashStringParams = {};\n    const hashQuery = loc.hash.match(REG_HASH_QUERY);\n    if (hashQuery) {\n        hashStringParams = assign({}, deparam(hashQuery[0]));\n    }\n    return assign({}, qsObject, hashStringParams);\n}","import { libs } from '../../utils/libs';\nimport { extractParams } from '../../utils/params';\nimport { isValidRoute, isHashURL } from '../../utils/utils';\nimport { assign } from '../../utils/assign';\n\n/**\n * Compares route with current URL\n * @private\n * @param {string} route Route string\n * @param {string} url Current url\n * @param {object} params Parameters\n */\nexport default function testRoute(route, url, originalData) {\n    originalData = assign(originalData);\n    const isHash = isHashURL(url);\n    url = url.substring(isHash ? 1 : 0);\n    const path = url.split('?')[0];\n    if (!!Object.keys(originalData).length) {\n        libs.setDataToStore(path, isHash, originalData); // Sync store with event data.\n    }\n    const data = libs.getDataFromStore(path, isHash);\n    const params = extractParams(route, url);\n    let hasMatch = Object.keys(params).length > 0 || (\n        isValidRoute(url) && ((route === url) || (route === '*'))\n    );\n    return {\n        hasMatch,\n        data,\n        params\n    };\n}","import { loc } from '../../utils/vars';\nimport { libs } from '../../utils/libs';\nimport getQueryParams from '../getQueryParams';\nimport testRoute from '../testRoute';\nimport { assign } from '../../utils/assign';\n\n/**\n * Triggers a router event\n * @private\n * @param {string} eventName Name of route event\n * @param {object} params Parameters\n */\nexport default function execListeners(eventName, rc, originalData) {\n    originalData = assign(originalData);\n    libs.handlers.forEach(ob => {\n        if (ob.eventName === eventName) {\n            let cRoute = ob.route;\n            let cCurrentPath = (rc.hash ? loc.hash : loc.pathname);\n            if (ob.isCaseInsensitive) {\n                cRoute = cRoute.toLowerCase();\n                cCurrentPath = cCurrentPath.toLowerCase();\n            }\n            const { hasMatch, data, params } = testRoute(\n                cRoute,\n                cCurrentPath,\n                originalData\n            );\n            if (hasMatch && (!ob.hash || (ob.hash && rc.hash))) {\n                ob.handler(assign({}, rc, {\n                    data,\n                    params,\n                    query: getQueryParams()\n                }));\n            }\n        }\n    });\n}","import { ROUTE_CHANGED, HASH_CHANGE, POP_STATE } from '../../utils/constants';\nimport trigger from '../trigger';\nimport { assign } from '../../utils/assign';\n\n/**\n * Triggers \"route.changed\" event\n * @private\n * @param {object} config Route event configuration\n * @param {object} config.originalEvent Original \"popstate\" event object\n * @param {string} config.route route string\n * @param {string} config.type Type of event\n * @param {boolean} config.hash Flag that determines type of event expected\n * @param {object} config.originalData Original data persisted by history API\n */\nexport default function triggerRoute(ob) {\n    ob.originalEvent = assign(ob.originalEvent);\n    ob.type = ob.hash ? HASH_CHANGE : POP_STATE;\n    const originalData = assign(ob.originalData);\n    delete ob.originalData;\n    trigger(\n        ROUTE_CHANGED,\n        ob,\n        originalData\n    );\n}","import { assign } from '../../utils/assign';\nimport { trim, isValidRoute, isHashURL } from '../../utils/utils';\nimport { toQueryString } from '../../utils/query';\nimport { libs } from '../../utils/libs';\nimport resolveQuery from '../resolveQuery';\nimport triggerRoute from '../triggerRoute';\nimport { INVALID_ROUTE } from '../../utils/constants';\n\n/**\n * Set route for given view\n * @private\n * @param {string|object} oRoute Route string or object\n * @param {boolean} replaceMode Replace mode\n * @param {boolean} noTrigger Do not trigger handler\n */\nexport default function execRoute(route, replaceMode, noTrigger) {\n    let ro = assign(\n        { replaceMode, noTrigger },\n        (\n            typeof route === 'string'\n                ? { route }\n                : route\n        )\n    );\n    if (typeof ro.route === 'string') {\n        const hash = isHashURL(ro.route);\n        const routeParts = trim(ro.route).split('?');\n        let pureRoute = routeParts[0].substring(hash ? 1 : 0);\n        let queryString = trim(routeParts[1]);\n        queryString = toQueryString(queryString || trim(ro.queryString));\n        if (isValidRoute(pureRoute)) {\n            libs.setDataToStore(pureRoute, hash, ro.data);\n            const completeRoute = resolveQuery(pureRoute, hash, queryString, ro.appendQuery);\n            history[ro.replaceMode ? 'replaceState' : 'pushState']({ data: ro.data }, ro.title, completeRoute);\n            if (!ro.noTrigger) {\n                triggerRoute({\n                    route: `${hash ? '#' : ''}${pureRoute}`,\n                    hash\n                });\n            }\n        } else {\n            throw new Error(INVALID_ROUTE);\n        }\n    }\n}\n","import { isArr, trim, isHashURL, isFunc } from '../../utils/utils';\nimport { CASE_INSENSITIVE_FLAG, ROUTE_CHANGED, POP_STATE, HASH_CHANGE } from '../../utils/constants';\nimport { libs } from '../../utils/libs';\nimport { loc } from '../../utils/vars';\nimport testRoute from '../testRoute';\nimport getQueryParams from '../getQueryParams';\n\n/**\n * Binds generic route if route is passed as a list of URLs\n * @private\n * @param {string[]} route Array of routes\n * @param {*} handler Handler function\n */\nfunction bindGenericRoute(route, handler) {\n    if (libs.contains(ob => (ob.prevHandler === handler))) {\n        return;\n    }\n    bindRoute((e) => {\n        if (isFunc(handler)) {\n            if (route.indexOf(`${e.hash ? '#' : ''}${e.route.substring(e.hash ? 1 : 0)}`) > -1) {\n                handler.apply(this, [e]);\n            }\n        }\n    }, handler);\n}\n\n/**\n * Attaches a route handler function\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport default function bindRoute(route, handler, prevHandler) {\n    // Resolve generic route\n    let caseIgnored = typeof route === 'string' && route.indexOf(CASE_INSENSITIVE_FLAG) === 0;\n    if (isFunc(route)) {\n        prevHandler = handler;\n        handler = route;\n        route = '*';\n    }\n    if (isArr(route)) {\n        bindGenericRoute(route, handler);\n        return;\n    }\n    route = route.substring(caseIgnored ? CASE_INSENSITIVE_FLAG.length : 0);\n    const containsHash = isHashURL(route);\n    route = route.substring((containsHash ? 1 : 0));\n    // Attach handler\n    if (\n        !libs.contains(ob => (ob.handler === handler && ob.route === route))\n        && isFunc(handler)\n    ) {\n        libs.handlers.push({\n            eventName: ROUTE_CHANGED,\n            handler,\n            prevHandler,\n            route,\n            hash: containsHash,\n            caseIgnored,\n            isCaseInsensitive: caseIgnored\n        });\n    }\n    // Execute handler if matches current route (Replaces init method in version 2.0)\n    const paths = containsHash ? [loc.hash] : [loc.pathname, loc.hash];\n    paths.filter(path => trim(path)).forEach(currentPath => {\n        let cRoute = caseIgnored ? route.toLowerCase() : route;\n        let cCurrentPath = caseIgnored ? currentPath.toLowerCase() : currentPath;\n        const containsHash = isHashURL(currentPath);\n        const tr = testRoute(cRoute, cCurrentPath);\n        if (tr.hasMatch && isFunc(handler)) {\n            handler({\n                route: currentPath,\n                hash: containsHash,\n                eventName: containsHash ? HASH_CHANGE : POP_STATE,\n                data: tr.data,\n                params: tr.params,\n                query: getQueryParams(),\n                caseIgnored,\n                isCaseInsensitive: caseIgnored\n            });\n        }\n    });\n}\n","import { libs } from '../../utils/libs';\nimport { isArr, isFunc, toArray } from '../../utils/utils';\n\n/**\n * Unbinds route handlers\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport default function unbindRoute(route, handler) {\n    const prevLength = libs.handlers.length;\n    let isRouteList = isArr(route);\n    const args = toArray(arguments);\n    if (args.length === 0) {\n        libs.handlers.length = 0;\n        return prevLength;\n    }\n    if (isRouteList) {\n        route = '*';\n    }\n    libs.handlers = libs.handlers.filter(ob => {\n        if (args.length === 1 && typeof route === 'string' && !isRouteList) {\n            return ob.route !== route;\n        }\n        // Check for generic route\n        if (args.length === 1 && isFunc(route)) {\n            handler = route;\n            route = '*'; // Generic route\n        }\n        return !(ob.route === route && (\n            ob.handler === handler\n            || ob.prevHandler === handler\n        ));\n    });\n    return (prevLength - libs.handlers.length);\n}","import triggerRoute from '../triggerRoute';\nimport { POP_STATE } from '../../utils/constants';\nimport { loc } from '../../utils/vars';\nimport { assign } from '../../utils/assign';\n\n/**\n * Initializes router events\n * @private\n */\nexport default function initRouterEvents() {\n    window.addEventListener(`${POP_STATE}`, function (e) {\n        const pathParts = (`${loc.pathname}${loc.hash}`).split('#');\n        const defaultConfig = {\n            originalEvent: e,\n            originalData: assign(e.state && e.state.data)\n        };\n        triggerRoute(assign({}, defaultConfig, {\n            route: pathParts[0],\n            hash: false\n        }));\n        if (pathParts[1]) {\n            triggerRoute(assign({}, defaultConfig, {\n                route: `#${pathParts[1]}`,\n                hash: true\n            }));\n        }\n    });\n}","import { extractParams } from './utils/params';\nimport { CASE_INSENSITIVE_FLAG } from './utils/constants';\nimport { toQueryString } from './utils/query';\nimport { deparam } from './utils/deparam';\nimport execRoute from './api/execRoute';\nimport bindRoute from './api/bindRoute';\nimport unbindRoute from './api/unbindRoute';\nimport initRouterEvents from './api/initRouterEvents';\nimport { toArray } from './utils/utils';\n\n/**\n * @namespace router\n * @public\n * @type {object}\n */\nconst router = {\n    /**\n     * Sets a route url\n     * @public\n     * @param {string|object} route Route object or URL\n     * @param {boolean} replaceMode Flag to enable replace mode\n     * @param {boolean} noTrigger Flag to disable handler while changing route\n     */\n    set() {\n        return execRoute.apply(this, arguments);\n    }\n}\n\n/**\n * Attaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction route() {\n    return bindRoute.apply(this, arguments);\n}\n\n/**\n * Attaches case insensitive route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction routeIgnoreCase(firstArg) {\n    if (typeof firstArg === 'string') {\n        route.apply(this, [`${CASE_INSENSITIVE_FLAG}${firstArg}`, toArray(arguments).slice(1)]);\n    }\n}\n\n/**\n * Detaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction unroute() {\n    return unbindRoute.apply(this, arguments);\n}\n\ninitRouterEvents();\n\nexport {\n    router,\n    route,\n    routeIgnoreCase,\n    unroute,\n    deparam,\n    toQueryString as param,\n    extractParams as routeParams\n};"],"names":["HASH_CHANGE","POP_STATE","ROUTE_CHANGED","REG_ROUTE_PARAMS","REG_PATHNAME","REG_HASH_QUERY","INVALID_ROUTE","CASE_INSENSITIVE_FLAG","isArr","Array","isArray","trim","str","isNumber","key","indexOf","isNaN","Number","isObject","toString","setDefault","value","defaultValue","toArray","arr","prototype","slice","call","isValidRoute","route","test","isHashURL","URL","charAt","isFunc","fn","loc","window","location","extractParams","expr","path","pathname","params","pathRegex","RegExp","replace","lastIndex","keys","match","map","values","shift","forEach","index","buildQueryString","queryStringParts","obj","isCurrObjArray","Object","obKey","qKey","push","encodeURIComponent","toQueryString","join","ifComplex","q","deparam","qs","coerce","search","queryParamList","split","queryObject","qq","qArr","part","decodeURIComponent","complex","apply","concat","simple","toObject","convertedObj","resolve","ob","isNextNumber","resolveObj","nextProp","doCoerce","length","prop","r","coercedValue","tempObj","undefined","NaN","lib","arguments","loopFunc","ref","target","assign","i","store","ArgonStorage","compress","set","console","log","get","libs","getDataFromStore","isHash","paths","setDataToStore","data","newPath","handlers","contains","filter","resolveQuery","queryString","append","substring","getQueryParams","qsObject","hashStringParams","hashQuery","hash","testRoute","url","originalData","hasMatch","execListeners","eventName","rc","cRoute","cCurrentPath","isCaseInsensitive","toLowerCase","handler","query","triggerRoute","originalEvent","type","trigger","execRoute","replaceMode","noTrigger","ro","routeParts","pureRoute","completeRoute","appendQuery","history","title","Error","bindGenericRoute","prevHandler","bindRoute","e","caseIgnored","containsHash","currentPath","tr","unbindRoute","prevLength","isRouteList","args","initRouterEvents","addEventListener","pathParts","defaultConfig","state","router","routeIgnoreCase","firstArg","unroute"],"mappings":"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"}