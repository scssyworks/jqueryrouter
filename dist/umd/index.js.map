{"version":3,"file":"index.js","sources":["../../src/js/utils/constants.js","../../src/js/utils/utils.js","../../src/js/utils/vars.js","../../src/js/utils/params.js","../../src/js/utils/query.js","../../src/js/utils/deparam.js","../../src/js/utils/assign.js","../../src/js/store/index.js","../../src/js/utils/libs.js","../../src/js/api/resolveQuery/index.js","../../src/js/api/getQueryParams/index.js","../../src/js/api/testRoute/index.js","../../src/js/api/trigger/index.js","../../src/js/api/triggerRoute/index.js","../../src/js/api/execRoute/index.js","../../src/js/api/bindRoute/index.js","../../src/js/api/unbindRoute/index.js","../../src/js/api/initRouterEvents/index.js","../../src/js/silkrouter.js"],"sourcesContent":["/**\n * Router constants\n */\nexport const HASH_CHANGE = 'hashchange';\nexport const POP_STATE = 'popstate';\nexport const ROUTE_CHANGED = 'route.changed';\nexport const REG_ROUTE_PARAMS = /:[^\\/]+/g;\nexport const REG_PATHNAME = /^\\/(?=[^?]*)/;\nexport const REG_HASH_QUERY = /\\?.+/;\nexport const INVALID_ROUTE = 'Route string is not a pure route';\nexport const CASE_INSENSITIVE_FLAG = '$$';","import { REG_PATHNAME } from './constants';\n\n/**\n * Shorthand for Array.isArray\n */\nexport const isArr = Array.isArray;\n\n/**\n * Safely trims string\n * @param {string} str String\n */\nexport function trim(str) {\n    return ((typeof str === 'string') ? str.trim() : '');\n}\n\n/**\n * Checks if input is a number\n * @param {*} key \n */\nexport function isNumber(key) {\n    key = trim(`${key}`);\n    if (['null', 'undefined', ''].indexOf(key) > -1) return false;\n    return !isNaN(+key);\n}\n\n/**\n * Checks if value is an object\n * @param {*} value Any type of value\n */\nexport function isObject(value) {\n    return value && typeof value === 'object';\n}\n\n/**\n * Checks if key is a true object\n * @param {*} value Any type of value\n */\nexport function isPureObject(value) {\n    return isObject(value) && !isArr(value);\n}\n\n/**\n * Sets default value\n * @param {*} value Any value\n * @param {*} defaultValue Default value if value is undefined\n */\nexport function def(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\n\n/**\n * Converts array like object to array\n * @param {any[]} arr Arraylike object\n */\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n\n/**\n * Checks if given route is valid\n * @private\n * @param {string} route Route string\n */\nexport function isValidRoute(route) {\n    return (typeof route === 'string' && REG_PATHNAME.test(route));\n}\n\n/**\n * Checks if the URL is a hash URL\n * @private\n * @param {string} URL URL string\n */\nexport function isHashURL(URL) {\n    return typeof URL === 'string' && URL.charAt(0) === '#';\n}\n\n/**\n * Checks if input value is a function\n * @param {function} fn Input function\n */\nexport function isFunc(fn) {\n    return typeof fn === 'function';\n}\n\n/**\n * Returns an empty PopStateEvent object\n * @param {string} type Type of event\n * @param {*} data Any type of data\n */\nexport function getPopStateEvent(type, data) {\n    return {\n        type,\n        state: { data }\n    };\n}\n\n/**\n * Safely returns object keys\n * @param {object} obj Object\n */\nexport function keys(obj) {\n    return obj ? Object.keys(obj) : [];\n}","export const loc = window.location;\n","import { REG_ROUTE_PARAMS } from './constants';\nimport { toArray, def } from './utils';\nimport { loc } from './vars';\n\n/**\n * Parses current path and returns params object\n * @private\n * @param {string} expr Route expression\n * @param {string} path URL path\n * @returns {object}\n */\nexport function extractParams(expr, path) {\n    path = def(path, loc.pathname);\n    const params = {};\n    if (REG_ROUTE_PARAMS.test(expr)) {\n        const pathRegex = new RegExp(expr.replace(/\\//g, \"\\\\/\").replace(/:[^\\/\\\\]+/g, \"([^\\\\/]+)\"));\n        REG_ROUTE_PARAMS.lastIndex = 0;\n        if (pathRegex.test(path)) {\n            const keys = toArray(expr.match(REG_ROUTE_PARAMS)).map(key => key.replace(':', ''));\n            const values = toArray(path.match(pathRegex));\n            values.shift();\n            keys.forEach((key, index) => {\n                params[key] = values[index];\n            });\n        }\n    }\n    return params;\n}","import { isArr, keys, isObject } from './utils';\n\n/**\n * Builds query string recursively\n * @private\n * @param {string[]} qsList List of query string key value pairs\n * @param {*} key Key\n * @param {*} obj Value\n */\nfunction buildQuery(qsList, key, obj) {\n    if (isObject(obj)) {\n        keys(obj).forEach(obKey => {\n            buildQuery(qsList, `${key}[${isArr(obj) ? '' : obKey}]`, obj[obKey]);\n        });\n    } else if (typeof obj !== 'function') {\n        qsList.push(`${encodeURIComponent(key)}=${encodeURIComponent(obj)}`);\n    }\n}\n\n/**\n * Converts an object to a query string\n * @private\n * @param {object} obj Object which should be converted to a string\n * @returns {string}\n */\nexport function toQueryString(obj) {\n    let qsList = [];\n    if (isObject(obj)) {\n        keys(obj).forEach(key => {\n            buildQuery(qsList, key, obj[key]);\n        });\n        return qsList.join('&');\n    }\n    return typeof obj === 'string' ? obj : '';\n}","import { loc } from './vars';\nimport { isArr, trim, isNumber, isPureObject, def } from './utils';\n\n/**\n * Checks if query parameter key is a complex notation\n * @param {string} q \n */\nfunction ifComplex(q) {\n    return (/\\[/.test(q));\n}\n\n/**\n * Converts query string to JavaScript object\n * @param {string} qs query string argument (defaults to url query string)\n */\nfunction deparam(qs, coerce) {\n    qs = trim(def(qs, loc.search));\n    if (qs.charAt(0) === '?') {\n        qs = qs.replace('?', '');\n    }\n    const queryObject = {};\n    if (qs) {\n        qs.split('&').forEach((qq) => {\n            const qArr = qq.split('=').map(part => decodeURIComponent(part));\n            (ifComplex(qArr[0]) ? complex : simple).apply(this, [].concat(qArr, [queryObject, def(coerce, false), false]));\n        });\n    }\n    return queryObject;\n}\n\n/**\n * Converts an array to an object\n * @param {array} arr \n */\nfunction toObject(arr) {\n    var convertedObj = {};\n    if (isArr(arr)) {\n        arr.forEach((value, index) => {\n            convertedObj[index] = value;\n        });\n    }\n    return convertedObj;\n}\n\n/**\n * Resolves an array to object if required\n * @param {array} ob An array object\n * @param {boolean} isNumber flag to test if next key is number\n */\nfunction resolve(ob, isNextNumber) {\n    return isNextNumber ? (typeof ob === 'undefined' ? [] : ob) : toObject(ob);\n}\n\n/**\n * Resolves the target object for next iteration\n * @param {Object} ob current reference object\n * @param {string} nextProp reference property in current object\n */\nfunction resolveObj(ob, nextProp) {\n    if (isPureObject(ob)) return { ob };\n    if (isArr(ob) || typeof ob === 'undefined') return { ob: resolve(ob, isNumber(nextProp)) };\n    return { ob: [ob], push: ob !== null };\n}\n\n/**\n * Handles complex query parameters\n * @param {string} key \n * @param {string} value \n * @param {Object} obj \n */\nfunction complex(key, value, obj, coercion) {\n    coercion = def(coercion, true);\n    const match = key.match(/([^\\[]+)\\[([^\\[]*)\\]/) || [];\n    if (match.length === 3) {\n        const prop = match[1];\n        let nextProp = match[2];\n        key = key.replace(/\\[([^\\[]*)\\]/, '');\n        if (ifComplex(key)) {\n            if (nextProp === '') nextProp = '0';\n            key = key.replace(/[^\\[]+/, nextProp);\n            complex(key, value, (obj[prop] = resolveObj(obj[prop], nextProp).ob), coercion);\n        } else if (nextProp) {\n            const resolved = resolveObj(obj[prop], nextProp);\n            obj[prop] = resolved.ob;\n            const coercedValue = coercion ? coerce(value) : value;\n            if (resolved.push) {\n                const tempObj = {};\n                tempObj[nextProp] = coercedValue;\n                obj[prop].push(tempObj);\n            } else {\n                obj[prop][nextProp] = coercedValue;\n            }\n        } else {\n            simple(prop, value, obj, coercion, true);\n        }\n    }\n}\n\n/**\n * Handles simple query\n * @param {array} qArr \n * @param {Object} queryObject \n * @param {boolean} toArray \n */\nfunction simple(key, value, queryObject, coercion, toArray) {\n    if (def(coercion, true)) {\n        value = coerce(value);\n    }\n    if (key in queryObject) {\n        queryObject[key] = isArr(queryObject[key]) ? queryObject[key] : [queryObject[key]];\n        queryObject[key].push(value);\n    } else {\n        queryObject[key] = toArray ? [value] : value;\n    }\n}\n\n/**\n * Restores values to their original type\n * @param {string} value undefined or string value\n */\nfunction coerce(value) {\n    if (value == null) return '';\n    if (typeof value !== 'string') return value;\n    if (isNumber(value = trim(value))) return +value;\n    switch (value) {\n        case 'null': return null;\n        case 'undefined': return undefined;\n        case 'true': return true;\n        case 'false': return false;\n        case 'NaN': return NaN;\n        default: return value;\n    }\n}\n\n// Library encapsulation\nfunction lib() {\n    return deparam.apply(this, arguments);\n}\n\nexport { lib as deparam };","import { keys, isObject } from './utils';\n\n/**\n * Inner loop function for assign\n * @private\n * @param {object} ref Argument object\n * @param {object} target First object\n */\nfunction loopFunc(ref, target) {\n    if (isObject(ref)) {\n        keys(ref).forEach(function (key) {\n            target[key] = ref[key];\n        });\n    }\n}\n\n/**\n * Polyfill for Object.assign only smaller and with less features\n * @private\n * @returns {object}\n */\nexport function assign() {\n    const target = isObject(arguments[0]) ? arguments[0] : {};\n    for (let i = 1; i < arguments.length; i++) {\n        loopFunc(arguments[i], target);\n    }\n    return target;\n}","import ArgonStorage from 'argon-storage';\n\nexport const store = new ArgonStorage({\n    compress: true\n});","import { assign } from './assign';\nimport { isPureObject, keys } from './utils';\nimport { store } from '../store';\n\nfunction Libs() {\n    this.handlers = [];\n}\nassign(Libs.prototype, {\n    getDataFromStore(path, isHash) {\n        const paths = assign(store.get('routeStore'));\n        return paths[`${isHash ? '#' : ''}${path}`];\n    },\n    setDataToStore(path, isHash, data) {\n        let paths = assign(store.get('routeStore'));\n        if (paths[path]) {\n            if (\n                !data\n                || (\n                    isPureObject(data)\n                    && keys(data).length === 0\n                )\n            ) { return false; }\n        }\n        const newPath = {};\n        newPath[`${isHash ? '#' : ''}${path}`] = data;\n        paths = assign({}, paths, newPath);\n        return store.set('routeStore', paths, true);\n    },\n    contains(fn) {\n        return !!this.handlers.filter(fn).length;\n    },\n    remove(item) {\n        this.handlers.splice(this.handlers.indexOf(item), 1).length;\n    }\n});\n\nexport const libs = new Libs();","import { loc } from '../../utils/vars';\nimport { trim } from '../../utils/utils';\n\n/**\n * Adds a query string\n * @private\n * @param {string} route Route string\n * @param {string} qString Query string\n * @param {boolean} appendQString Append query string flag\n */\nexport default function resolveQuery(route, isHash, queryString, append) {\n    queryString = trim(queryString.substring(+(queryString.charAt(0) === '?')));\n    const search = (append || '') && loc.search;\n    if (!isHash) {\n        return `${route}${search}${queryString ? `${search ? '&' : '?'}${queryString}` : ''}`;\n    }\n    return `${loc.pathname}${search}#${route}${queryString ? `?${queryString}` : ''}`;\n}","import { deparam } from '../../utils/deparam';\nimport { loc } from '../../utils/vars';\nimport { assign } from '../../utils/assign';\nimport { REG_HASH_QUERY } from '../../utils/constants';\n\n/**\n * Converts current query string into an object\n * @private\n */\nexport default function getQueryParams() {\n    const hashQuery = loc.hash.match(REG_HASH_QUERY);\n    return assign({}, deparam(), (\n        hashQuery\n            ? assign({}, deparam(hashQuery[0]))\n            : {}\n    ));\n}","import { libs } from '../../utils/libs';\nimport { extractParams } from '../../utils/params';\nimport { isValidRoute, isHashURL, keys } from '../../utils/utils';\nimport { assign } from '../../utils/assign';\n\n/**\n * Compares route with current URL\n * @private\n * @param {string} route Route string\n * @param {string} url Current url\n * @param {object} params Parameters\n */\nexport default function testRoute(route, url, originalData) {\n    const isHash = isHashURL(url);\n    url = url.substring(+isHash);\n    const path = url.split('?')[0];\n    originalData = assign(originalData);\n    if (keys(originalData).length) {\n        libs.setDataToStore(path, isHash, originalData);\n    }\n    const params = extractParams(route, url);\n    return {\n        hasMatch: keys(params).length > 0 || (\n            isValidRoute(url) && ((route === url) || (route === '*'))\n        ),\n        data: libs.getDataFromStore(path, isHash),\n        params\n    };\n}","import { loc } from '../../utils/vars';\nimport { libs } from '../../utils/libs';\nimport getQueryParams from '../getQueryParams';\nimport testRoute from '../testRoute';\nimport { assign } from '../../utils/assign';\n\n/**\n * Triggers a router event\n * @private\n * @param {string} eventName Name of route event\n * @param {object} params Parameters\n */\nexport default function execListeners(eventName, rc, originalData) {\n    originalData = assign(originalData);\n    libs.handlers.forEach(ob => {\n        if (ob.eventName === eventName) {\n            const currentPath = loc[rc.hash ? 'hash' : 'pathname'];\n            const tr = testRoute(\n                (ob.isCaseInsensitive ? ob.route.toLowerCase() : ob.route),\n                (ob.isCaseInsensitive ? currentPath.toLowerCase() : currentPath),\n                originalData\n            );\n            if (tr.hasMatch && (!ob.hash || (ob.hash && rc.hash))) {\n                ob.handler(assign({}, rc, {\n                    data: tr.data,\n                    params: tr.params,\n                    query: getQueryParams()\n                }));\n            }\n        }\n    });\n}","import { ROUTE_CHANGED, HASH_CHANGE, POP_STATE } from '../../utils/constants';\nimport trigger from '../trigger';\nimport { def, getPopStateEvent } from '../../utils/utils';\n\n/**\n * Triggers \"route.changed\" event\n * @private\n * @param {object} config Route event configuration\n * @param {object} config.originalEvent Original \"popstate\" event object\n * @param {string} config.route route string\n * @param {string} config.type Type of event\n * @param {boolean} config.hash Flag that determines type of event expected\n * @param {object} config.originalData Original data persisted by history API\n */\nexport default function triggerRoute(ob) {\n    ob.type = ob.hash ? HASH_CHANGE : POP_STATE;\n    const originalData = def(ob.originalData, {});\n    ob.originalEvent = def(ob.originalEvent, getPopStateEvent(ob.type, originalData));\n    delete ob.originalData;\n    trigger(\n        ROUTE_CHANGED,\n        ob,\n        originalData\n    );\n}","import { assign } from '../../utils/assign';\nimport { trim, isValidRoute, isHashURL } from '../../utils/utils';\nimport { toQueryString } from '../../utils/query';\nimport { libs } from '../../utils/libs';\nimport resolveQuery from '../resolveQuery';\nimport triggerRoute from '../triggerRoute';\nimport { INVALID_ROUTE } from '../../utils/constants';\n\n/**\n * Set route for given view\n * @private\n * @param {string|object} oRoute Route string or object\n * @param {boolean} replaceMode Replace mode\n * @param {boolean} noTrigger Do not trigger handler\n */\nexport default function execRoute(route, replaceMode, noTrigger) {\n    let ro = assign(\n        { replaceMode, noTrigger },\n        (\n            typeof route === 'string'\n                ? { route }\n                : route\n        )\n    );\n    if (typeof ro.route === 'string') {\n        const hash = isHashURL(ro.route);\n        const routeParts = trim(ro.route).split('?');\n        const pureRoute = routeParts[0].substring(+hash);\n        const queryString = toQueryString(trim(routeParts[1]) || trim(ro.queryString));\n        if (isValidRoute(pureRoute)) {\n            libs.setDataToStore(pureRoute, hash, ro.data);\n            const completeRoute = resolveQuery(pureRoute, hash, queryString, ro.appendQuery);\n            history[ro.replaceMode ? 'replaceState' : 'pushState']({ data: ro.data }, ro.title, completeRoute);\n            if (!ro.noTrigger) {\n                triggerRoute({\n                    route: `${hash ? '#' : ''}${pureRoute}`,\n                    hash\n                });\n            }\n        } else {\n            throw new TypeError(INVALID_ROUTE);\n        }\n    }\n}\n","import { isArr, trim, isHashURL, isFunc, getPopStateEvent } from '../../utils/utils';\nimport { CASE_INSENSITIVE_FLAG, ROUTE_CHANGED, POP_STATE, HASH_CHANGE } from '../../utils/constants';\nimport { libs } from '../../utils/libs';\nimport { loc } from '../../utils/vars';\nimport testRoute from '../testRoute';\nimport getQueryParams from '../getQueryParams';\n\n/**\n * Binds generic route if route is passed as a list of URLs\n * @private\n * @param {string[]} route Array of routes\n * @param {*} handler Handler function\n */\nfunction bindGenericRoute(route, handler) {\n    if (!libs.contains(ob => (ob.prevHandler === handler))) {\n        bindRoute((e) => {\n            if (isFunc(handler) && route.indexOf(`${e.hash ? '#' : ''}${e.route.substring(+e.hash)}`) > -1) {\n                handler.apply(this, [e]);\n            }\n        }, handler);\n    }\n}\n\n/**\n * Attaches a route handler function\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport default function bindRoute(route, handler, prevHandler) {\n    // Resolve generic route\n    let caseIgnored = typeof route === 'string' && route.indexOf(CASE_INSENSITIVE_FLAG) === 0;\n    if (isFunc(route)) {\n        prevHandler = handler;\n        handler = route;\n        route = '*';\n    }\n    if (isArr(route)) {\n        return bindGenericRoute(route, handler);\n    }\n    route = route.substring(caseIgnored ? CASE_INSENSITIVE_FLAG.length : 0);\n    const containsHash = isHashURL(route);\n    route = route.substring(+containsHash);\n    // Attach handler\n    if (\n        !libs.contains(ob => (ob.handler === handler && ob.route === route))\n        && isFunc(handler)\n    ) {\n        libs.handlers.push({\n            eventName: ROUTE_CHANGED,\n            handler,\n            prevHandler,\n            route,\n            hash: containsHash,\n            caseIgnored,\n            isCaseInsensitive: caseIgnored\n        });\n    }\n    // Execute handler if matches current route (Replaces init method in version 2.0)\n    const paths = containsHash ? [loc.hash] : [loc.pathname, loc.hash];\n    paths.filter(path => trim(path)).forEach(currentPath => {\n        const containsHash = isHashURL(currentPath);\n        const tr = testRoute(\n            (caseIgnored ? route.toLowerCase() : route),\n            (caseIgnored ? currentPath.toLowerCase() : currentPath)\n        );\n        if (tr.hasMatch && isFunc(handler)) {\n            const eventName = containsHash ? HASH_CHANGE : POP_STATE;\n            handler({\n                originalEvent: getPopStateEvent(eventName, tr.data),\n                route: currentPath,\n                hash: containsHash,\n                eventName,\n                data: tr.data,\n                params: tr.params,\n                query: getQueryParams(),\n                caseIgnored,\n                isCaseInsensitive: caseIgnored\n            });\n        }\n    });\n}\n","import { libs } from '../../utils/libs';\nimport { isArr, isFunc, toArray } from '../../utils/utils';\n\n/**\n * Unbinds route handlers\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport default function unbindRoute(route, handler) {\n    const prevLength = libs.handlers.length;\n    let isRouteList = isArr(route);\n    const args = toArray(arguments);\n    if (args.length === 0) {\n        libs.handlers.length = 0;\n        return prevLength;\n    }\n    route = isRouteList ? '*' : route;\n    libs.handlers.forEach(ob => {\n        let test = ob.route === route;\n        const singleArg = args.length === 1;\n        if (!(singleArg && typeof route === 'string' && !isRouteList)) {\n            if (singleArg && isFunc(route)) {\n                handler = route;\n                route = '*';\n            }\n            test = test && (\n                ob.handler === handler\n                || ob.prevHandler === handler\n            );\n        }\n        if (test) {\n            libs.remove(ob);\n        }\n    });\n    return (prevLength - libs.handlers.length);\n}","import triggerRoute from '../triggerRoute';\nimport { POP_STATE } from '../../utils/constants';\nimport { loc } from '../../utils/vars';\nimport { assign } from '../../utils/assign';\n\n/**\n * Initializes router events\n * @private\n */\nexport default function initRouterEvents() {\n    window.addEventListener(`${POP_STATE}`, function (e) {\n        const paths = (`${loc.pathname}${loc.hash}`).split('#');\n        const defaultConfig = {\n            originalEvent: e,\n            originalData: assign(e.state && e.state.data)\n        };\n        triggerRoute(assign({}, defaultConfig, {\n            route: paths[0],\n            hash: false\n        }));\n        if (paths[1]) {\n            triggerRoute(assign({}, defaultConfig, {\n                route: `#${paths[1]}`,\n                hash: true\n            }));\n        }\n    });\n}","import { extractParams } from './utils/params';\nimport { CASE_INSENSITIVE_FLAG } from './utils/constants';\nimport { toQueryString } from './utils/query';\nimport { deparam } from './utils/deparam';\nimport execRoute from './api/execRoute';\nimport bindRoute from './api/bindRoute';\nimport unbindRoute from './api/unbindRoute';\nimport initRouterEvents from './api/initRouterEvents';\nimport { toArray } from './utils/utils';\n\n/**\n * @namespace router\n * @public\n * @type {object}\n */\nconst router = {\n    /**\n     * Sets a route url\n     * @public\n     * @param {string|object} route Route object or URL\n     * @param {boolean} replaceMode Flag to enable replace mode\n     * @param {boolean} noTrigger Flag to disable handler while changing route\n     */\n    set() {\n        return execRoute.apply(this, arguments);\n    }\n}\n\n/**\n * Attaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction route() {\n    return bindRoute.apply(this, arguments);\n}\n\n/**\n * Attaches case insensitive route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction routeIgnoreCase(firstArg) {\n    if (typeof firstArg === 'string') {\n        route.apply(this, [`${CASE_INSENSITIVE_FLAG}${firstArg}`, toArray(arguments).slice(1)]);\n    }\n}\n\n/**\n * Detaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction unroute() {\n    return unbindRoute.apply(this, arguments);\n}\n\ninitRouterEvents();\n\nexport {\n    router,\n    route,\n    routeIgnoreCase,\n    unroute,\n    deparam,\n    toQueryString as param,\n    extractParams as routeParams\n};"],"names":["HASH_CHANGE","POP_STATE","ROUTE_CHANGED","REG_ROUTE_PARAMS","REG_PATHNAME","REG_HASH_QUERY","INVALID_ROUTE","CASE_INSENSITIVE_FLAG","isArr","Array","isArray","trim","str","isNumber","key","indexOf","isNaN","isObject","value","isPureObject","def","defaultValue","toArray","arr","prototype","slice","call","isValidRoute","route","test","isHashURL","URL","charAt","isFunc","fn","getPopStateEvent","type","data","state","keys","obj","Object","loc","window","location","extractParams","expr","path","pathname","params","pathRegex","RegExp","replace","lastIndex","match","map","values","shift","forEach","index","buildQuery","qsList","obKey","push","encodeURIComponent","toQueryString","join","ifComplex","q","deparam","qs","coerce","search","queryObject","split","qq","qArr","part","decodeURIComponent","complex","simple","apply","concat","toObject","convertedObj","resolve","ob","isNextNumber","resolveObj","nextProp","coercion","length","prop","resolved","coercedValue","tempObj","undefined","NaN","lib","arguments","loopFunc","ref","target","assign","i","store","ArgonStorage","compress","Libs","handlers","getDataFromStore","isHash","paths","get","setDataToStore","newPath","set","contains","filter","remove","item","splice","libs","resolveQuery","queryString","append","substring","getQueryParams","hashQuery","hash","testRoute","url","originalData","hasMatch","execListeners","eventName","rc","currentPath","tr","isCaseInsensitive","toLowerCase","handler","query","triggerRoute","originalEvent","trigger","execRoute","replaceMode","noTrigger","ro","routeParts","pureRoute","completeRoute","appendQuery","history","title","TypeError","bindGenericRoute","prevHandler","bindRoute","e","caseIgnored","containsHash","unbindRoute","prevLength","isRouteList","args","singleArg","initRouterEvents","addEventListener","defaultConfig","router","routeIgnoreCase","firstArg","unroute"],"mappings":"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"}