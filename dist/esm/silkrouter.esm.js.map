{"version":3,"file":"silkrouter.esm.js","sources":["../../src/js/utils/constants.js","../../src/js/utils/getGlobal.js","../../src/js/utils/utils.js","../../src/js/utils/polyfills.js","../../src/js/utils/assign.js","../../src/js/utils/triggerEvent.js","../../src/js/api/routerEvent/index.js","../../src/js/api/collate/index.js","../../src/js/api/bindRouterEvents/index.js","../../src/js/utils/query.js","../../node_modules/is-number/index.js","../../src/js/utils/deparam.js","../../src/js/api/resolveQuery/index.js","../../src/js/api/set/index.js","../../src/js/api/callOnce/index.js","../../src/js/api/router/index.js","../../src/js/utils/params.js","../../src/js/operators/index.js"],"sourcesContent":["/**\n * Router constants\n */\nexport const POP_STATE = 'popstate';\nexport const REG_ROUTE_PARAMS = /:[^/]+/g;\nexport const REG_PATHNAME = /^\\/(?=[^?]*)/;\nexport const REG_COMPLEX = /\\[/;\nexport const REG_VARIABLE = /([^[]+)\\[([^[]*)\\]/;\nexport const REG_REPLACE_BRACKETS = /\\[([^[]*)\\]/;\nexport const REG_REPLACE_NEXTPROP = /[^[]+/;\nexport const HISTORY_UNSUPPORTED =\n  'Current browser does not support history object';\nexport const INVALID_ROUTE = 'Route string is not a pure route';\nexport const VIRTUAL_PUSHSTATE = 'vpushstate';\nexport const CACHED_FIELDS = [\n  'route',\n  'hashRouting',\n  'path',\n  'hash',\n  'search',\n  'hashSearch',\n  'data',\n];\nexport const AMP = '&';\nexport const QRY = '?';\nexport const EQ = '=';\nexport const EMPTY = '';\nexport const UNDEF = void 0;\nexport const TYPEOF_STR = typeof EMPTY;\nexport const TYPEOF_BOOL = typeof true;\nexport const TYPEOF_UNDEF = typeof UNDEF;\nexport const TYPEOF_OBJ = typeof {};\nexport const TYPEOF_NUM = typeof 0;\nexport const TYPEOF_FUNC = typeof (() => {});\nexport const STATE = 'State';\nexport const PUSH = `push${STATE}`;\nexport const REPLACE = `replace${STATE}`;\n","import { TYPEOF_UNDEF } from './constants';\n\nexport function getGlobal() {\n  return typeof globalThis !== TYPEOF_UNDEF ? globalThis : global || self;\n}\n","import {\n  EMPTY,\n  REG_PATHNAME,\n  TYPEOF_BOOL,\n  TYPEOF_FUNC,\n  TYPEOF_OBJ,\n  TYPEOF_STR,\n} from './constants';\n\n/**\n * Shorthand for Array.isArray\n */\nexport const isArr = Array.isArray;\n\n/**\n * Safely trims string\n * @param {string} str String\n */\nexport function trim(str) {\n  return typeof str === TYPEOF_STR ? str.trim() : EMPTY;\n}\n\n/**\n * Checks if value is an object\n * @param {*} value Any type of value\n */\nexport function isObject(value) {\n  return value && typeof value === TYPEOF_OBJ;\n}\n\n/**\n * Checks if key is a true object\n * @param {*} value Any type of value\n */\nexport function isPureObject(value) {\n  return isObject(value) && !isArr(value);\n}\n\n/**\n * Checks if given route is valid\n * @private\n * @param {string} route Route string\n */\nexport function isValidRoute(route) {\n  return typeof route === TYPEOF_STR && REG_PATHNAME.test(route);\n}\n\n/**\n * Checks if key is present in provided object\n * @param {object} ob Object\n * @param {*} key Key\n */\nexport function hasOwn(ob, key) {\n  return Object.prototype.hasOwnProperty.call(ob, key);\n}\n\n/**\n * Loops over an array like object\n * @param {object} arrayObj Array or array like object\n * @param {function} callback Callback function\n */\nexport function each(arrayObj, callback) {\n  if (arrayObj && arrayObj.length) {\n    for (let index = 0; index < arrayObj.length; index += 1) {\n      if (typeof callback === TYPEOF_FUNC) {\n        const continueTheLoop = callback.apply(arrayObj, [\n          arrayObj[index],\n          index,\n        ]);\n        if (typeof continueTheLoop === TYPEOF_BOOL) {\n          if (continueTheLoop) {\n            continue;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n","import { TYPEOF_UNDEF, UNDEF } from './constants';\nimport { getGlobal } from './getGlobal';\nimport { isArr } from './utils';\n\n// Polyfill custom event\nconst g = getGlobal();\nif (typeof g.CustomEvent === TYPEOF_UNDEF) {\n  const CustomEvent = function (event, params) {\n    params = params || { bubbles: false, cancelable: false, detail: UNDEF };\n    const evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(\n      event,\n      params.bubbles,\n      params.cancelable,\n      params.detail\n    );\n    return evt;\n  };\n\n  CustomEvent.prototype = g.Event.prototype;\n  g.CustomEvent = CustomEvent;\n}\n\n// Polyfill Array.from\n\nif (!Array.from) {\n  Array.from = function (arrayLike) {\n    if (isArr(arrayLike)) {\n      return arrayLike;\n    }\n    const arr = [];\n    for (let i = 0; i < arrayLike.length; i++) {\n      arr.push(arrayLike[i]);\n    }\n    return arr;\n  };\n}\n","import { isObject } from './utils';\n\n/**\n * Inner loop function for assign\n * @private\n * @param {object} ref Argument object\n * @param {object} target First object\n */\nfunction loopFunc(ref, target) {\n  if (isObject(ref)) {\n    Object.keys(ref).forEach(function (key) {\n      target[key] = ref[key];\n    });\n  }\n}\n\n/**\n * Polyfill for Object.assign only smaller and with less features\n * @private\n * @returns {object}\n */\nexport function assign(...args) {\n  const target = isObject(args[0]) ? args[0] : {};\n  for (let i = 1; i < args.length; i++) {\n    loopFunc(args[i], target);\n  }\n  return target;\n}\n","import { TYPEOF_STR } from './constants';\nimport { getGlobal } from './getGlobal';\nimport { each } from './utils';\n\nconst g = getGlobal();\n\n// Internal function\nfunction isValidTarget(target) {\n  return (\n    target instanceof NodeList ||\n    target instanceof HTMLCollection ||\n    Array.isArray(target)\n  );\n}\n\n/**\n * Function to trigger custom event\n * @param {Node|NodeList|HTMLCollection|Node[]} target Target element or list\n * @param {string} eventType Event type\n * @param {any[]} data Data to be passed to handler\n */\nexport function trigger(target, eventType, data) {\n  if (target instanceof Node) {\n    target = [target];\n  }\n  if (isValidTarget(target) && typeof eventType === TYPEOF_STR) {\n    each(target, (el) => {\n      const customEvent = new g.CustomEvent(eventType, {\n        bubbles: true,\n        cancelable: true,\n        detail: data || [],\n      });\n      el.dispatchEvent(customEvent);\n    });\n  }\n}\n","import { QRY } from '../../utils/constants';\nimport { trim } from '../../utils/utils';\nexport default class RouterEvent {\n  constructor(routeInfo, currentEvent) {\n    // Set relevant parameters\n    const routeObject = routeInfo[0];\n    const originalEvent = routeInfo[1];\n    const routerInstance = routeInfo[2];\n    const { location, history } = routerInstance.config;\n    this.route = routeObject.path;\n    this.hashRouting = routeObject.hash;\n    this.routerInstance = routerInstance;\n    this.virtualEvent = currentEvent || {};\n    this.originalEvent = originalEvent || {};\n    this.path = trim(location.pathname);\n    this.hash = location.hash;\n    this.search = trim(location.search.substring(1));\n    this.hashSearch = trim(location.hash && location.hash.split(QRY)[1]);\n    const { state } = this.originalEvent;\n    this.data = (state && state.data) || (history.state && history.state.data);\n  }\n}\n","import { Observable } from 'rxjs';\nimport RouterEvent from '../routerEvent';\n\nexport default function collate() {\n  return (observable) =>\n    new Observable((subscriber) => {\n      const subn = observable.subscribe({\n        next: (event) => {\n          const routerInstance = event.detail[2];\n          if (routerInstance === this) {\n            subscriber.next(new RouterEvent(event.detail, event));\n          }\n        },\n        error: subscriber.error,\n        complete: subscriber.complete,\n      });\n      return () => {\n        subn.unsubscribe();\n      };\n    });\n}\n","import { fromEvent } from 'rxjs';\nimport { POP_STATE, QRY, VIRTUAL_PUSHSTATE } from '../../utils/constants';\nimport { trigger } from '../../utils/triggerEvent';\nimport collate from '../collate';\nimport { trim } from '../../utils/utils';\nimport { getGlobal } from '../../utils/getGlobal';\n\nexport default function bindRouterEvents() {\n  const { context, location, hashRouting } = this.config;\n  this.popStateSubscription = fromEvent(getGlobal(), POP_STATE).subscribe(\n    (e) => {\n      const path = trim(\n        hashRouting\n          ? location.hash.substring(1).split(QRY)[0]\n          : location.pathname\n      );\n      if (path) {\n        trigger(context, VIRTUAL_PUSHSTATE, [\n          { path, hash: hashRouting },\n          e,\n          this,\n        ]);\n      }\n    }\n  );\n  this.listeners = fromEvent(context, VIRTUAL_PUSHSTATE).pipe(\n    collate.apply(this)\n  );\n  if (hashRouting && !location.hash) {\n    this.set('/', true, false); // Replace current hash path without executing anythings\n  }\n}\n","import { AMP, EMPTY, TYPEOF_FUNC, TYPEOF_STR } from './constants';\nimport { isArr, isObject } from './utils';\n\n/**\n * Builds query string recursively\n * @private\n * @param {string[]} qsList List of query string key value pairs\n * @param {*} key Key\n * @param {*} obj Value\n */\nfunction buildQuery(qsList, key, obj) {\n  if (isObject(obj)) {\n    Object.keys(obj).forEach((obKey) => {\n      buildQuery(qsList, `${key}[${isArr(obj) ? EMPTY : obKey}]`, obj[obKey]);\n    });\n  } else if (typeof obj !== TYPEOF_FUNC) {\n    qsList.push(`${encodeURIComponent(key)}=${encodeURIComponent(obj)}`);\n  }\n}\n\n/**\n * Converts an object to a query string\n * @private\n * @param {object} obj Object which should be converted to a string\n * @returns {string}\n */\nexport function toQueryString(obj) {\n  let qsList = [];\n  if (isObject(obj)) {\n    Object.keys(obj).forEach((key) => {\n      buildQuery(qsList, key, obj[key]);\n    });\n    return qsList.join(AMP);\n  }\n  return typeof obj === TYPEOF_STR ? obj : EMPTY;\n}\n","/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n","import isNumber from 'is-number';\nimport { isArr, trim, isPureObject } from './utils';\nimport {\n  REG_COMPLEX,\n  REG_VARIABLE,\n  REG_REPLACE_BRACKETS,\n  REG_REPLACE_NEXTPROP,\n  TYPEOF_UNDEF,\n  UNDEF,\n  TYPEOF_STR,\n  EMPTY,\n  AMP,\n  QRY,\n  EQ,\n} from './constants';\n\n/**\n * Checks if query parameter key is a complex notation\n * @param {string} q\n */\nfunction ifComplex(q) {\n  return REG_COMPLEX.test(q);\n}\n\n/**\n * Converts query string to JavaScript object\n * @param {string} qs query string argument (defaults to url query string)\n */\nfunction lib(qs, coerce) {\n  qs = trim(qs);\n  if (qs.charAt(0) === QRY) {\n    qs = qs.replace(QRY, EMPTY);\n  }\n  const queryObject = Object.create(null);\n  if (qs) {\n    qs.split(AMP).forEach((qq) => {\n      const qArr = qq.split(EQ).map((part) => decodeURIComponent(part));\n      (ifComplex(qArr[0]) ? complex : simple).apply(\n        this,\n        qArr.concat([queryObject, coerce, false])\n      );\n    });\n  }\n  return queryObject;\n}\n\n/**\n * Converts an array to an object\n * @param {array} arr\n */\nfunction toObject(arr) {\n  var convertedObj = Object.create(null);\n  if (isArr(arr)) {\n    arr.forEach((value, index) => {\n      convertedObj[index] = value;\n    });\n  }\n  return convertedObj;\n}\n\n/**\n * Resolves an array to object if required\n * @param {array} ob An array object\n * @param {boolean} isNumber flag to test if next key is number\n */\nfunction resolve(ob, isNextNumber) {\n  return isNextNumber ? (typeof ob === TYPEOF_UNDEF ? [] : ob) : toObject(ob);\n}\n\n/**\n * Resolves the target object for next iteration\n * @param {Object} ob current reference object\n * @param {string} nextProp reference property in current object\n */\nfunction resolveObj(ob, nextProp) {\n  if (isPureObject(ob)) return { ob };\n  if (isArr(ob) || typeof ob === TYPEOF_UNDEF)\n    return { ob: resolve(ob, isNumber(nextProp)) };\n  return { ob: [ob], push: ob !== null };\n}\n\n/**\n * Handles complex query parameters\n * @param {string} key\n * @param {string} value\n * @param {Object} obj\n */\nfunction complex(key, value, obj, coercion) {\n  const match = key.match(REG_VARIABLE) || [];\n  if (match.length === 3) {\n    const prop = match[1];\n    let nextProp = match[2];\n    key = key.replace(REG_REPLACE_BRACKETS, EMPTY);\n    if (ifComplex(key)) {\n      if (nextProp === EMPTY) nextProp = '0';\n      key = key.replace(REG_REPLACE_NEXTPROP, nextProp);\n      complex(\n        key,\n        value,\n        (obj[prop] = resolveObj(obj[prop], nextProp).ob),\n        coercion\n      );\n    } else if (nextProp) {\n      const resolved = resolveObj(obj[prop], nextProp);\n      obj[prop] = resolved.ob;\n      const coercedValue = coercion ? coerce(value) : value;\n      if (resolved.push) {\n        obj[prop].push({\n          [nextProp]: coercedValue,\n        });\n      } else {\n        obj[prop][nextProp] = coercedValue;\n      }\n    } else {\n      simple(prop, value, obj, coercion, true);\n    }\n  }\n}\n\n/**\n * Handles simple query\n * @param {array} qArr\n * @param {Object} queryObject\n * @param {boolean} toArray\n */\nfunction simple(key, value, queryObject, coercion, toArray) {\n  if (coercion) {\n    value = coerce(value);\n  }\n  if (key in queryObject) {\n    queryObject[key] = isArr(queryObject[key])\n      ? queryObject[key]\n      : [queryObject[key]];\n    queryObject[key].push(value);\n  } else {\n    queryObject[key] = toArray ? [value] : value;\n  }\n}\n\n/**\n * Restores values to their original type\n * @param {string} value undefined or string value\n */\nfunction coerce(value) {\n  if (value == null) return EMPTY;\n  if (typeof value !== TYPEOF_STR) return value;\n  if (isNumber((value = trim(value)))) return +value;\n  switch (value) {\n    case 'null':\n      return null;\n    case TYPEOF_UNDEF:\n      return UNDEF;\n    case 'true':\n      return true;\n    case 'false':\n      return false;\n    case 'NaN':\n      return NaN;\n    default:\n      return value;\n  }\n}\n\nexport { lib as deparam };\n","import { trim } from '../../utils/utils';\nimport { toQueryString } from '../../utils/query';\nimport { assign } from '../../utils/assign';\nimport { deparam } from '../../utils/deparam';\nimport { QRY } from '../../utils/constants';\n\n/**\n * Resolves and analyzes existing query string\n * @private\n * @param {string} queryString Query string\n * @param {string} hashRouting Flag to test if hash routing is enabled\n */\nexport default function resolveQuery(queryString, hashRouting) {\n  const { location } = this.config;\n  const search = trim(location.search && location.search.substring(1));\n  const existingQuery = hashRouting\n    ? trim(location.hash.split(QRY)[1])\n    : trim(search);\n  if (!existingQuery) return queryString;\n  return toQueryString(\n    assign(deparam(search), deparam(existingQuery), deparam(queryString))\n  );\n}\n","import { trigger } from '../../utils/triggerEvent';\nimport {\n  VIRTUAL_PUSHSTATE,\n  INVALID_ROUTE,\n  UNDEF,\n  TYPEOF_STR,\n  EMPTY,\n  QRY,\n  REPLACE,\n  PUSH,\n} from '../../utils/constants';\nimport { isValidRoute, trim, isObject } from '../../utils/utils';\nimport { toQueryString } from '../../utils/query';\nimport resolveQuery from '../resolveQuery';\nimport { assign } from '../../utils/assign';\n\nexport default function set(route, replace, exec) {\n  exec = exec || true;\n  const { preservePath, hashRouting, history } = this.config;\n  const routeObject = assign(\n    { replace, exec },\n    typeof route === TYPEOF_STR ? { route } : route\n  );\n  replace = routeObject.replace;\n  exec = routeObject.exec;\n  let { route: routeStr, queryString } = routeObject;\n  const { preserveQuery, data, pageTitle = null } = routeObject;\n  const routeParts = routeStr.split(QRY);\n  // Check if query string is an object\n  if (isObject(queryString)) {\n    queryString = toQueryString(queryString);\n  }\n  // Resolve to URL query string if it's not explicitly passed\n  queryString = trim(queryString ? queryString : routeParts[1]);\n  routeStr = trim(routeParts[0]);\n  // Check if query preservation is required. Resolve query accordingly\n  if (preserveQuery) {\n    queryString = resolveQuery.apply(this, [queryString, hashRouting]);\n  }\n  if (isValidRoute(routeStr)) {\n    const unmodifiedRoute = routeStr;\n    if (hashRouting) {\n      routeStr = `/#${routeStr}`;\n      // Path preservation should only work for hash routing\n      if (preservePath) {\n        routeStr = `${routeStr.substring(1)}`;\n      }\n    }\n    // Append query string\n    routeStr = `${routeStr}${queryString ? `${QRY + queryString}` : EMPTY}`;\n    history[replace ? REPLACE : PUSH]({ data }, pageTitle, routeStr);\n    if (exec && unmodifiedRoute) {\n      trigger(this.config.context, VIRTUAL_PUSHSTATE, [\n        {\n          path: unmodifiedRoute,\n          hash: hashRouting,\n        },\n        UNDEF,\n        this,\n      ]);\n    }\n  } else {\n    throw new TypeError(INVALID_ROUTE);\n  }\n  return this;\n}\n","import { Observable } from 'rxjs';\nimport { QRY, UNDEF } from '../../utils/constants';\nimport { trim } from '../../utils/utils';\nimport RouterEvent from '../routerEvent';\n\nexport default function callOnce(isDone) {\n  const { hashRouting: hash, location } = this.config;\n  const path = trim(\n    hash ? location.hash.substring(1).split(QRY)[0] : location.pathname\n  );\n  return (observable) =>\n    new Observable((subscriber) => {\n      const subn = observable.subscribe(subscriber);\n      if (!isDone) {\n        isDone = true;\n        if (path) {\n          subscriber.next(new RouterEvent([{ path, hash }, UNDEF, this]));\n        }\n      }\n      return () => {\n        subn.unsubscribe();\n      };\n    });\n}\n","import { assign } from '../../utils/assign';\nimport bindRouterEvents from '../bindRouterEvents';\nimport set from '../set';\nimport { HISTORY_UNSUPPORTED, PUSH, TYPEOF_FUNC } from '../../utils/constants';\nimport callOnce from '../callOnce';\nimport { getGlobal } from '../../utils/getGlobal';\n\nexport default class Router {\n  constructor(config = {}) {\n    const { history, location, document } = getGlobal();\n    if (!history[PUSH]) {\n      throw new Error(HISTORY_UNSUPPORTED);\n    }\n    config = assign(\n      {\n        hashRouting: false, // Switch to hash routing\n        preservePath: false, // Works for hash routing\n        context: document.body, // To change the context of \"vpushstate\" event\n        location, // Should remain unchanged\n        history, // History object\n      },\n      config\n    );\n    this.config = Object.freeze(config);\n    this.__paths__ = [];\n    bindRouterEvents.apply(this);\n  }\n  pipe(...ops) {\n    return this.listeners.pipe(callOnce.apply(this), ...ops);\n  }\n  subscribe(...fns) {\n    return this.listeners.pipe(callOnce.apply(this)).subscribe(...fns);\n  }\n  set(...props) {\n    return set.apply(this, props);\n  }\n  destroy(callback) {\n    if (typeof callback === TYPEOF_FUNC) {\n      callback();\n    }\n    this.popStateSubscription.unsubscribe(); // Unsubscribe popstate event\n    this.__paths__.length = 0;\n  }\n}\n","import { EMPTY, REG_ROUTE_PARAMS } from './constants';\n\n/**\n * Parses current path and returns params object\n * @private\n * @param {string} expr Route expression\n * @param {string} path URL path\n * @returns {object}\n */\nexport function extractParams(expr, path) {\n  const params = {};\n  if (REG_ROUTE_PARAMS.test(expr)) {\n    const pathRegex = new RegExp(\n      expr.replace(/\\//g, '\\\\/').replace(/:[^/\\\\]+/g, '([^\\\\/]+)')\n    );\n    REG_ROUTE_PARAMS.lastIndex = 0;\n    if (pathRegex.test(path)) {\n      const keys = Array.from(expr.match(REG_ROUTE_PARAMS)).map((key) =>\n        key.replace(':', EMPTY)\n      );\n      const values = Array.from(path.match(pathRegex));\n      values.shift();\n      keys.forEach((key, index) => {\n        params[key] = values[index];\n      });\n    }\n  }\n  return params;\n}\n","import { trim, isValidRoute, each, isObject } from '../utils/utils';\nimport { Observable } from 'rxjs';\nimport {\n  INVALID_ROUTE,\n  CACHED_FIELDS,\n  UNDEF,\n  TYPEOF_BOOL,\n} from '../utils/constants';\nimport { extractParams } from '../utils/params';\nimport { deparam as queryDeparam } from '../utils/deparam';\nimport Router from '../api/router';\nimport { assign } from '../utils/assign';\n\n/**\n * Operator to compare a specific route\n * @param {string} routeStr Route string\n * @param {Router} routerInstance Current router object [optional]\n * @param {boolean} ignoreCase Ignore case in route string\n */\nexport function route(routeStr, routerInstance, ignoreCase) {\n  if (typeof routerInstance === TYPEOF_BOOL) {\n    ignoreCase = routerInstance;\n    routerInstance = UNDEF;\n  }\n  routeStr = trim(routeStr);\n  if (routerInstance instanceof Router) {\n    const paths = routerInstance.__paths__;\n    if (paths.indexOf(routeStr) === -1) {\n      paths.push(routeStr);\n    }\n  }\n  return (observable) =>\n    new Observable((subscriber) => {\n      const subn = observable.subscribe({\n        next(event) {\n          let incomingRoute = event.route;\n          if (isValidRoute(routeStr)) {\n            if (ignoreCase) {\n              routeStr = routeStr.toLowerCase();\n              incomingRoute = incomingRoute.toLowerCase();\n            }\n            const params = extractParams(routeStr, incomingRoute);\n            const paramsLength = Object.keys(params).length;\n            if (incomingRoute === routeStr || paramsLength > 0) {\n              if (paramsLength > 0) {\n                event.params = params;\n              }\n              subscriber.next(event);\n            }\n          } else {\n            subscriber.error(new Error(INVALID_ROUTE));\n          }\n        },\n        error: subscriber.error,\n        complete: subscriber.complete,\n      });\n      return () => {\n        if (routerInstance instanceof Router) {\n          const paths = routerInstance.__paths__;\n          const existingRouteIndex = paths.indexOf(routeStr);\n          if (existingRouteIndex > -1) {\n            paths.splice(existingRouteIndex, 1);\n          }\n        }\n        subn.unsubscribe();\n      };\n    });\n}\n\n/**\n * Converts search and hashSearch strings to object\n * @param {boolean} coerce Flag to enable value typecast\n */\nexport function deparam(coerce) {\n  return (observable) =>\n    new Observable((subscriber) => {\n      const subn = observable.subscribe({\n        next(event) {\n          try {\n            event.search = queryDeparam(event.search, coerce);\n            event.hashSearch = queryDeparam(event.hashSearch, coerce);\n            subscriber.next(event);\n          } catch (e) {\n            subscriber.error(e);\n          }\n        },\n        error: subscriber.error,\n        complete: subscriber.complete,\n      });\n      return () => {\n        subn.unsubscribe();\n      };\n    });\n}\n\n/**\n * Modifies current subscriber to detect errors\n * @param {Router} routerInstance Current router object\n */\nexport function noMatch(routerInstance) {\n  return (observable) =>\n    new Observable((subscriber) => {\n      const subn = observable.subscribe({\n        next(event) {\n          if (routerInstance instanceof Router) {\n            const paths = routerInstance.__paths__;\n            if (paths.length > 0) {\n              const currentRoute = event.route;\n              let match = false;\n              for (let i = 0; i < paths.length; i++) {\n                if (\n                  paths[i] === currentRoute ||\n                  Object.keys(extractParams(paths[i], currentRoute)).length\n                ) {\n                  match = true;\n                  break;\n                }\n              }\n              if (!match) {\n                event.noMatch = true;\n                subscriber.next(event);\n              }\n            }\n          }\n        },\n        error: subscriber.error,\n        complete: subscriber.complete,\n      });\n      return () => {\n        subn.unsubscribe();\n      };\n    });\n}\n\nfunction deepComparison(first, second, result) {\n  each(Object.keys(first), (key) => {\n    if (isObject(first[key]) && isObject(second[key])) {\n      deepComparison(first[key], second[key], result);\n    } else {\n      result.break = first[key] !== second[key];\n    }\n  });\n}\n\n/**\n * Caches incoming routes to avoid calling handler if there is no change\n * @param {string[]} keys\n * @param {boolean} deep\n */\nexport function cache(keys = CACHED_FIELDS, deep) {\n  let cache = {};\n  if (typeof keys === TYPEOF_BOOL) {\n    deep = keys;\n    keys = CACHED_FIELDS;\n  }\n  return (observable) =>\n    new Observable((subscriber) => {\n      const subn = observable.subscribe({\n        next(event) {\n          each(keys, (key) => {\n            if (deep && isObject(event[key]) && isObject(cache[key])) {\n              const result = {};\n              deepComparison(event[key], cache[key], result);\n              if (result.break) {\n                assign(cache, event);\n                subscriber.next(event);\n                return false;\n              }\n            } else if (event[key] !== cache[key]) {\n              assign(cache, event);\n              subscriber.next(event);\n              return false; // break loop\n            }\n          });\n        },\n        error: subscriber.error,\n        complete: subscriber.complete,\n      });\n      return () => {\n        subn.unsubscribe();\n        cache = {};\n      };\n    });\n}\n"],"names":["POP_STATE","REG_ROUTE_PARAMS","REG_PATHNAME","REG_COMPLEX","REG_VARIABLE","REG_REPLACE_BRACKETS","REG_REPLACE_NEXTPROP","HISTORY_UNSUPPORTED","INVALID_ROUTE","VIRTUAL_PUSHSTATE","CACHED_FIELDS","AMP","QRY","EQ","EMPTY","UNDEF","TYPEOF_STR","TYPEOF_BOOL","TYPEOF_UNDEF","TYPEOF_OBJ","TYPEOF_FUNC","STATE","PUSH","REPLACE","getGlobal","globalThis","global","self","isArr","Array","isArray","trim","str","isObject","value","isPureObject","isValidRoute","route","test","each","arrayObj","callback","length","index","continueTheLoop","apply","g","CustomEvent","event","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","prototype","Event","from","arrayLike","arr","i","push","loopFunc","ref","target","Object","keys","forEach","key","assign","isValidTarget","NodeList","HTMLCollection","trigger","eventType","data","Node","el","customEvent","dispatchEvent","RouterEvent","routeInfo","currentEvent","routeObject","originalEvent","routerInstance","config","location","history","path","hashRouting","hash","virtualEvent","pathname","search","substring","hashSearch","split","state","collate","observable","Observable","subscriber","subn","subscribe","next","error","complete","unsubscribe","bindRouterEvents","context","popStateSubscription","fromEvent","e","listeners","pipe","set","buildQuery","qsList","obj","obKey","encodeURIComponent","toQueryString","join","ifComplex","q","lib","qs","coerce","charAt","replace","queryObject","create","qq","qArr","map","part","decodeURIComponent","complex","simple","concat","toObject","convertedObj","resolve","ob","isNextNumber","resolveObj","nextProp","isNumber","coercion","match","prop","resolved","coercedValue","toArray","NaN","resolveQuery","queryString","existingQuery","deparam","exec","preservePath","routeStr","preserveQuery","pageTitle","routeParts","unmodifiedRoute","TypeError","callOnce","isDone","Router","Error","body","freeze","__paths__","ops","props","extractParams","expr","pathRegex","RegExp","lastIndex","values","shift","ignoreCase","paths","indexOf","incomingRoute","toLowerCase","paramsLength","existingRouteIndex","splice","queryDeparam","noMatch","currentRoute","deepComparison","first","second","result","cache","deep"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACO,IAAMA,SAAS,GAAG,UAAlB;AACA,IAAMC,gBAAgB,GAAG,SAAzB;AACA,IAAMC,YAAY,GAAG,cAArB;AACA,IAAMC,WAAW,GAAG,IAApB;AACA,IAAMC,YAAY,GAAG,oBAArB;AACA,IAAMC,oBAAoB,GAAG,aAA7B;AACA,IAAMC,oBAAoB,GAAG,OAA7B;AACA,IAAMC,mBAAmB,GAC9B,iDADK;AAEA,IAAMC,aAAa,GAAG,kCAAtB;AACA,IAAMC,iBAAiB,GAAG,YAA1B;AACA,IAAMC,aAAa,GAAG,CAC3B,OAD2B,EAE3B,aAF2B,EAG3B,MAH2B,EAI3B,MAJ2B,EAK3B,QAL2B,EAM3B,YAN2B,EAO3B,MAP2B,CAAtB;AASA,IAAMC,GAAG,GAAG,GAAZ;AACA,IAAMC,GAAG,GAAG,GAAZ;AACA,IAAMC,EAAE,GAAG,GAAX;AACA,IAAMC,KAAK,GAAG,EAAd;AACA,IAAMC,KAAK,GAAG,KAAK,CAAnB;AACA,IAAMC,UAAU,WAAUF,KAAV,CAAhB;AACA,IAAMG,WAAW,WAAU,IAAV,CAAjB;AACA,IAAMC,YAAY,WAAUH,KAAV,CAAlB;AACA,IAAMI,UAAU,WAAU,EAAV,CAAhB;QAC0B,CAAV;AAChB,IAAMC,WAAW,WAAW,YAAM,EAAjB,CAAjB;AACA,IAAMC,KAAK,GAAG,OAAd;AACA,IAAMC,IAAI,iBAAUD,KAAV,CAAV;AACA,IAAME,OAAO,oBAAaF,KAAb,CAAb;;AClCA,SAASG,SAAT,GAAqB;AAC1B,SAAO,QAAOC,UAAP,yCAAOA,UAAP,OAAsBP,YAAtB,GAAqCO,UAArC,GAAkDC,MAAM,IAAIC,IAAnE;AACD;;ACKD;AACA;AACA;;AACO,IAAMC,KAAK,GAAGC,KAAK,CAACC,OAApB;AAEP;AACA;AACA;AACA;;AACO,SAASC,IAAT,CAAcC,GAAd,EAAmB;AACxB,SAAO,QAAOA,GAAP,MAAehB,UAAf,GAA4BgB,GAAG,CAACD,IAAJ,EAA5B,GAAyCjB,KAAhD;AACD;AAED;AACA;AACA;AACA;;AACO,SAASmB,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAOA,KAAK,IAAI,QAAOA,KAAP,MAAiBf,UAAjC;AACD;AAED;AACA;AACA;AACA;;AACO,SAASgB,YAAT,CAAsBD,KAAtB,EAA6B;AAClC,SAAOD,QAAQ,CAACC,KAAD,CAAR,IAAmB,CAACN,KAAK,CAACM,KAAD,CAAhC;AACD;AAED;AACA;AACA;AACA;AACA;;AACO,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,SAAO,QAAOA,KAAP,MAAiBrB,UAAjB,IAA+Bd,YAAY,CAACoC,IAAb,CAAkBD,KAAlB,CAAtC;AACD;AAWD;AACA;AACA;AACA;AACA;;AACO,SAASE,IAAT,CAAcC,QAAd,EAAwBC,QAAxB,EAAkC;AACvC,MAAID,QAAQ,IAAIA,QAAQ,CAACE,MAAzB,EAAiC;AAC/B,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,QAAQ,CAACE,MAArC,EAA6CC,KAAK,IAAI,CAAtD,EAAyD;AACvD,UAAI,QAAOF,QAAP,MAAoBrB,WAAxB,EAAqC;AACnC,YAAMwB,eAAe,GAAGH,QAAQ,CAACI,KAAT,CAAeL,QAAf,EAAyB,CAC/CA,QAAQ,CAACG,KAAD,CADuC,EAE/CA,KAF+C,CAAzB,CAAxB;;AAIA,YAAI,QAAOC,eAAP,MAA2B3B,WAA/B,EAA4C;AAC1C,cAAI2B,eAAJ,EAAqB;AACnB;AACD,WAFD,MAEO;AACL;AACD;AACF;AACF;AACF;AACF;AACF;;AC1ED,IAAME,GAAC,GAAGtB,SAAS,EAAnB;;AACA,IAAI,QAAOsB,GAAC,CAACC,WAAT,MAAyB7B,YAA7B,EAA2C;AACzC,MAAM6B,WAAW,GAAG,SAAdA,WAAc,CAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC3CA,IAAAA,MAAM,GAAGA,MAAM,IAAI;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,UAAU,EAAE,KAA9B;AAAqCC,MAAAA,MAAM,EAAErC;AAA7C,KAAnB;AACA,QAAMsC,GAAG,GAAGC,QAAQ,CAACC,WAAT,CAAqB,aAArB,CAAZ;AACAF,IAAAA,GAAG,CAACG,eAAJ,CACER,KADF,EAEEC,MAAM,CAACC,OAFT,EAGED,MAAM,CAACE,UAHT,EAIEF,MAAM,CAACG,MAJT;AAMA,WAAOC,GAAP;AACD,GAVD;;AAYAN,EAAAA,WAAW,CAACU,SAAZ,GAAwBX,GAAC,CAACY,KAAF,CAAQD,SAAhC;AACAX,EAAAA,GAAC,CAACC,WAAF,GAAgBA,WAAhB;AACD;;;AAID,IAAI,CAAClB,KAAK,CAAC8B,IAAX,EAAiB;AACf9B,EAAAA,KAAK,CAAC8B,IAAN,GAAa,UAAUC,SAAV,EAAqB;AAChC,QAAIhC,KAAK,CAACgC,SAAD,CAAT,EAAsB;AACpB,aAAOA,SAAP;AACD;;AACD,QAAMC,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAAClB,MAA9B,EAAsCoB,CAAC,EAAvC,EAA2C;AACzCD,MAAAA,GAAG,CAACE,IAAJ,CAASH,SAAS,CAACE,CAAD,CAAlB;AACD;;AACD,WAAOD,GAAP;AACD,GATD;AAUD;;AClCD;AACA;AACA;AACA;AACA;AACA;;AACA,SAASG,QAAT,CAAkBC,GAAlB,EAAuBC,MAAvB,EAA+B;AAC7B,MAAIjC,QAAQ,CAACgC,GAAD,CAAZ,EAAmB;AACjBE,IAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,OAAjB,CAAyB,UAAUC,GAAV,EAAe;AACtCJ,MAAAA,MAAM,CAACI,GAAD,CAAN,GAAcL,GAAG,CAACK,GAAD,CAAjB;AACD,KAFD;AAGD;AACF;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASC,MAAT,GAAyB;AAC9B,MAAML,MAAM,GAAGjC,QAAQ,kDAAR,sDAA8B,EAA7C;;AACA,OAAK,IAAI6B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,UAAKpB,MAAzB,EAAiCoB,CAAC,EAAlC,EAAsC;AACpCE,IAAAA,QAAQ,CAAMF,CAAN,4BAAMA,CAAN,yBAAMA,CAAN,GAAUI,MAAV,CAAR;AACD;;AACD,SAAOA,MAAP;AACD;;ACvBD,IAAMpB,CAAC,GAAGtB,SAAS,EAAnB;;AAGA,SAASgD,aAAT,CAAuBN,MAAvB,EAA+B;AAC7B,SACEA,MAAM,YAAYO,QAAlB,IACAP,MAAM,YAAYQ,cADlB,IAEA7C,KAAK,CAACC,OAAN,CAAcoC,MAAd,CAHF;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASS,OAAT,CAAiBT,MAAjB,EAAyBU,SAAzB,EAAoCC,IAApC,EAA0C;AAC/C,MAAIX,MAAM,YAAYY,IAAtB,EAA4B;AAC1BZ,IAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;AACD;;AACD,MAAIM,aAAa,CAACN,MAAD,CAAb,IAAyB,QAAOU,SAAP,MAAqB5D,UAAlD,EAA8D;AAC5DuB,IAAAA,IAAI,CAAC2B,MAAD,EAAS,UAACa,EAAD,EAAQ;AACnB,UAAMC,WAAW,GAAG,IAAIlC,CAAC,CAACC,WAAN,CAAkB6B,SAAlB,EAA6B;AAC/C1B,QAAAA,OAAO,EAAE,IADsC;AAE/CC,QAAAA,UAAU,EAAE,IAFmC;AAG/CC,QAAAA,MAAM,EAAEyB,IAAI,IAAI;AAH+B,OAA7B,CAApB;AAKAE,MAAAA,EAAE,CAACE,aAAH,CAAiBD,WAAjB;AACD,KAPG,CAAJ;AAQD;AACF;;ICjCoBE,cACnB,qBAAYC,SAAZ,EAAuBC,YAAvB,EAAqC;AAAA;;AACnC;AACA,MAAMC,WAAW,GAAGF,SAAS,CAAC,CAAD,CAA7B;AACA,MAAMG,aAAa,GAAGH,SAAS,CAAC,CAAD,CAA/B;AACA,MAAMI,cAAc,GAAGJ,SAAS,CAAC,CAAD,CAAhC;AACA,8BAA8BI,cAAc,CAACC,MAA7C;AAAA,MAAQC,QAAR,yBAAQA,QAAR;AAAA,MAAkBC,OAAlB,yBAAkBA,OAAlB;AACA,OAAKrD,KAAL,GAAagD,WAAW,CAACM,IAAzB;AACA,OAAKC,WAAL,GAAmBP,WAAW,CAACQ,IAA/B;AACA,OAAKN,cAAL,GAAsBA,cAAtB;AACA,OAAKO,YAAL,GAAoBV,YAAY,IAAI,EAApC;AACA,OAAKE,aAAL,GAAqBA,aAAa,IAAI,EAAtC;AACA,OAAKK,IAAL,GAAY5D,IAAI,CAAC0D,QAAQ,CAACM,QAAV,CAAhB;AACA,OAAKF,IAAL,GAAYJ,QAAQ,CAACI,IAArB;AACA,OAAKG,MAAL,GAAcjE,IAAI,CAAC0D,QAAQ,CAACO,MAAT,CAAgBC,SAAhB,CAA0B,CAA1B,CAAD,CAAlB;AACA,OAAKC,UAAL,GAAkBnE,IAAI,CAAC0D,QAAQ,CAACI,IAAT,IAAiBJ,QAAQ,CAACI,IAAT,CAAcM,KAAd,CAAoBvF,GAApB,EAAyB,CAAzB,CAAlB,CAAtB;AACA,MAAQwF,KAAR,GAAkB,KAAKd,aAAvB,CAAQc,KAAR;AACA,OAAKvB,IAAL,GAAauB,KAAK,IAAIA,KAAK,CAACvB,IAAhB,IAA0Ba,OAAO,CAACU,KAAR,IAAiBV,OAAO,CAACU,KAAR,CAAcvB,IAArE;AACD;;ACjBY,SAASwB,OAAT,GAAmB;AAAA;;AAChC,SAAO,UAACC,UAAD;AAAA,WACL,IAAIC,UAAJ,CAAe,UAACC,UAAD,EAAgB;AAC7B,UAAMC,IAAI,GAAGH,UAAU,CAACI,SAAX,CAAqB;AAChCC,QAAAA,IAAI,EAAE,cAAC3D,KAAD,EAAW;AACf,cAAMuC,cAAc,GAAGvC,KAAK,CAACI,MAAN,CAAa,CAAb,CAAvB;;AACA,cAAImC,cAAc,KAAK,KAAvB,EAA6B;AAC3BiB,YAAAA,UAAU,CAACG,IAAX,CAAgB,IAAIzB,WAAJ,CAAgBlC,KAAK,CAACI,MAAtB,EAA8BJ,KAA9B,CAAhB;AACD;AACF,SAN+B;AAOhC4D,QAAAA,KAAK,EAAEJ,UAAU,CAACI,KAPc;AAQhCC,QAAAA,QAAQ,EAAEL,UAAU,CAACK;AARW,OAArB,CAAb;AAUA,aAAO,YAAM;AACXJ,QAAAA,IAAI,CAACK,WAAL;AACD,OAFD;AAGD,KAdD,CADK;AAAA,GAAP;AAgBD;;ACbc,SAASC,gBAAT,GAA4B;AAAA;;AACzC,qBAA2C,KAAKvB,MAAhD;AAAA,MAAQwB,OAAR,gBAAQA,OAAR;AAAA,MAAiBvB,QAAjB,gBAAiBA,QAAjB;AAAA,MAA2BG,WAA3B,gBAA2BA,WAA3B;AACA,OAAKqB,oBAAL,GAA4BC,SAAS,CAAC1F,SAAS,EAAV,EAAcxB,SAAd,CAAT,CAAkC0G,SAAlC,CAC1B,UAACS,CAAD,EAAO;AACL,QAAMxB,IAAI,GAAG5D,IAAI,CACf6D,WAAW,GACPH,QAAQ,CAACI,IAAT,CAAcI,SAAd,CAAwB,CAAxB,EAA2BE,KAA3B,CAAiCvF,GAAjC,EAAsC,CAAtC,CADO,GAEP6E,QAAQ,CAACM,QAHE,CAAjB;;AAKA,QAAIJ,IAAJ,EAAU;AACRhB,MAAAA,OAAO,CAACqC,OAAD,EAAUvG,iBAAV,EAA6B,CAClC;AAAEkF,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,IAAI,EAAED;AAAd,OADkC,EAElCuB,CAFkC,EAGlC,KAHkC,CAA7B,CAAP;AAKD;AACF,GAdyB,CAA5B;AAgBA,OAAKC,SAAL,GAAiBF,SAAS,CAACF,OAAD,EAAUvG,iBAAV,CAAT,CAAsC4G,IAAtC,CACfhB,OAAO,CAACxD,KAAR,CAAc,IAAd,CADe,CAAjB;;AAGA,MAAI+C,WAAW,IAAI,CAACH,QAAQ,CAACI,IAA7B,EAAmC;AACjC,SAAKyB,GAAL,CAAS,GAAT,EAAc,IAAd,EAAoB,KAApB,EADiC;AAElC;AACF;;AC5BD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,MAApB,EAA4BlD,GAA5B,EAAiCmD,GAAjC,EAAsC;AACpC,MAAIxF,QAAQ,CAACwF,GAAD,CAAZ,EAAmB;AACjBtD,IAAAA,MAAM,CAACC,IAAP,CAAYqD,GAAZ,EAAiBpD,OAAjB,CAAyB,UAACqD,KAAD,EAAW;AAClCH,MAAAA,UAAU,CAACC,MAAD,YAAYlD,GAAZ,cAAmB1C,KAAK,CAAC6F,GAAD,CAAL,GAAa3G,KAAb,GAAqB4G,KAAxC,QAAkDD,GAAG,CAACC,KAAD,CAArD,CAAV;AACD,KAFD;AAGD,GAJD,MAIO,IAAI,QAAOD,GAAP,MAAerG,WAAnB,EAAgC;AACrCoG,IAAAA,MAAM,CAACzD,IAAP,WAAe4D,kBAAkB,CAACrD,GAAD,CAAjC,cAA0CqD,kBAAkB,CAACF,GAAD,CAA5D;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASG,aAAT,CAAuBH,GAAvB,EAA4B;AACjC,MAAID,MAAM,GAAG,EAAb;;AACA,MAAIvF,QAAQ,CAACwF,GAAD,CAAZ,EAAmB;AACjBtD,IAAAA,MAAM,CAACC,IAAP,CAAYqD,GAAZ,EAAiBpD,OAAjB,CAAyB,UAACC,GAAD,EAAS;AAChCiD,MAAAA,UAAU,CAACC,MAAD,EAASlD,GAAT,EAAcmD,GAAG,CAACnD,GAAD,CAAjB,CAAV;AACD,KAFD;AAGA,WAAOkD,MAAM,CAACK,IAAP,CAAYlH,GAAZ,CAAP;AACD;;AACD,SAAO,QAAO8G,GAAP,MAAezG,UAAf,GAA4ByG,GAA5B,GAAkC3G,KAAzC;AACD;;ACnCD;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,YAAc,GAAG,SAAS,GAAG,EAAE;AAC/B,EAAE,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC/B,IAAI,OAAO,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;AAC3B,GAAG;AACH,EAAE,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;AACpD,IAAI,OAAO,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AACpE,GAAG;AACH,EAAE,OAAO,KAAK,CAAC;AACf,CAAC;;ACDD;AACA;AACA;AACA;;AACA,SAASgH,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,SAAO5H,WAAW,CAACmC,IAAZ,CAAiByF,CAAjB,CAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASC,GAAT,CAAaC,EAAb,EAAiBC,MAAjB,EAAyB;AAAA;;AACvBD,EAAAA,EAAE,GAAGlG,IAAI,CAACkG,EAAD,CAAT;;AACA,MAAIA,EAAE,CAACE,MAAH,CAAU,CAAV,MAAiBvH,GAArB,EAA0B;AACxBqH,IAAAA,EAAE,GAAGA,EAAE,CAACG,OAAH,CAAWxH,GAAX,EAAgBE,KAAhB,CAAL;AACD;;AACD,MAAMuH,WAAW,GAAGlE,MAAM,CAACmE,MAAP,CAAc,IAAd,CAApB;;AACA,MAAIL,EAAJ,EAAQ;AACNA,IAAAA,EAAE,CAAC9B,KAAH,CAASxF,GAAT,EAAc0D,OAAd,CAAsB,UAACkE,EAAD,EAAQ;AAC5B,UAAMC,IAAI,GAAGD,EAAE,CAACpC,KAAH,CAAStF,EAAT,EAAa4H,GAAb,CAAiB,UAACC,IAAD;AAAA,eAAUC,kBAAkB,CAACD,IAAD,CAA5B;AAAA,OAAjB,CAAb;AACA,OAACZ,SAAS,CAACU,IAAI,CAAC,CAAD,CAAL,CAAT,GAAqBI,OAArB,GAA+BC,MAAhC,EAAwChG,KAAxC,CACE,KADF,EAEE2F,IAAI,CAACM,MAAL,CAAY,CAACT,WAAD,EAAcH,MAAd,EAAsB,KAAtB,CAAZ,CAFF;AAID,KAND;AAOD;;AACD,SAAOG,WAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASU,QAAT,CAAkBlF,GAAlB,EAAuB;AACrB,MAAImF,YAAY,GAAG7E,MAAM,CAACmE,MAAP,CAAc,IAAd,CAAnB;;AACA,MAAI1G,KAAK,CAACiC,GAAD,CAAT,EAAgB;AACdA,IAAAA,GAAG,CAACQ,OAAJ,CAAY,UAACnC,KAAD,EAAQS,KAAR,EAAkB;AAC5BqG,MAAAA,YAAY,CAACrG,KAAD,CAAZ,GAAsBT,KAAtB;AACD,KAFD;AAGD;;AACD,SAAO8G,YAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,OAAT,CAAiBC,EAAjB,EAAqBC,YAArB,EAAmC;AACjC,SAAOA,YAAY,GAAI,QAAOD,EAAP,MAAchI,YAAd,GAA6B,EAA7B,GAAkCgI,EAAtC,GAA4CH,QAAQ,CAACG,EAAD,CAAvE;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASE,UAAT,CAAoBF,EAApB,EAAwBG,QAAxB,EAAkC;AAChC,MAAIlH,YAAY,CAAC+G,EAAD,CAAhB,EAAsB,OAAO;AAAEA,IAAAA,EAAE,EAAFA;AAAF,GAAP;AACtB,MAAItH,KAAK,CAACsH,EAAD,CAAL,IAAa,QAAOA,EAAP,MAAchI,YAA/B,EACE,OAAO;AAAEgI,IAAAA,EAAE,EAAED,OAAO,CAACC,EAAD,EAAKI,QAAQ,CAACD,QAAD,CAAb;AAAb,GAAP;AACF,SAAO;AAAEH,IAAAA,EAAE,EAAE,CAACA,EAAD,CAAN;AAAYnF,IAAAA,IAAI,EAAEmF,EAAE,KAAK;AAAzB,GAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASN,OAAT,CAAiBtE,GAAjB,EAAsBpC,KAAtB,EAA6BuF,GAA7B,EAAkC8B,QAAlC,EAA4C;AAC1C,MAAMC,KAAK,GAAGlF,GAAG,CAACkF,KAAJ,CAAUpJ,YAAV,KAA2B,EAAzC;;AACA,MAAIoJ,KAAK,CAAC9G,MAAN,KAAiB,CAArB,EAAwB;AACtB,QAAM+G,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAlB;AACA,QAAIH,QAAQ,GAAGG,KAAK,CAAC,CAAD,CAApB;AACAlF,IAAAA,GAAG,GAAGA,GAAG,CAAC8D,OAAJ,CAAY/H,oBAAZ,EAAkCS,KAAlC,CAAN;;AACA,QAAIgH,SAAS,CAACxD,GAAD,CAAb,EAAoB;AAClB,UAAI+E,QAAQ,KAAKvI,KAAjB,EAAwBuI,QAAQ,GAAG,GAAX;AACxB/E,MAAAA,GAAG,GAAGA,GAAG,CAAC8D,OAAJ,CAAY9H,oBAAZ,EAAkC+I,QAAlC,CAAN;AACAT,MAAAA,OAAO,CACLtE,GADK,EAELpC,KAFK,EAGJuF,GAAG,CAACgC,IAAD,CAAH,GAAYL,UAAU,CAAC3B,GAAG,CAACgC,IAAD,CAAJ,EAAYJ,QAAZ,CAAV,CAAgCH,EAHxC,EAILK,QAJK,CAAP;AAMD,KATD,MASO,IAAIF,QAAJ,EAAc;AACnB,UAAMK,QAAQ,GAAGN,UAAU,CAAC3B,GAAG,CAACgC,IAAD,CAAJ,EAAYJ,QAAZ,CAA3B;AACA5B,MAAAA,GAAG,CAACgC,IAAD,CAAH,GAAYC,QAAQ,CAACR,EAArB;AACA,UAAMS,YAAY,GAAGJ,QAAQ,GAAGrB,MAAM,CAAChG,KAAD,CAAT,GAAmBA,KAAhD;;AACA,UAAIwH,QAAQ,CAAC3F,IAAb,EAAmB;AACjB0D,QAAAA,GAAG,CAACgC,IAAD,CAAH,CAAU1F,IAAV,qBACGsF,QADH,EACcM,YADd;AAGD,OAJD,MAIO;AACLlC,QAAAA,GAAG,CAACgC,IAAD,CAAH,CAAUJ,QAAV,IAAsBM,YAAtB;AACD;AACF,KAXM,MAWA;AACLd,MAAAA,MAAM,CAACY,IAAD,EAAOvH,KAAP,EAAcuF,GAAd,EAAmB8B,QAAnB,EAA6B,IAA7B,CAAN;AACD;AACF;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASV,MAAT,CAAgBvE,GAAhB,EAAqBpC,KAArB,EAA4BmG,WAA5B,EAAyCkB,QAAzC,EAAmDK,OAAnD,EAA4D;AAC1D,MAAIL,QAAJ,EAAc;AACZrH,IAAAA,KAAK,GAAGgG,MAAM,CAAChG,KAAD,CAAd;AACD;;AACD,MAAIoC,GAAG,IAAI+D,WAAX,EAAwB;AACtBA,IAAAA,WAAW,CAAC/D,GAAD,CAAX,GAAmB1C,KAAK,CAACyG,WAAW,CAAC/D,GAAD,CAAZ,CAAL,GACf+D,WAAW,CAAC/D,GAAD,CADI,GAEf,CAAC+D,WAAW,CAAC/D,GAAD,CAAZ,CAFJ;AAGA+D,IAAAA,WAAW,CAAC/D,GAAD,CAAX,CAAiBP,IAAjB,CAAsB7B,KAAtB;AACD,GALD,MAKO;AACLmG,IAAAA,WAAW,CAAC/D,GAAD,CAAX,GAAmBsF,OAAO,GAAG,CAAC1H,KAAD,CAAH,GAAaA,KAAvC;AACD;AACF;AAED;AACA;AACA;AACA;;;AACA,SAASgG,MAAT,CAAgBhG,KAAhB,EAAuB;AACrB,MAAIA,KAAK,IAAI,IAAb,EAAmB,OAAOpB,KAAP;AACnB,MAAI,QAAOoB,KAAP,MAAiBlB,UAArB,EAAiC,OAAOkB,KAAP;AACjC,MAAIoH,QAAQ,CAAEpH,KAAK,GAAGH,IAAI,CAACG,KAAD,CAAd,CAAZ,EAAqC,OAAO,CAACA,KAAR;;AACrC,UAAQA,KAAR;AACE,SAAK,MAAL;AACE,aAAO,IAAP;;AACF,SAAKhB,YAAL;AACE,aAAOH,KAAP;;AACF,SAAK,MAAL;AACE,aAAO,IAAP;;AACF,SAAK,OAAL;AACE,aAAO,KAAP;;AACF,SAAK,KAAL;AACE,aAAO8I,GAAP;;AACF;AACE,aAAO3H,KAAP;AAZJ;AAcD;;AC3JD;AACA;AACA;AACA;AACA;AACA;;AACe,SAAS4H,YAAT,CAAsBC,WAAtB,EAAmCnE,WAAnC,EAAgD;AAC7D,MAAQH,QAAR,GAAqB,KAAKD,MAA1B,CAAQC,QAAR;AACA,MAAMO,MAAM,GAAGjE,IAAI,CAAC0D,QAAQ,CAACO,MAAT,IAAmBP,QAAQ,CAACO,MAAT,CAAgBC,SAAhB,CAA0B,CAA1B,CAApB,CAAnB;AACA,MAAM+D,aAAa,GAAGpE,WAAW,GAC7B7D,IAAI,CAAC0D,QAAQ,CAACI,IAAT,CAAcM,KAAd,CAAoBvF,GAApB,EAAyB,CAAzB,CAAD,CADyB,GAE7BmB,IAAI,CAACiE,MAAD,CAFR;AAGA,MAAI,CAACgE,aAAL,EAAoB,OAAOD,WAAP;AACpB,SAAOnC,aAAa,CAClBrD,MAAM,CAAC0F,GAAO,CAACjE,MAAD,CAAR,EAAkBiE,GAAO,CAACD,aAAD,CAAzB,EAA0CC,GAAO,CAACF,WAAD,CAAjD,CADY,CAApB;AAGD;;ACNc,SAASzC,GAAT,CAAajF,KAAb,EAAoB+F,OAApB,EAA6B8B,IAA7B,EAAmC;AAChDA,EAAAA,IAAI,GAAGA,IAAI,IAAI,IAAf;AACA,qBAA+C,KAAK1E,MAApD;AAAA,MAAQ2E,YAAR,gBAAQA,YAAR;AAAA,MAAsBvE,WAAtB,gBAAsBA,WAAtB;AAAA,MAAmCF,OAAnC,gBAAmCA,OAAnC;AACA,MAAML,WAAW,GAAGd,MAAM,CACxB;AAAE6D,IAAAA,OAAO,EAAPA,OAAF;AAAW8B,IAAAA,IAAI,EAAJA;AAAX,GADwB,EAExB,QAAO7H,KAAP,MAAiBrB,UAAjB,GAA8B;AAAEqB,IAAAA,KAAK,EAALA;AAAF,GAA9B,GAA0CA,KAFlB,CAA1B;AAIA+F,EAAAA,OAAO,GAAG/C,WAAW,CAAC+C,OAAtB;AACA8B,EAAAA,IAAI,GAAG7E,WAAW,CAAC6E,IAAnB;AACA,MAAaE,QAAb,GAAuC/E,WAAvC,CAAMhD,KAAN;AAAA,MAAuB0H,WAAvB,GAAuC1E,WAAvC,CAAuB0E,WAAvB;AACA,MAAQM,aAAR,GAAkDhF,WAAlD,CAAQgF,aAAR;AAAA,MAAuBxF,IAAvB,GAAkDQ,WAAlD,CAAuBR,IAAvB;AAAA,8BAAkDQ,WAAlD,CAA6BiF,SAA7B;AAAA,MAA6BA,SAA7B,sCAAyC,IAAzC;AACA,MAAMC,UAAU,GAAGH,QAAQ,CAACjE,KAAT,CAAevF,GAAf,CAAnB,CAXgD;;AAahD,MAAIqB,QAAQ,CAAC8H,WAAD,CAAZ,EAA2B;AACzBA,IAAAA,WAAW,GAAGnC,aAAa,CAACmC,WAAD,CAA3B;AACD,GAf+C;;;AAiBhDA,EAAAA,WAAW,GAAGhI,IAAI,CAACgI,WAAW,GAAGA,WAAH,GAAiBQ,UAAU,CAAC,CAAD,CAAvC,CAAlB;AACAH,EAAAA,QAAQ,GAAGrI,IAAI,CAACwI,UAAU,CAAC,CAAD,CAAX,CAAf,CAlBgD;;AAoBhD,MAAIF,aAAJ,EAAmB;AACjBN,IAAAA,WAAW,GAAGD,YAAY,CAACjH,KAAb,CAAmB,IAAnB,EAAyB,CAACkH,WAAD,EAAcnE,WAAd,CAAzB,CAAd;AACD;;AACD,MAAIxD,YAAY,CAACgI,QAAD,CAAhB,EAA4B;AAC1B,QAAMI,eAAe,GAAGJ,QAAxB;;AACA,QAAIxE,WAAJ,EAAiB;AACfwE,MAAAA,QAAQ,eAAQA,QAAR,CAAR,CADe;;AAGf,UAAID,YAAJ,EAAkB;AAChBC,QAAAA,QAAQ,aAAMA,QAAQ,CAACnE,SAAT,CAAmB,CAAnB,CAAN,CAAR;AACD;AACF,KARyB;;;AAU1BmE,IAAAA,QAAQ,aAAMA,QAAN,SAAiBL,WAAW,aAAMnJ,GAAG,GAAGmJ,WAAZ,IAA4BjJ,KAAxD,CAAR;AACA4E,IAAAA,OAAO,CAAC0C,OAAO,GAAG7G,OAAH,GAAaD,IAArB,CAAP,CAAkC;AAAEuD,MAAAA,IAAI,EAAJA;AAAF,KAAlC,EAA4CyF,SAA5C,EAAuDF,QAAvD;;AACA,QAAIF,IAAI,IAAIM,eAAZ,EAA6B;AAC3B7F,MAAAA,OAAO,CAAC,KAAKa,MAAL,CAAYwB,OAAb,EAAsBvG,iBAAtB,EAAyC,CAC9C;AACEkF,QAAAA,IAAI,EAAE6E,eADR;AAEE3E,QAAAA,IAAI,EAAED;AAFR,OAD8C,EAK9C7E,KAL8C,EAM9C,IAN8C,CAAzC,CAAP;AAQD;AACF,GAtBD,MAsBO;AACL,UAAM,IAAI0J,SAAJ,CAAcjK,aAAd,CAAN;AACD;;AACD,SAAO,IAAP;AACD;;AC5Dc,SAASkK,QAAT,CAAkBC,MAAlB,EAA0B;AAAA;;AACvC,qBAAwC,KAAKnF,MAA7C;AAAA,MAAqBK,IAArB,gBAAQD,WAAR;AAAA,MAA2BH,QAA3B,gBAA2BA,QAA3B;AACA,MAAME,IAAI,GAAG5D,IAAI,CACf8D,IAAI,GAAGJ,QAAQ,CAACI,IAAT,CAAcI,SAAd,CAAwB,CAAxB,EAA2BE,KAA3B,CAAiCvF,GAAjC,EAAsC,CAAtC,CAAH,GAA8C6E,QAAQ,CAACM,QAD5C,CAAjB;AAGA,SAAO,UAACO,UAAD;AAAA,WACL,IAAIC,UAAJ,CAAe,UAACC,UAAD,EAAgB;AAC7B,UAAMC,IAAI,GAAGH,UAAU,CAACI,SAAX,CAAqBF,UAArB,CAAb;;AACA,UAAI,CAACmE,MAAL,EAAa;AACXA,QAAAA,MAAM,GAAG,IAAT;;AACA,YAAIhF,IAAJ,EAAU;AACRa,UAAAA,UAAU,CAACG,IAAX,CAAgB,IAAIzB,WAAJ,CAAgB,CAAC;AAAES,YAAAA,IAAI,EAAJA,IAAF;AAAQE,YAAAA,IAAI,EAAJA;AAAR,WAAD,EAAiB9E,KAAjB,EAAwB,KAAxB,CAAhB,CAAhB;AACD;AACF;;AACD,aAAO,YAAM;AACX0F,QAAAA,IAAI,CAACK,WAAL;AACD,OAFD;AAGD,KAXD,CADK;AAAA,GAAP;AAaD;;IChBoB8D;AACnB,oBAAyB;AAAA,QAAbpF,MAAa,uEAAJ,EAAI;;AAAA;;AACvB,qBAAwChE,SAAS,EAAjD;AAAA,QAAQkE,OAAR,cAAQA,OAAR;AAAA,QAAiBD,QAAjB,cAAiBA,QAAjB;AAAA,QAA2BnC,QAA3B,cAA2BA,QAA3B;;AACA,QAAI,CAACoC,OAAO,CAACpE,IAAD,CAAZ,EAAoB;AAClB,YAAM,IAAIuJ,KAAJ,CAAUtK,mBAAV,CAAN;AACD;;AACDiF,IAAAA,MAAM,GAAGjB,MAAM,CACb;AACEqB,MAAAA,WAAW,EAAE,KADf;AACsB;AACpBuE,MAAAA,YAAY,EAAE,KAFhB;AAEuB;AACrBnD,MAAAA,OAAO,EAAE1D,QAAQ,CAACwH,IAHpB;AAG0B;AACxBrF,MAAAA,QAAQ,EAARA,QAJF;AAIY;AACVC,MAAAA,OAAO,EAAPA,OALF;;AAAA,KADa,EAQbF,MARa,CAAf;AAUA,SAAKA,MAAL,GAAcrB,MAAM,CAAC4G,MAAP,CAAcvF,MAAd,CAAd;AACA,SAAKwF,SAAL,GAAiB,EAAjB;AACAjE,IAAAA,gBAAgB,CAAClE,KAAjB,CAAuB,IAAvB;AACD;;;;WACD,gBAAa;AAAA;;AAAA,wCAALoI,GAAK;AAALA,QAAAA,GAAK;AAAA;;AACX,aAAO,wBAAK7D,SAAL,EAAeC,IAAf,yBAAoBqD,QAAQ,CAAC7H,KAAT,CAAe,IAAf,CAApB,SAA6CoI,GAA7C,EAAP;AACD;;;WACD,qBAAkB;AAAA;;AAChB,aAAO,6BAAK7D,SAAL,CAAeC,IAAf,CAAoBqD,QAAQ,CAAC7H,KAAT,CAAe,IAAf,CAApB,GAA0C6D,SAA1C,uCAAP;AACD;;;WACD,iBAAc;AAAA,yCAAPwE,KAAO;AAAPA,QAAAA,KAAO;AAAA;;AACZ,aAAO5D,GAAG,CAACzE,KAAJ,CAAU,IAAV,EAAgBqI,KAAhB,CAAP;AACD;;;WACD,iBAAQzI,QAAR,EAAkB;AAChB,UAAI,QAAOA,QAAP,MAAoBrB,WAAxB,EAAqC;AACnCqB,QAAAA,QAAQ;AACT;;AACD,WAAKwE,oBAAL,CAA0BH,WAA1B,GAJgB;;AAKhB,WAAKkE,SAAL,CAAetI,MAAf,GAAwB,CAAxB;AACD;;;;;;ACxCH;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASyI,aAAT,CAAuBC,IAAvB,EAA6BzF,IAA7B,EAAmC;AACxC,MAAM1C,MAAM,GAAG,EAAf;;AACA,MAAIhD,gBAAgB,CAACqC,IAAjB,CAAsB8I,IAAtB,CAAJ,EAAiC;AAC/B,QAAMC,SAAS,GAAG,IAAIC,MAAJ,CAChBF,IAAI,CAAChD,OAAL,CAAa,KAAb,EAAoB,KAApB,EAA2BA,OAA3B,CAAmC,WAAnC,EAAgD,WAAhD,CADgB,CAAlB;AAGAnI,IAAAA,gBAAgB,CAACsL,SAAjB,GAA6B,CAA7B;;AACA,QAAIF,SAAS,CAAC/I,IAAV,CAAeqD,IAAf,CAAJ,EAA0B;AACxB,UAAMvB,IAAI,GAAGvC,KAAK,CAAC8B,IAAN,CAAWyH,IAAI,CAAC5B,KAAL,CAAWvJ,gBAAX,CAAX,EAAyCwI,GAAzC,CAA6C,UAACnE,GAAD;AAAA,eACxDA,GAAG,CAAC8D,OAAJ,CAAY,GAAZ,EAAiBtH,KAAjB,CADwD;AAAA,OAA7C,CAAb;AAGA,UAAM0K,MAAM,GAAG3J,KAAK,CAAC8B,IAAN,CAAWgC,IAAI,CAAC6D,KAAL,CAAW6B,SAAX,CAAX,CAAf;AACAG,MAAAA,MAAM,CAACC,KAAP;AACArH,MAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,GAAD,EAAM3B,KAAN,EAAgB;AAC3BM,QAAAA,MAAM,CAACqB,GAAD,CAAN,GAAckH,MAAM,CAAC7I,KAAD,CAApB;AACD,OAFD;AAGD;AACF;;AACD,SAAOM,MAAP;AACD;;ACfD;AACA;AACA;AACA;AACA;AACA;;AACO,SAASZ,KAAT,CAAe+H,QAAf,EAAyB7E,cAAzB,EAAyCmG,UAAzC,EAAqD;AAC1D,MAAI,QAAOnG,cAAP,MAA0BtE,WAA9B,EAA2C;AACzCyK,IAAAA,UAAU,GAAGnG,cAAb;AACAA,IAAAA,cAAc,GAAGxE,KAAjB;AACD;;AACDqJ,EAAAA,QAAQ,GAAGrI,IAAI,CAACqI,QAAD,CAAf;;AACA,MAAI7E,cAAc,YAAYqF,MAA9B,EAAsC;AACpC,QAAMe,KAAK,GAAGpG,cAAc,CAACyF,SAA7B;;AACA,QAAIW,KAAK,CAACC,OAAN,CAAcxB,QAAd,MAA4B,CAAC,CAAjC,EAAoC;AAClCuB,MAAAA,KAAK,CAAC5H,IAAN,CAAWqG,QAAX;AACD;AACF;;AACD,SAAO,UAAC9D,UAAD;AAAA,WACL,IAAIC,UAAJ,CAAe,UAACC,UAAD,EAAgB;AAC7B,UAAMC,IAAI,GAAGH,UAAU,CAACI,SAAX,CAAqB;AAChCC,QAAAA,IADgC,gBAC3B3D,KAD2B,EACpB;AACV,cAAI6I,aAAa,GAAG7I,KAAK,CAACX,KAA1B;;AACA,cAAID,YAAY,CAACgI,QAAD,CAAhB,EAA4B;AAC1B,gBAAIsB,UAAJ,EAAgB;AACdtB,cAAAA,QAAQ,GAAGA,QAAQ,CAAC0B,WAAT,EAAX;AACAD,cAAAA,aAAa,GAAGA,aAAa,CAACC,WAAd,EAAhB;AACD;;AACD,gBAAM7I,MAAM,GAAGkI,aAAa,CAACf,QAAD,EAAWyB,aAAX,CAA5B;AACA,gBAAME,YAAY,GAAG5H,MAAM,CAACC,IAAP,CAAYnB,MAAZ,EAAoBP,MAAzC;;AACA,gBAAImJ,aAAa,KAAKzB,QAAlB,IAA8B2B,YAAY,GAAG,CAAjD,EAAoD;AAClD,kBAAIA,YAAY,GAAG,CAAnB,EAAsB;AACpB/I,gBAAAA,KAAK,CAACC,MAAN,GAAeA,MAAf;AACD;;AACDuD,cAAAA,UAAU,CAACG,IAAX,CAAgB3D,KAAhB;AACD;AACF,WAbD,MAaO;AACLwD,YAAAA,UAAU,CAACI,KAAX,CAAiB,IAAIiE,KAAJ,CAAUrK,aAAV,CAAjB;AACD;AACF,SAnB+B;AAoBhCoG,QAAAA,KAAK,EAAEJ,UAAU,CAACI,KApBc;AAqBhCC,QAAAA,QAAQ,EAAEL,UAAU,CAACK;AArBW,OAArB,CAAb;AAuBA,aAAO,YAAM;AACX,YAAItB,cAAc,YAAYqF,MAA9B,EAAsC;AACpC,cAAMe,MAAK,GAAGpG,cAAc,CAACyF,SAA7B;;AACA,cAAMgB,kBAAkB,GAAGL,MAAK,CAACC,OAAN,CAAcxB,QAAd,CAA3B;;AACA,cAAI4B,kBAAkB,GAAG,CAAC,CAA1B,EAA6B;AAC3BL,YAAAA,MAAK,CAACM,MAAN,CAAaD,kBAAb,EAAiC,CAAjC;AACD;AACF;;AACDvF,QAAAA,IAAI,CAACK,WAAL;AACD,OATD;AAUD,KAlCD,CADK;AAAA,GAAP;AAoCD;AAED;AACA;AACA;AACA;;AACO,SAASmD,OAAT,CAAiB/B,MAAjB,EAAyB;AAC9B,SAAO,UAAC5B,UAAD;AAAA,WACL,IAAIC,UAAJ,CAAe,UAACC,UAAD,EAAgB;AAC7B,UAAMC,IAAI,GAAGH,UAAU,CAACI,SAAX,CAAqB;AAChCC,QAAAA,IADgC,gBAC3B3D,KAD2B,EACpB;AACV,cAAI;AACFA,YAAAA,KAAK,CAACgD,MAAN,GAAekG,GAAY,CAAClJ,KAAK,CAACgD,MAAP,EAAekC,MAAf,CAA3B;AACAlF,YAAAA,KAAK,CAACkD,UAAN,GAAmBgG,GAAY,CAAClJ,KAAK,CAACkD,UAAP,EAAmBgC,MAAnB,CAA/B;AACA1B,YAAAA,UAAU,CAACG,IAAX,CAAgB3D,KAAhB;AACD,WAJD,CAIE,OAAOmE,CAAP,EAAU;AACVX,YAAAA,UAAU,CAACI,KAAX,CAAiBO,CAAjB;AACD;AACF,SAT+B;AAUhCP,QAAAA,KAAK,EAAEJ,UAAU,CAACI,KAVc;AAWhCC,QAAAA,QAAQ,EAAEL,UAAU,CAACK;AAXW,OAArB,CAAb;AAaA,aAAO,YAAM;AACXJ,QAAAA,IAAI,CAACK,WAAL;AACD,OAFD;AAGD,KAjBD,CADK;AAAA,GAAP;AAmBD;AAED;AACA;AACA;AACA;;AACO,SAASqF,OAAT,CAAiB5G,cAAjB,EAAiC;AACtC,SAAO,UAACe,UAAD;AAAA,WACL,IAAIC,UAAJ,CAAe,UAACC,UAAD,EAAgB;AAC7B,UAAMC,IAAI,GAAGH,UAAU,CAACI,SAAX,CAAqB;AAChCC,QAAAA,IADgC,gBAC3B3D,KAD2B,EACpB;AACV,cAAIuC,cAAc,YAAYqF,MAA9B,EAAsC;AACpC,gBAAMe,KAAK,GAAGpG,cAAc,CAACyF,SAA7B;;AACA,gBAAIW,KAAK,CAACjJ,MAAN,GAAe,CAAnB,EAAsB;AACpB,kBAAM0J,YAAY,GAAGpJ,KAAK,CAACX,KAA3B;AACA,kBAAImH,KAAK,GAAG,KAAZ;;AACA,mBAAK,IAAI1F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6H,KAAK,CAACjJ,MAA1B,EAAkCoB,CAAC,EAAnC,EAAuC;AACrC,oBACE6H,KAAK,CAAC7H,CAAD,CAAL,KAAasI,YAAb,IACAjI,MAAM,CAACC,IAAP,CAAY+G,aAAa,CAACQ,KAAK,CAAC7H,CAAD,CAAN,EAAWsI,YAAX,CAAzB,EAAmD1J,MAFrD,EAGE;AACA8G,kBAAAA,KAAK,GAAG,IAAR;AACA;AACD;AACF;;AACD,kBAAI,CAACA,KAAL,EAAY;AACVxG,gBAAAA,KAAK,CAACmJ,OAAN,GAAgB,IAAhB;AACA3F,gBAAAA,UAAU,CAACG,IAAX,CAAgB3D,KAAhB;AACD;AACF;AACF;AACF,SAtB+B;AAuBhC4D,QAAAA,KAAK,EAAEJ,UAAU,CAACI,KAvBc;AAwBhCC,QAAAA,QAAQ,EAAEL,UAAU,CAACK;AAxBW,OAArB,CAAb;AA0BA,aAAO,YAAM;AACXJ,QAAAA,IAAI,CAACK,WAAL;AACD,OAFD;AAGD,KA9BD,CADK;AAAA,GAAP;AAgCD;;AAED,SAASuF,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+C;AAC7CjK,EAAAA,IAAI,CAAC4B,MAAM,CAACC,IAAP,CAAYkI,KAAZ,CAAD,EAAqB,UAAChI,GAAD,EAAS;AAChC,QAAIrC,QAAQ,CAACqK,KAAK,CAAChI,GAAD,CAAN,CAAR,IAAwBrC,QAAQ,CAACsK,MAAM,CAACjI,GAAD,CAAP,CAApC,EAAmD;AACjD+H,MAAAA,cAAc,CAACC,KAAK,CAAChI,GAAD,CAAN,EAAaiI,MAAM,CAACjI,GAAD,CAAnB,EAA0BkI,MAA1B,CAAd;AACD,KAFD,MAEO;AACLA,MAAAA,MAAM,SAAN,GAAeF,KAAK,CAAChI,GAAD,CAAL,KAAeiI,MAAM,CAACjI,GAAD,CAApC;AACD;AACF,GANG,CAAJ;AAOD;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASmI,KAAT,GAA2C;AAAA,MAA5BrI,IAA4B,uEAArB1D,aAAqB;AAAA,MAANgM,IAAM;AAChD,MAAID,KAAK,GAAG,EAAZ;;AACA,MAAI,QAAOrI,IAAP,MAAgBnD,WAApB,EAAiC;AAC/ByL,IAAAA,IAAI,GAAGtI,IAAP;AACAA,IAAAA,IAAI,GAAG1D,aAAP;AACD;;AACD,SAAO,UAAC4F,UAAD;AAAA,WACL,IAAIC,UAAJ,CAAe,UAACC,UAAD,EAAgB;AAC7B,UAAMC,IAAI,GAAGH,UAAU,CAACI,SAAX,CAAqB;AAChCC,QAAAA,IADgC,gBAC3B3D,KAD2B,EACpB;AACVT,UAAAA,IAAI,CAAC6B,IAAD,EAAO,UAACE,GAAD,EAAS;AAClB,gBAAIoI,IAAI,IAAIzK,QAAQ,CAACe,KAAK,CAACsB,GAAD,CAAN,CAAhB,IAAgCrC,QAAQ,CAACwK,KAAK,CAACnI,GAAD,CAAN,CAA5C,EAA0D;AACxD,kBAAMkI,MAAM,GAAG,EAAf;AACAH,cAAAA,cAAc,CAACrJ,KAAK,CAACsB,GAAD,CAAN,EAAamI,KAAK,CAACnI,GAAD,CAAlB,EAAyBkI,MAAzB,CAAd;;AACA,kBAAIA,MAAM,SAAV,EAAkB;AAChBjI,gBAAAA,MAAM,CAACkI,KAAD,EAAQzJ,KAAR,CAAN;AACAwD,gBAAAA,UAAU,CAACG,IAAX,CAAgB3D,KAAhB;AACA,uBAAO,KAAP;AACD;AACF,aARD,MAQO,IAAIA,KAAK,CAACsB,GAAD,CAAL,KAAemI,KAAK,CAACnI,GAAD,CAAxB,EAA+B;AACpCC,cAAAA,MAAM,CAACkI,KAAD,EAAQzJ,KAAR,CAAN;AACAwD,cAAAA,UAAU,CAACG,IAAX,CAAgB3D,KAAhB;AACA,qBAAO,KAAP,CAHoC;AAIrC;AACF,WAdG,CAAJ;AAeD,SAjB+B;AAkBhC4D,QAAAA,KAAK,EAAEJ,UAAU,CAACI,KAlBc;AAmBhCC,QAAAA,QAAQ,EAAEL,UAAU,CAACK;AAnBW,OAArB,CAAb;AAqBA,aAAO,YAAM;AACXJ,QAAAA,IAAI,CAACK,WAAL;AACA2F,QAAAA,KAAK,GAAG,EAAR;AACD,OAHD;AAID,KA1BD,CADK;AAAA,GAAP;AA4BD;;;;;;;;;;;;"}